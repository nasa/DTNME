/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.35
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */


#ifdef __cplusplus
template<typename T> class SwigValueWrapper {
    T *tt;
public:
    SwigValueWrapper() : tt(0) { }
    SwigValueWrapper(const SwigValueWrapper<T>& rhs) : tt(new T(*rhs.tt)) { }
    SwigValueWrapper(const T& t) : tt(new T(t)) { }
    ~SwigValueWrapper() { delete tt; } 
    SwigValueWrapper& operator=(const T& t) { delete tt; tt = new T(t); return *this; }
    operator T&() const { return *tt; }
    T *operator&() { return tt; }
private:
    SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__)) 
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__)) 
# else
#   define SWIGUNUSED 
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED 
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif 
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif



#include <stdio.h>
#include <tcl.h>
#include <errno.h>
#include <stdlib.h>
#include <stdarg.h>
#include <ctype.h>

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic CAPI SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the swig runtime code.
  In 99.9% of the cases, swig just needs to declare them as 'static'.
  
  But only do this if is strictly necessary, ie, if you have problems
  with your compiler or so.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/* 
   Flags/methods for returning states.
   
   The swig conversion methods, as ConvertPtr, return and integer 
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).
   
   Use the following macros/flags to set or process the returning
   states.
   
   In old swig versions, you usually write code as:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit as:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   that seems to be the same, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }
    
   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   requires also to SWIG_ConvertPtr to return new result values, as

      int SWIG_ConvertPtr(obj, ptr,...) {         
        if (<obj is ok>) {			       
          if (<need new object>) {		       
            *ptr = <ptr to new allocated object>; 
            return SWIG_NEWOBJ;		       
          } else {				       
            *ptr = <ptr to old object>;	       
            return SWIG_OLDOBJ;		       
          } 				       
        } else {				       
          return SWIG_BADOBJ;		       
        }					       
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   swig errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call
 
      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()


 */
#define SWIG_OK                    (0) 
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)  

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))


/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) { 
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) { 
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0; 
}
#else /* no cast-rank mode */
#  define SWIG_AddCast
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif




#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/* 
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCompare(const char *nb, const char *tb) {
  int equiv = 0;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (!equiv && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = (SWIG_TypeNameComp(nb, ne, tb, te) == 0) ? 1 : 0;
    if (*ne) ++ne;
  }
  return equiv;
}


/* think of this as a c++ template<> or a scheme macro */
#define SWIG_TypeCheck_Template(comparison, ty)         \
  if (ty) {                                             \
    swig_cast_info *iter = ty->cast;                    \
    while (iter) {                                      \
      if (comparison) {                                 \
        if (iter == ty->cast) return iter;              \
        /* Move iter to the top of the linked list */   \
        iter->prev->next = iter->next;                  \
        if (iter->next)                                 \
          iter->next->prev = iter->prev;                \
        iter->next = ty->cast;                          \
        iter->prev = 0;                                 \
        if (ty->cast) ty->cast->prev = iter;            \
        ty->cast = iter;                                \
        return iter;                                    \
      }                                                 \
      iter = iter->next;                                \
    }                                                   \
  }                                                     \
  return 0

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  SWIG_TypeCheck_Template(strcmp(iter->type->name, c) == 0, ty);
}

/* Same as previous function, except strcmp is replaced with a pointer comparison */
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *into) {
  SWIG_TypeCheck_Template(iter->type == from, into);
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/* 
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/* 
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;
  
  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }    
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}
  
/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start, 
                            swig_module_info *end, 
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      //register size_t l = 0;
      size_t l = 0;
      //register size_t r = iter->size - 1;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	//register size_t i = (l + r) >> 1; 
	size_t i = (l + r) >> 1; 
	const char *iname = iter->types[i]->name;
	if (iname) {
	  //register int compare = strcmp(name, iname);
	  int compare = strcmp(name, iname);
	  if (compare == 0) {	    
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).
  
  We start searching at module start, and finish searching when start == end.  
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start, 
                     swig_module_info *end, 
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      //register size_t i = 0;
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }
  
  /* neither found a match */
  return 0;
}

/* 
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  //register const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *u = (unsigned char *) ptr;
  //register const unsigned char *eu =  u + sz;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    //register unsigned char uu = *u;
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/* 
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  //register unsigned char *u = (unsigned char *) ptr;
  unsigned char *u = (unsigned char *) ptr;
  //register const unsigned char *eu = u + sz;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    //register char d = *(c++);
    char d = *(c++);
    //register unsigned char uu;
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = ((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = ((d - ('a'-10)) << 4);
    else 
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (d - ('a'-10));
    else 
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/* 
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1 
#define  SWIG_IOError        	   -2 
#define  SWIG_RuntimeError   	   -3 
#define  SWIG_IndexError     	   -4 
#define  SWIG_TypeError      	   -5 
#define  SWIG_DivisionByZero 	   -6 
#define  SWIG_OverflowError  	   -7 
#define  SWIG_SyntaxError    	   -8 
#define  SWIG_ValueError     	   -9 
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12 
#define  SWIG_NullReferenceError   -13



/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGINTERN const char*
SWIG_Tcl_ErrorType(int code) {
  const char* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = "MemoryError";
    break;
  case SWIG_IOError:
    type = "IOError";
    break;
  case SWIG_RuntimeError:
    type = "RuntimeError";
    break;
  case SWIG_IndexError:
    type = "IndexError";
    break;
  case SWIG_TypeError:
    type = "TypeError";
    break;
  case SWIG_DivisionByZero:
    type = "ZeroDivisionError";
    break;
  case SWIG_OverflowError:
    type = "OverflowError";
    break;
  case SWIG_SyntaxError:
    type = "SyntaxError";
    break;
  case SWIG_ValueError:
    type = "ValueError";
    break;
  case SWIG_SystemError:
    type = "SystemError";
    break;
  case SWIG_AttributeError:
    type = "AttributeError";
    break;
  default:
    type = "RuntimeError";
  }
  return type;
}


SWIGINTERN void
SWIG_Tcl_SetErrorObj(Tcl_Interp *interp, const char *ctype, Tcl_Obj *obj)
{
  Tcl_ResetResult(interp);
  Tcl_SetObjResult(interp, obj);
  Tcl_SetErrorCode(interp, "SWIG", ctype, NULL);
}

SWIGINTERN void
SWIG_Tcl_SetErrorMsg(Tcl_Interp *interp, const char *ctype, const char *mesg)
{
  Tcl_ResetResult(interp);
  Tcl_SetErrorCode(interp, "SWIG", ctype, NULL);
  Tcl_AppendResult(interp, ctype, " ", mesg, NULL);
  /*
  Tcl_AddErrorInfo(interp, ctype);
  Tcl_AddErrorInfo(interp, " ");
  Tcl_AddErrorInfo(interp, mesg);
  */
}

SWIGINTERNINLINE void
SWIG_Tcl_AddErrorMsg(Tcl_Interp *interp, const char* mesg)
{
  Tcl_AddErrorInfo(interp, mesg);
}



/* -----------------------------------------------------------------------------
 * SWIG API. Portion that goes into the runtime
 * ----------------------------------------------------------------------------- */
#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_TCL_POINTER 4
#define SWIG_TCL_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
    int type;
    char *name;
    long lvalue;
    double dvalue;
    void   *pvalue;
    swig_type_info **ptype;
} swig_const_info;

typedef int   (*swig_wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef int   (*swig_wrapper_func)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
typedef char *(*swig_variable_func)(ClientData, Tcl_Interp *, char *, char *, int);
typedef void  (*swig_delete_func)(ClientData);

typedef struct swig_method {
  const char     *name;
  swig_wrapper   method;
} swig_method;

typedef struct swig_attribute {
  const char     *name;
  swig_wrapper   getmethod;
  swig_wrapper   setmethod;
} swig_attribute;

typedef struct swig_class {
  const char         *name;
  swig_type_info   **type;
  swig_wrapper       constructor;
  void              (*destructor)(void *);
  swig_method        *methods;
  swig_attribute     *attributes;
  struct swig_class **bases;
  const char              **base_names;
  swig_module_info   *module;
} swig_class;

typedef struct swig_instance {
  Tcl_Obj       *thisptr;
  void          *thisvalue;
  swig_class   *classptr;
  int            destroy;
  Tcl_Command    cmdtok;
} swig_instance;

/* Structure for command table */
typedef struct {
  const char *name;
  int       (*wrapper)(ClientData, Tcl_Interp *, int, Tcl_Obj *CONST []);
  ClientData  clientdata;
} swig_command_info;

/* Structure for variable linking table */
typedef struct {
  const char *name;
  void *addr;
  char * (*get)(ClientData, Tcl_Interp *, char *, char *, int);
  char * (*set)(ClientData, Tcl_Interp *, char *, char *, int);
} swig_var_info;


/* -----------------------------------------------------------------------------*
 *  Install a constant object 
 * -----------------------------------------------------------------------------*/

static Tcl_HashTable   swigconstTable;
static int             swigconstTableinit = 0;

SWIGINTERN void
SWIG_Tcl_SetConstantObj(Tcl_Interp *interp, const char* name, Tcl_Obj *obj) {
  int newobj;
  Tcl_ObjSetVar2(interp,Tcl_NewStringObj(name,-1), NULL, obj, TCL_GLOBAL_ONLY);
  Tcl_SetHashValue(Tcl_CreateHashEntry(&swigconstTable, name, &newobj), (ClientData) obj);
}

SWIGINTERN Tcl_Obj *
SWIG_Tcl_GetConstantObj(const char *key) {
  Tcl_HashEntry *entryPtr;
  if (!swigconstTableinit) return 0;
  entryPtr = Tcl_FindHashEntry(&swigconstTable, key);
  if (entryPtr) {
    return (Tcl_Obj *) Tcl_GetHashValue(entryPtr);
  }
  return 0;
}

#ifdef __cplusplus
}
#endif



/* -----------------------------------------------------------------------------
 * See the LICENSE file for information on copyright, usage and redistribution
 * of SWIG, and the README file for authors - http://www.swig.org/release.html.
 *
 * tclrun.swg
 *
 * This file contains the runtime support for Tcl modules and includes
 * code for managing global variables and pointer type checking.
 * ----------------------------------------------------------------------------- */

/* Common SWIG API */

/* for raw pointers */
#define SWIG_ConvertPtr(oc, ptr, ty, flags)             SWIG_Tcl_ConvertPtr(interp, oc, ptr, ty, flags)
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Tcl_NewPointerObj(ptr, type, flags)

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Tcl_ConvertPacked(interp, obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Tcl_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_Tcl_ConvertPtr(interp, obj, pptr, type, flags)
#define SWIG_NewInstanceObj(thisvalue, type, flags)     SWIG_Tcl_NewInstanceObj(interp, thisvalue, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Tcl_ConvertPtr(interp, obj, pptr, type, 0)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Tcl_NewPointerObj(ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Tcl_ConvertPacked(interp,obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Tcl_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Tcl_GetModule((Tcl_Interp *) (clientdata))	     
#define SWIG_SetModule(clientdata, pointer)          	SWIG_Tcl_SetModule((Tcl_Interp *) (clientdata), pointer)


/* Error manipulation */

#define SWIG_ErrorType(code)                            SWIG_Tcl_ErrorType(code)                                      
#define SWIG_Error(code, msg)            		SWIG_Tcl_SetErrorMsg(interp, SWIG_Tcl_ErrorType(code), msg)
#define SWIG_fail                        		goto fail						    


/* Tcl-specific SWIG API */

#define SWIG_Acquire(ptr)                               SWIG_Tcl_Acquire(ptr)                                     
#define SWIG_MethodCommand                           	SWIG_Tcl_MethodCommand				       
#define SWIG_Disown(ptr)                             	SWIG_Tcl_Disown(ptr)				       
#define SWIG_ConvertPtrFromString(c, ptr, ty, flags) 	SWIG_Tcl_ConvertPtrFromString(interp, c, ptr, ty, flags)  
#define SWIG_MakePtr(c, ptr, ty, flags)              	SWIG_Tcl_MakePtr(c, ptr, ty, flags)		       
#define SWIG_PointerTypeFromString(c)                	SWIG_Tcl_PointerTypeFromString(c)			       
#define SWIG_GetArgs                                 	SWIG_Tcl_GetArgs					       
#define SWIG_GetConstantObj(key)                     	SWIG_Tcl_GetConstantObj(key)			       
#define SWIG_ObjectConstructor                       	SWIG_Tcl_ObjectConstructor				       
#define SWIG_Thisown(ptr)                            	SWIG_Tcl_Thisown(ptr)				       
#define SWIG_ObjectDelete                            	SWIG_Tcl_ObjectDelete				       


#define SWIG_TCL_DECL_ARGS_2(arg1, arg2)                (Tcl_Interp *interp SWIGUNUSED, arg1, arg2)
#define SWIG_TCL_CALL_ARGS_2(arg1, arg2)                (interp, arg1, arg2)
/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

/* For backward compatibility only */
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_GetConstant        SWIG_GetConstantObj
#define SWIG_Tcl_GetConstant    SWIG_Tcl_GetConstantObj

#include "assert.h"

#ifdef __cplusplus
extern "C" {
#if 0
} /* cc-mode */
#endif
#endif

/* Object support */

SWIGRUNTIME Tcl_HashTable*
SWIG_Tcl_ObjectTable(void) {
  static Tcl_HashTable  swigobjectTable;
  static int            swigobjectTableinit = 0;
  if (!swigobjectTableinit) {
    Tcl_InitHashTable(&swigobjectTable, TCL_ONE_WORD_KEYS);
    swigobjectTableinit = 1;
  }
  return &swigobjectTable;
}

/* Acquire ownership of a pointer */
SWIGRUNTIME void
SWIG_Tcl_Acquire(void *ptr) {
  int newobj;
  Tcl_CreateHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr, &newobj);
}

SWIGRUNTIME int
SWIG_Tcl_Thisown(void *ptr) {
  if (Tcl_FindHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr)) {
    return 1;
  }
  return 0;
}

/* Disown a pointer.  Returns 1 if we owned it to begin with */
SWIGRUNTIME int
SWIG_Tcl_Disown(void *ptr) {
  Tcl_HashEntry *entryPtr = Tcl_FindHashEntry(SWIG_Tcl_ObjectTable(), (char *) ptr);
  if (entryPtr) {
    Tcl_DeleteHashEntry(entryPtr);
    return 1;
  }
  return 0;
}

/* Convert a pointer value */
SWIGRUNTIME int
SWIG_Tcl_ConvertPtrFromString(Tcl_Interp *interp, const char *c, void **ptr, swig_type_info *ty, int flags) {
  swig_cast_info *tc;
  /* Pointer values must start with leading underscore */
  while (*c != '_') {
    *ptr = (void *) 0;
    if (strcmp(c,"NULL") == 0) return SWIG_OK;

    /* Empty string: not a pointer */
    if (*c == 0) return SWIG_ERROR; 

    /* Hmmm. It could be an object name. */

    /* Check if this is a command at all. Prevents <c> cget -this         */
    /* from being called when c is not a command, firing the unknown proc */
    if (Tcl_VarEval(interp,"info commands ", c, (char *) NULL) == TCL_OK) {
      Tcl_Obj *result = Tcl_GetObjResult(interp);
      if (*(Tcl_GetStringFromObj(result, NULL)) == 0) {
        /* It's not a command, so it can't be a pointer */
        Tcl_ResetResult(interp);
        return SWIG_ERROR;
      }
    } else {
      /* This will only fail if the argument is multiple words. */
      /* Multiple words are also not commands.                  */
      Tcl_ResetResult(interp);
      return SWIG_ERROR;
    }

    /* Check if this is really a SWIG pointer */
    if (Tcl_VarEval(interp,c," cget -this", (char *) NULL) != TCL_OK) {
      Tcl_ResetResult(interp);
      return SWIG_ERROR;
    }

    c = Tcl_GetStringFromObj(Tcl_GetObjResult(interp), NULL);
  }

  c++;
  c = SWIG_UnpackData(c,ptr,sizeof(void *));
  if (ty) {
    tc = c ? SWIG_TypeCheck(c,ty) : 0;
    if (!tc) {
      return SWIG_ERROR;
    }
    if (flags & SWIG_POINTER_DISOWN) {
      SWIG_Disown((void *) *ptr);
    }
    {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,(void *) *ptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    }
  }
  return SWIG_OK;
}

/* Convert a pointer value */
SWIGRUNTIMEINLINE int
SWIG_Tcl_ConvertPtr(Tcl_Interp *interp, Tcl_Obj *oc, void **ptr, swig_type_info *ty, int flags) {
  return SWIG_Tcl_ConvertPtrFromString(interp, Tcl_GetStringFromObj(oc,NULL), ptr, ty, flags);
}

/* Convert a pointer value */
SWIGRUNTIME char *
SWIG_Tcl_PointerTypeFromString(char *c) {
  char d;
  /* Pointer values must start with leading underscore. NULL has no type */
  if (*c != '_') {
    return 0;
  }
  c++;
  /* Extract hex value from pointer */
  while ((d = *c)) {
    if (!(((d >= '0') && (d <= '9')) || ((d >= 'a') && (d <= 'f')))) break;
    c++;
  }
  return c;
}

/* Convert a packed value value */
SWIGRUNTIME int
SWIG_Tcl_ConvertPacked(Tcl_Interp *SWIGUNUSEDPARM(interp) , Tcl_Obj *obj, void *ptr, int sz, swig_type_info *ty) {
  swig_cast_info *tc;
  const char  *c;

  if (!obj) goto type_error;
  c = Tcl_GetStringFromObj(obj,NULL);
  /* Pointer values must start with leading underscore */
  if (*c != '_') goto type_error;
  c++;
  c = SWIG_UnpackData(c,ptr,sz);
  if (ty) {
    tc = SWIG_TypeCheck(c,ty);
    if (!tc) goto type_error;
  }
  return SWIG_OK;

 type_error:

  return SWIG_ERROR;
}


/* Take a pointer and convert it to a string */
SWIGRUNTIME void
SWIG_Tcl_MakePtr(char *c, void *ptr, swig_type_info *ty, int flags) {
  if (ptr) {
    *(c++) = '_';
    c = SWIG_PackData(c,&ptr,sizeof(void *));
    strcpy(c,ty->name);
  } else {
    strcpy(c,(char *)"NULL");
  }
  //dzdebug  flags = 0;
  (void) flags;
}

/* Create a new pointer object */
SWIGRUNTIMEINLINE Tcl_Obj *
SWIG_Tcl_NewPointerObj(void *ptr, swig_type_info *type, int flags) {
  Tcl_Obj *robj;
  char result[SWIG_BUFFER_SIZE];
  SWIG_MakePtr(result,ptr,type,flags);
  robj = Tcl_NewStringObj(result,-1);
  return robj;
}

SWIGRUNTIME Tcl_Obj *
SWIG_Tcl_NewPackedObj(void *ptr, int sz, swig_type_info *type) {
  char result[1024];
  char *r = result;
  if ((2*sz + 1 + strlen(type->name)) > 1000) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  strcpy(r,type->name);
  return Tcl_NewStringObj(result,-1);
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

SWIGRUNTIME swig_module_info * 
SWIG_Tcl_GetModule(Tcl_Interp *interp) {
  const char *data;
  swig_module_info *ret = 0;
  
  /* first check if pointer already created */
  data = Tcl_GetVar(interp, (char *)"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, TCL_GLOBAL_ONLY);
  if (data) {
    SWIG_UnpackData(data, &ret, sizeof(swig_type_info **));
  }

  return ret;
}

SWIGRUNTIME void
SWIG_Tcl_SetModule(Tcl_Interp *interp, swig_module_info *module) {
  char buf[SWIG_BUFFER_SIZE];
  char *data;

  /* create a new pointer */
  data = SWIG_PackData(buf, &module, sizeof(swig_type_info **));
  *data = 0;
  Tcl_SetVar(interp, (char *)"swig_runtime_data_type_pointer" SWIG_RUNTIME_VERSION SWIG_TYPE_TABLE_NAME, buf, 0);
}

/* -----------------------------------------------------------------------------*
 *  Object auxiliars
 * -----------------------------------------------------------------------------*/


SWIGRUNTIME void
SWIG_Tcl_ObjectDelete(ClientData clientData) {
  swig_instance *si = (swig_instance *) clientData;
  if ((si) && (si->destroy) && (SWIG_Disown(si->thisvalue))) {
    if (si->classptr->destructor) {
      (si->classptr->destructor)(si->thisvalue);
    }
  }
  Tcl_DecrRefCount(si->thisptr);
  free(si);
}

/* Function to invoke object methods given an instance */
SWIGRUNTIME int
SWIG_Tcl_MethodCommand(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST _objv[]) {
  char *method,   *attrname;
  swig_instance   *inst = (swig_instance *) clientData;
  swig_method     *meth;
  swig_attribute  *attr;
  Tcl_Obj         *oldarg;
  Tcl_Obj         **objv;
  int              rcode;
  swig_class      *cls;
  swig_class      *cls_stack[64];
  int              cls_stack_bi[64];
  int              cls_stack_top = 0;
  int              numconf = 2;
  int              bi;

  objv = (Tcl_Obj **) _objv;
  if (objc < 2) {
    Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
    return TCL_ERROR;
  }
  method = Tcl_GetStringFromObj(objv[1],NULL);
  if (strcmp(method,"-acquire") == 0) {
    inst->destroy = 1;
    SWIG_Acquire(inst->thisvalue);
    return TCL_OK;
  }
  if (strcmp(method,"-disown") == 0) {
    if (inst->destroy) {
      SWIG_Disown(inst->thisvalue);
    }
    inst->destroy = 0;
    return TCL_OK;
  }
  if (strcmp(method,"-delete") == 0) {
    Tcl_DeleteCommandFromToken(interp,inst->cmdtok);
    return TCL_OK;
  }
  cls_stack[cls_stack_top] = inst->classptr;
  cls_stack_bi[cls_stack_top] = -1;
  cls = inst->classptr;
  while (1) {
    bi = cls_stack_bi[cls_stack_top];
    cls = cls_stack[cls_stack_top];
    if (bi != -1) {
      if (!cls->bases[bi] && cls->base_names[bi]) {
        /* lookup and cache the base class */
	swig_type_info *info = SWIG_TypeQueryModule(cls->module, cls->module, cls->base_names[bi]);
	if (info) cls->bases[bi] = (swig_class *) info->clientdata;
      }
      cls = cls->bases[bi];
      if (cls) {
        cls_stack_bi[cls_stack_top]++;
        cls_stack_top++;
        cls_stack[cls_stack_top] = cls;
        cls_stack_bi[cls_stack_top] = -1;
        continue;
      }
    }
    if (!cls) {
      cls_stack_top--;
      if (cls_stack_top < 0) break;
      else continue;
    }
    cls_stack_bi[cls_stack_top]++;

    meth = cls->methods;
    /* Check for methods */
    while (meth && meth->name) {
      if (strcmp(meth->name,method) == 0) {
        oldarg = objv[1];
        objv[1] = inst->thisptr;
        Tcl_IncrRefCount(inst->thisptr);
        rcode = (*meth->method)(clientData,interp,objc,objv);
        objv[1] = oldarg;
        Tcl_DecrRefCount(inst->thisptr);
        return rcode;
      }
      meth++;
    }
    /* Check class methods for a match */
    if (strcmp(method,"cget") == 0) {
      if (objc < 3) {
        Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
        return TCL_ERROR;
      }
      attrname = Tcl_GetStringFromObj(objv[2],NULL);
      attr = cls->attributes;
      while (attr && attr->name) {
        if ((strcmp(attr->name, attrname) == 0) && (attr->getmethod)) {
          oldarg = objv[1];
          objv[1] = inst->thisptr;
          Tcl_IncrRefCount(inst->thisptr);
          rcode = (*attr->getmethod)(clientData,interp,2, objv);
          objv[1] = oldarg;
          Tcl_DecrRefCount(inst->thisptr);
          return rcode;
        }
        attr++;
      }
      if (strcmp(attrname, "-this") == 0) {
        Tcl_SetObjResult(interp, Tcl_DuplicateObj(inst->thisptr));
        return TCL_OK;
      }
      if (strcmp(attrname, "-thisown") == 0) {
        if (SWIG_Thisown(inst->thisvalue)) {
          Tcl_SetResult(interp,(char*)"1",TCL_STATIC);
        } else {
          Tcl_SetResult(interp,(char*)"0",TCL_STATIC);
        }
        return TCL_OK;
      }
    } else if (strcmp(method, "configure") == 0) {
      int i;
      if (objc < 4) {
        Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
        return TCL_ERROR;
      }
      i = 2;
      while (i < objc) {
        attrname = Tcl_GetStringFromObj(objv[i],NULL);
        attr = cls->attributes;
        while (attr && attr->name) {
          if ((strcmp(attr->name, attrname) == 0) && (attr->setmethod)) {
            oldarg = objv[i];
            objv[i] = inst->thisptr;
            Tcl_IncrRefCount(inst->thisptr);
            rcode = (*attr->setmethod)(clientData,interp,3, &objv[i-1]);
            objv[i] = oldarg;
            Tcl_DecrRefCount(inst->thisptr);
            if (rcode != TCL_OK) return rcode;
            numconf += 2;
          }
          attr++;
        }
        i+=2;
      }
    }
  }
  if (strcmp(method,"configure") == 0) {
    if (numconf >= objc) {
      return TCL_OK;
    } else {
      Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
      return TCL_ERROR;
    }
  }
  if (strcmp(method,"cget") == 0) {
    Tcl_SetResult(interp,(char *) "Invalid attribute name.", TCL_STATIC);
    return TCL_ERROR;
  }
  Tcl_SetResult(interp, (char *) "Invalid method. Must be one of: configure cget -acquire -disown -delete", TCL_STATIC);
  cls = inst->classptr;
  bi = 0;
  while (cls) {
    meth = cls->methods;
    while (meth && meth->name) {
      char *cr = (char *) Tcl_GetStringResult(interp);
      size_t meth_len = strlen(meth->name);
      char* where = strchr(cr,':');
      while(where) {
        where = strstr(where, meth->name);
        if(where) {
          if(where[-1] == ' ' && (where[meth_len] == ' ' || where[meth_len]==0)) {
            break;
          } else {
            where++;
          }
        }
      }

      if (!where)
        Tcl_AppendElement(interp, (char *) meth->name);
      meth++;
    }
    cls = inst->classptr->bases[bi++];
  }
  return TCL_ERROR;
}

/* This function takes the current result and turns it into an object command */
SWIGRUNTIME Tcl_Obj *
SWIG_Tcl_NewInstanceObj(Tcl_Interp *interp, void *thisvalue, swig_type_info *type, int flags) {
  Tcl_Obj *robj = SWIG_NewPointerObj(thisvalue, type,0);
  /* Check to see if this pointer belongs to a class or not */
  if ((type->clientdata) && (interp)) {
    Tcl_CmdInfo    ci;
    char          *name;
    name = Tcl_GetStringFromObj(robj,NULL);
    if (!Tcl_GetCommandInfo(interp,name, &ci) || (flags)) {
      swig_instance *newinst = (swig_instance *) malloc(sizeof(swig_instance));
      newinst->thisptr = Tcl_DuplicateObj(robj);
      Tcl_IncrRefCount(newinst->thisptr);
      newinst->thisvalue = thisvalue;
      newinst->classptr = (swig_class *) type->clientdata;
      newinst->destroy = flags;
      newinst->cmdtok = Tcl_CreateObjCommand(interp, Tcl_GetStringFromObj(robj,NULL), (swig_wrapper_func) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
      if (flags) {
        SWIG_Acquire(thisvalue);
      }
    }
  }
  return robj;
}

/* Function to create objects */
SWIGRUNTIME int
SWIG_Tcl_ObjectConstructor(ClientData clientData, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj          *newObj = 0;
  void             *thisvalue = 0;
  swig_instance   *newinst = 0;
  swig_class      *classptr = (swig_class *) clientData;
  swig_wrapper     cons = 0;
  char             *name = 0;
  int               firstarg = 0;
  int               thisarg = 0;
  int               destroy = 1;

  if (!classptr) {
    Tcl_SetResult(interp, (char *) "swig: internal runtime error. No class object defined.", TCL_STATIC);
    return TCL_ERROR;
  }
  cons = classptr->constructor;
  if (objc > 1) {
    char *s = Tcl_GetStringFromObj(objv[1],NULL);
    if (strcmp(s,"-this") == 0) {
      thisarg = 2;
      cons = 0;
    } else if (strcmp(s,"-args") == 0) {
      firstarg = 1;
    } else if (objc == 2) {
      firstarg = 1;
      name = s;
    } else if (objc >= 3) {
      char *s1;
      name = s;
      s1 = Tcl_GetStringFromObj(objv[2],NULL);
      if (strcmp(s1,"-this") == 0) {
	thisarg = 3;
	cons = 0;
      } else {
	firstarg = 1;
      }
    }
  }
  if (cons) {
    int result;
    result = (*cons)(0, interp, objc-firstarg, &objv[firstarg]);
    if (result != TCL_OK) {
      return result;
    }
    newObj = Tcl_DuplicateObj(Tcl_GetObjResult(interp));
    if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
  } else if (thisarg > 0) {
    if (thisarg < objc) {
      destroy = 0;
      newObj = Tcl_DuplicateObj(objv[thisarg]);
      if (!name) name = Tcl_GetStringFromObj(newObj,NULL);
    } else {
      Tcl_SetResult(interp, (char *) "wrong # args.", TCL_STATIC);
      return TCL_ERROR;
    }
  } else {
    Tcl_SetResult(interp, (char *) "No constructor available.", TCL_STATIC);
    return TCL_ERROR;
  }
  if (SWIG_Tcl_ConvertPtr(interp,newObj, (void **) &thisvalue, *(classptr->type), 0) != SWIG_OK) {
    Tcl_DecrRefCount(newObj);
    return TCL_ERROR;
  }
  newinst = (swig_instance *) malloc(sizeof(swig_instance));
  newinst->thisptr = newObj;
  Tcl_IncrRefCount(newObj);
  newinst->thisvalue = thisvalue;
  newinst->classptr = classptr;
  newinst->destroy = destroy;
  if (destroy) {
    SWIG_Acquire(thisvalue);
  }
  newinst->cmdtok = Tcl_CreateObjCommand(interp,name, (swig_wrapper) SWIG_MethodCommand, (ClientData) newinst, (swig_delete_func) SWIG_ObjectDelete);
  return TCL_OK;
}

/* -----------------------------------------------------------------------------*
 *   Get arguments 
 * -----------------------------------------------------------------------------*/
SWIGRUNTIME int
SWIG_Tcl_GetArgs(Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[], const char *fmt, ...) {
  int        argno = 0, opt = 0;
  long       tempi;
  double     tempd;
  const char *c;
  va_list    ap;
  void      *vptr;
  Tcl_Obj   *obj = 0;
  swig_type_info *ty;

  va_start(ap,fmt);
  for (c = fmt; (*c && (*c != ':') && (*c != ';')); c++,argno++) {
    if (*c == '|') {
      opt = 1;
      c++;
    }
    if (argno >= (objc-1)) {
      if (!opt) {
        Tcl_SetResult(interp, (char *) "Wrong number of arguments ", TCL_STATIC);
        goto argerror;
      } else {
        va_end(ap);
        return TCL_OK;
      }
    }

    vptr = va_arg(ap,void *);
    if (vptr) {
      if (isupper(*c)) {
        obj = SWIG_Tcl_GetConstantObj(Tcl_GetStringFromObj(objv[argno+1],0));
        if (!obj) obj = objv[argno+1];
      } else {
        obj = objv[argno+1];
      }
      switch(*c) {
      case 'i': case 'I':
      case 'l': case 'L':
      case 'h': case 'H':
      case 'b': case 'B':
        if (Tcl_GetLongFromObj(interp,obj,&tempi) != TCL_OK) goto argerror;
        if ((*c == 'i') || (*c == 'I')) *((int *)vptr) = (int)tempi;
        else if ((*c == 'l') || (*c == 'L')) *((long *)vptr) = (long)tempi;
        else if ((*c == 'h') || (*c == 'H')) *((short*)vptr) = (short)tempi;
        else if ((*c == 'b') || (*c == 'B')) *((unsigned char *)vptr) = (unsigned char)tempi;
        break;
      case 'f': case 'F':
      case 'd': case 'D':
        if (Tcl_GetDoubleFromObj(interp,obj,&tempd) != TCL_OK) goto argerror;
        if ((*c == 'f') || (*c == 'F')) *((float *) vptr) = (float)tempd;
        else if ((*c == 'd') || (*c == 'D')) *((double*) vptr) = tempd;
        break;
      case 's': case 'S':
        if (*(c+1) == '#') {
          int *vlptr = (int *) va_arg(ap, void *);
          *((char **) vptr) = Tcl_GetStringFromObj(obj, vlptr);
          c++;
        } else {
          *((char **)vptr) = Tcl_GetStringFromObj(obj,NULL);
        }
        break;
      case 'c': case 'C':
        *((char *)vptr) = *(Tcl_GetStringFromObj(obj,NULL));
        break;
      case 'p': case 'P':
        ty = (swig_type_info *) va_arg(ap, void *);
        if (SWIG_Tcl_ConvertPtr(interp, obj, (void **) vptr, ty, 0) != SWIG_OK) goto argerror;
        break;
      case 'o': case 'O':
        *((Tcl_Obj **)vptr) = objv[argno+1];
        break;
      default:
        break;
      }
    }
  }

  if ((*c != ';') && ((objc-1) > argno)) {
    Tcl_SetResult(interp, (char *) "Wrong # args.", TCL_STATIC);
    goto argerror;
  }
  va_end(ap);
  return TCL_OK;

 argerror:
  {
    char temp[32];
    sprintf(temp,"%d", argno+1);
    c = strchr(fmt,':');
    if (!c) c = strchr(fmt,';');
    if (!c) c = (char *)"";
    Tcl_AppendResult(interp,c," argument ", temp, NULL);
    va_end(ap);
    return TCL_ERROR;
  }
}

#ifdef __cplusplus
#if 0
{ /* cc-mode */
#endif
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_XDR swig_types[0]
#define SWIGTYPE_p_bool_t swig_types[1]
#define SWIGTYPE_p_char swig_types[2]
#define SWIGTYPE_p_dtn_bundle swig_types[3]
#define SWIGTYPE_p_dtn_bundle_delivery_opts_t swig_types[4]
#define SWIGTYPE_p_dtn_bundle_id swig_types[5]
#define SWIGTYPE_p_dtn_bundle_id_t swig_types[6]
#define SWIGTYPE_p_dtn_bundle_payload_location_t swig_types[7]
#define SWIGTYPE_p_dtn_bundle_payload_t swig_types[8]
#define SWIGTYPE_p_dtn_bundle_payload_t_buf swig_types[9]
#define SWIGTYPE_p_dtn_bundle_payload_t_filename swig_types[10]
#define SWIGTYPE_p_dtn_bundle_priority_t swig_types[11]
#define SWIGTYPE_p_dtn_bundle_spec_t swig_types[12]
#define SWIGTYPE_p_dtn_bundle_spec_t_blocks swig_types[13]
#define SWIGTYPE_p_dtn_bundle_spec_t_metadata swig_types[14]
#define SWIGTYPE_p_dtn_bundle_status_report_t swig_types[15]
#define SWIGTYPE_p_dtn_endpoint_id_t swig_types[16]
#define SWIGTYPE_p_dtn_extension_block_flags_t swig_types[17]
#define SWIGTYPE_p_dtn_extension_block_t swig_types[18]
#define SWIGTYPE_p_dtn_extension_block_t_data swig_types[19]
#define SWIGTYPE_p_dtn_handle_t swig_types[20]
#define SWIGTYPE_p_dtn_reg_flags_t swig_types[21]
#define SWIGTYPE_p_dtn_reg_info_t swig_types[22]
#define SWIGTYPE_p_dtn_reg_info_t_script swig_types[23]
#define SWIGTYPE_p_dtn_sequence_id_t swig_types[24]
#define SWIGTYPE_p_dtn_sequence_id_t_data swig_types[25]
#define SWIGTYPE_p_dtn_service_tag_t swig_types[26]
#define SWIGTYPE_p_dtn_session_info swig_types[27]
#define SWIGTYPE_p_dtn_status_report swig_types[28]
#define SWIGTYPE_p_dtn_status_report_flags_t swig_types[29]
#define SWIGTYPE_p_dtn_status_report_reason_t swig_types[30]
#define SWIGTYPE_p_dtn_timestamp_t swig_types[31]
#define SWIGTYPE_p_mapT_unsigned_int_dtn_handle_t_t swig_types[32]
#define SWIGTYPE_p_u_int swig_types[33]
static swig_type_info *swig_types[35];
static swig_module_info swig_module = {swig_types, 34, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#define SWIG_init    Dtnapi_Init
#define SWIG_name    "dtnapi"
#define SWIG_prefix  ""
#define SWIG_version "0.0"

#define SWIGVERSION 0x010335 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>



#ifdef __cplusplus
extern "C" {
#endif
#ifdef MAC_TCL
#pragma export on
#endif
SWIGEXPORT int SWIG_init(Tcl_Interp *);
#ifdef MAC_TCL
#pragma export off
#endif
#ifdef __cplusplus
}
#endif



#include <string>


/* Include files needed to build the wrapper code */
using namespace std;

#include <applib/dtn_types.h>
#include <applib/dtn_api.h>
#include <applib/dtn_api_wrap.cc>


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERNINLINE Tcl_Obj* 
SWIG_From_long  (long value)
{
  if (((long) INT_MIN <= value) && (value <= (long) INT_MAX)) {
    return Tcl_NewIntObj(static_cast< int >(value));
  } else {
    return Tcl_NewLongObj(value);
  }
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_int  (int value)
{    
  return SWIG_From_long  (value);
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(Tcl_Obj *obj, char** cptr, size_t* psize, int *alloc)
{ 
  int len = 0;
  char *cstr = Tcl_GetStringFromObj(obj, &len);
  if (cstr) {
    if (cptr)  *cptr = cstr;
    if (psize) *psize = len + 1;
    if (alloc) *alloc = SWIG_OLDOBJ;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsCharArray(Tcl_Obj * obj, char *val, size_t size)
{ 
  char* cptr = 0; size_t csize = 0; int alloc = SWIG_OLDOBJ;
  int res = SWIG_AsCharPtrAndSize(obj, &cptr, &csize, &alloc);
  if (SWIG_IsOK(res)) {
    if ((csize == size + 1) && cptr && !(cptr[csize-1])) --csize;
    if (csize <= size) {
      if (val) {
	if (csize) memcpy(val, cptr, csize*sizeof(char));
	if (csize < size) memset(val + csize, 0, (size - csize)*sizeof(char));
      }
      if (alloc == SWIG_NEWOBJ) {
	delete[] cptr;
	res = SWIG_DelNewMask(res);
      }      
      return res;
    }
    if (alloc == SWIG_NEWOBJ) delete[] cptr;
  }
  return SWIG_TypeError;
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_FromCharPtrAndSize(const char* carray, size_t size)
{
  return (size < INT_MAX) ? Tcl_NewStringObj(carray, static_cast< int >(size)) : NULL;
}


typedef struct {
		u_int script_len;
		char *script_val;
	} dtn_reg_info_t_script;






SWIGINTERNINLINE Tcl_Obj * 
SWIG_FromCharPtr(const char *cptr)
{ 
  return SWIG_FromCharPtrAndSize(cptr, (cptr ? strlen(cptr) : 0));
}


typedef struct {
		u_int data_len;
		char *data_val;
	} dtn_extension_block_t_data;



typedef struct {
		u_int data_len;
		char *data_val;
	} dtn_sequence_id_t_data;



SWIGINTERN int
SWIG_AsVal_long SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, long* val)
{
  long v;
  if (Tcl_GetLongFromObj(0,obj, &v) == TCL_OK) {
    if (val) *val = (long) v;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long SWIG_TCL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


typedef struct {
		u_int metadata_len;
		dtn_extension_block_t *metadata_val;
	} dtn_bundle_spec_t_metadata;



typedef struct {
		u_int blocks_len;
		dtn_extension_block_t *blocks_val;
	} dtn_bundle_spec_t_blocks;



typedef struct {
		u_int buf_len;
		char *buf_val;
	} dtn_bundle_payload_t_buf;



typedef struct {
		u_int filename_len;
		char *filename_val;
	} dtn_bundle_payload_t_filename;



#include <stdio.h>
#if defined(_MSC_VER) || defined(__BORLANDC__) || defined(_WATCOM)
# ifndef snprintf
#  define snprintf _snprintf
# endif
#endif


SWIGINTERNINLINE Tcl_Obj* 
SWIG_From_unsigned_SS_long  (unsigned long value)
{
  if (value < (unsigned long) LONG_MAX) {
    return SWIG_From_long  (static_cast< long >(value));
  } else {
    char temp[256]; 
    sprintf(temp, "%lu", value);
    return Tcl_NewStringObj(temp,-1);
  }
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_unsigned_SS_int  (unsigned int value)
{    
  return SWIG_From_unsigned_SS_long  (value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, unsigned long *val) {
  long v;
  if (Tcl_GetLongFromObj(0,obj, &v) == TCL_OK) {
    if (v >= 0) {
      if (val) *val = (unsigned long) v;
      return SWIG_OK;
    }
    /* If v is negative, then this could be a negative number, or an
       unsigned value which doesn't fit in a signed long, so try to
       get it as a string so we can distinguish these cases. */
  }
  {
    int len = 0;
    const char *nptr = Tcl_GetStringFromObj(obj, &len);
    if (nptr && len > 0) {
      char *endptr;
      unsigned long v;
      if (*nptr == '-') return SWIG_OverflowError;
      errno = 0;
      v = strtoul(nptr, &endptr,0);
      if (nptr[0] == '\0' || *endptr != '\0')
	return SWIG_TypeError;
      if (v == ULONG_MAX && errno == ERANGE) {
	errno = 0;
	return SWIG_OverflowError;
      } else {
	if (*endptr == '\0') {
	  if (val) *val = v;
	  return SWIG_OK;
	}
      }
    }
  }
  
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long SWIG_TCL_CALL_ARGS_2(obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}


SWIGINTERNINLINE Tcl_Obj *
SWIG_From_std_string  (const std::string& s)
{
  if (s.size()) {
    return SWIG_FromCharPtrAndSize(s.data(), s.size());
  } else {
    return SWIG_FromCharPtrAndSize(s.c_str(), 0);
  }
}


SWIGINTERN int
SWIG_AsPtr_std_string SWIG_TCL_DECL_ARGS_2(Tcl_Obj * obj, std::string **val) 
{
  char* buf = 0 ; size_t size = 0; int alloc = SWIG_OLDOBJ;
  if (SWIG_IsOK((SWIG_AsCharPtrAndSize(obj, &buf, &size, &alloc)))) {
    if (buf) {
      if (val) *val = new std::string(buf, size - 1);
      if (alloc == SWIG_NEWOBJ) delete[] buf;
      return SWIG_NEWOBJ;
    } else {
      if (val) *val = 0;
      return SWIG_OLDOBJ;
    }
  } else {
    static int init = 0;
    static swig_type_info* descriptor = 0;
    if (!init) {
      descriptor = SWIG_TypeQuery("std::string" " *");
      init = 1;
    }
    if (descriptor) {
      std::string *vptr;
      int res = SWIG_ConvertPtr(obj, (void**)&vptr, descriptor, 0);
      if (SWIG_IsOK(res) && val) *val = vptr;
      return res;
    }
  }
  return SWIG_ERROR;
}


SWIGINTERN int
SWIG_AsVal_bool SWIG_TCL_DECL_ARGS_2(Tcl_Obj *obj, bool *val)
{
  int v;
  if (Tcl_GetBooleanFromObj(0, obj, &v) == TCL_OK) {
    if (val) *val = v ? true : false;
    return SWIG_OK;
  }
  return SWIG_TypeError;
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN int
_wrap_dtn_endpoint_id_t_uri_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_endpoint_id_t *arg1 = (dtn_endpoint_id_t *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_endpoint_id_t_uri_set self uri ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_endpoint_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_endpoint_id_t_uri_set" "', argument " "1"" of type '" "dtn_endpoint_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_endpoint_id_t * >(argp1);
  res2 = SWIG_AsCharArray(objv[2], temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_endpoint_id_t_uri_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->uri,arg2,256*sizeof(char));
  else memset(arg1->uri,0,256*sizeof(char));
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_endpoint_id_t_uri_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_endpoint_id_t *arg1 = (dtn_endpoint_id_t *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_endpoint_id_t_uri_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_endpoint_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_endpoint_id_t_uri_get" "', argument " "1"" of type '" "dtn_endpoint_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_endpoint_id_t * >(argp1);
  result = (char *)(char *) ((arg1)->uri);
  {
    size_t size = 256;
    
    while (size && (result[size - 1] == '\0')) --size;
    
    Tcl_SetObjResult(interp,SWIG_FromCharPtrAndSize(result, size));
  }
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_endpoint_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_endpoint_id_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_endpoint_id_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_endpoint_id_t *)new dtn_endpoint_id_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_endpoint_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_endpoint_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_endpoint_id_t *arg1 = (dtn_endpoint_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_endpoint_id_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_endpoint_id_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_endpoint_id_t" "', argument " "1"" of type '" "dtn_endpoint_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_endpoint_id_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_endpoint_id_t(void *obj) {
dtn_endpoint_id_t *arg1 = (dtn_endpoint_id_t *) obj;
delete arg1;
}
static swig_method swig_dtn_endpoint_id_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_endpoint_id_t_attributes[] = {
    { "-uri",_wrap_dtn_endpoint_id_t_uri_get, _wrap_dtn_endpoint_id_t_uri_set},
    {0,0,0}
};
static swig_class *swig_dtn_endpoint_id_t_bases[] = {0};
static const char * swig_dtn_endpoint_id_t_base_names[] = {0};
static swig_class _wrap_class_dtn_endpoint_id_t = { "dtn_endpoint_id_t", &SWIGTYPE_p_dtn_endpoint_id_t,_wrap_new_dtn_endpoint_id_t, swig_delete_dtn_endpoint_id_t, swig_dtn_endpoint_id_t_methods, swig_dtn_endpoint_id_t_attributes, swig_dtn_endpoint_id_t_bases,swig_dtn_endpoint_id_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_timestamp_t_secs_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_timestamp_t *arg1 = (dtn_timestamp_t *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_timestamp_t_secs_set self secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_timestamp_t_secs_set" "', argument " "1"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_timestamp_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_timestamp_t_secs_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_timestamp_t_secs_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->secs_or_millisecs = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_timestamp_t_secs_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_timestamp_t *arg1 = (dtn_timestamp_t *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_timestamp_t_secs_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_timestamp_t_secs_get" "', argument " "1"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_timestamp_t * >(argp1);
  result =  ((arg1)->secs_or_millisecs);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_timestamp_t_seqno_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_timestamp_t *arg1 = (dtn_timestamp_t *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_timestamp_t_seqno_set self seqno ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_timestamp_t_seqno_set" "', argument " "1"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_timestamp_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_timestamp_t_seqno_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_timestamp_t_seqno_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->seqno = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_timestamp_t_seqno_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_timestamp_t *arg1 = (dtn_timestamp_t *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_timestamp_t_seqno_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_timestamp_t_seqno_get" "', argument " "1"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_timestamp_t * >(argp1);
  result =  ((arg1)->seqno);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_timestamp_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_timestamp_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_timestamp_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_timestamp_t *)new dtn_timestamp_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_timestamp_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_timestamp_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_timestamp_t *arg1 = (dtn_timestamp_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_timestamp_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_timestamp_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_timestamp_t" "', argument " "1"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_timestamp_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_timestamp_t(void *obj) {
dtn_timestamp_t *arg1 = (dtn_timestamp_t *) obj;
delete arg1;
}
static swig_method swig_dtn_timestamp_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_timestamp_t_attributes[] = {
    { "-secs",_wrap_dtn_timestamp_t_secs_get, _wrap_dtn_timestamp_t_secs_set},
    { "-seqno",_wrap_dtn_timestamp_t_seqno_get, _wrap_dtn_timestamp_t_seqno_set},
    {0,0,0}
};
static swig_class *swig_dtn_timestamp_t_bases[] = {0};
static const char * swig_dtn_timestamp_t_base_names[] = {0};
static swig_class _wrap_class_dtn_timestamp_t = { "dtn_timestamp_t", &SWIGTYPE_p_dtn_timestamp_t,_wrap_new_dtn_timestamp_t, swig_delete_dtn_timestamp_t, swig_dtn_timestamp_t_methods, swig_dtn_timestamp_t_attributes, swig_dtn_timestamp_t_bases,swig_dtn_timestamp_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_service_tag_t_tag_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_service_tag_t *arg1 = (dtn_service_tag_t *) 0 ;
  char *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  char temp2[256] ;
  int res2 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_service_tag_t_tag_set self tag ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_service_tag_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_service_tag_t_tag_set" "', argument " "1"" of type '" "dtn_service_tag_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_service_tag_t * >(argp1);
  res2 = SWIG_AsCharArray(objv[2], temp2, 256);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_service_tag_t_tag_set" "', argument " "2"" of type '" "char [256]""'");
  }
  arg2 = reinterpret_cast< char * >(temp2);
  if (arg2) memcpy(arg1->tag,arg2,256*sizeof(char));
  else memset(arg1->tag,0,256*sizeof(char));
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_service_tag_t_tag_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_service_tag_t *arg1 = (dtn_service_tag_t *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_service_tag_t_tag_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_service_tag_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_service_tag_t_tag_get" "', argument " "1"" of type '" "dtn_service_tag_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_service_tag_t * >(argp1);
  result = (char *)(char *) ((arg1)->tag);
  {
    size_t size = 256;
    
    while (size && (result[size - 1] == '\0')) --size;
    
    Tcl_SetObjResult(interp,SWIG_FromCharPtrAndSize(result, size));
  }
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_service_tag_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_service_tag_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_service_tag_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_service_tag_t *)new dtn_service_tag_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_service_tag_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_service_tag_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_service_tag_t *arg1 = (dtn_service_tag_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_service_tag_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_service_tag_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_service_tag_t" "', argument " "1"" of type '" "dtn_service_tag_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_service_tag_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_service_tag_t(void *obj) {
dtn_service_tag_t *arg1 = (dtn_service_tag_t *) obj;
delete arg1;
}
static swig_method swig_dtn_service_tag_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_service_tag_t_attributes[] = {
    { "-tag",_wrap_dtn_service_tag_t_tag_get, _wrap_dtn_service_tag_t_tag_set},
    {0,0,0}
};
static swig_class *swig_dtn_service_tag_t_bases[] = {0};
static const char * swig_dtn_service_tag_t_base_names[] = {0};
static swig_class _wrap_class_dtn_service_tag_t = { "dtn_service_tag_t", &SWIGTYPE_p_dtn_service_tag_t,_wrap_new_dtn_service_tag_t, swig_delete_dtn_service_tag_t, swig_dtn_service_tag_t_methods, swig_dtn_service_tag_t_attributes, swig_dtn_service_tag_t_bases,swig_dtn_service_tag_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_reg_info_t_endpoint_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  dtn_endpoint_id_t *arg2 = (dtn_endpoint_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_reg_info_t_endpoint_set self endpoint ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_endpoint_set" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_endpoint_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_reg_info_t_endpoint_set" "', argument " "2"" of type '" "dtn_endpoint_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_endpoint_id_t * >(argp2);
  if (arg1) (arg1)->endpoint = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_endpoint_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  dtn_endpoint_id_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_reg_info_t_endpoint_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_endpoint_get" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  result = (dtn_endpoint_id_t *)& ((arg1)->endpoint);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_endpoint_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_regid_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  dtn_reg_id_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_reg_info_t_regid_set self regid ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_regid_set" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_reg_info_t_regid_set" "', argument " "2"" of type '" "dtn_reg_id_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_reg_info_t_regid_set" "', argument " "2"" of type '" "dtn_reg_id_t""'");
    } else {
      arg2 = *(reinterpret_cast< dtn_reg_id_t * >(argp2));
    }
  }
  if (arg1) (arg1)->regid = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_regid_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  dtn_reg_id_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_reg_info_t_regid_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_regid_get" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  result =  ((arg1)->regid);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new dtn_reg_id_t(static_cast< const dtn_reg_id_t& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_flags_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_reg_info_t_flags_set self flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_flags_set" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_reg_info_t_flags_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_reg_info_t_flags_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->flags = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_flags_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_reg_info_t_flags_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_flags_get" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  result =  ((arg1)->flags);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_expiration_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  dtn_timeval_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_reg_info_t_expiration_set self expiration ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_expiration_set" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_reg_info_t_expiration_set" "', argument " "2"" of type '" "dtn_timeval_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_reg_info_t_expiration_set" "', argument " "2"" of type '" "dtn_timeval_t""'");
    } else {
      arg2 = *(reinterpret_cast< dtn_timeval_t * >(argp2));
    }
  }
  if (arg1) (arg1)->expiration = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_expiration_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  dtn_timeval_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_reg_info_t_expiration_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_expiration_get" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  result =  ((arg1)->expiration);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new dtn_timeval_t(static_cast< const dtn_timeval_t& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_init_passive_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  bool_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_reg_info_t_init_passive_set self init_passive ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_init_passive_set" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_bool_t,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_reg_info_t_init_passive_set" "', argument " "2"" of type '" "bool_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_reg_info_t_init_passive_set" "', argument " "2"" of type '" "bool_t""'");
    } else {
      arg2 = *(reinterpret_cast< bool_t * >(argp2));
    }
  }
  if (arg1) (arg1)->init_passive = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_init_passive_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_reg_info_t_init_passive_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_init_passive_get" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  result =  ((arg1)->init_passive);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_script_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  dtn_reg_info_t_script *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_reg_info_t_script_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_script_get" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  result = (dtn_reg_info_t_script *)& ((arg1)->script);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_reg_info_t_script,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_reg_info_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_reg_info_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_reg_info_t *)new dtn_reg_info_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_reg_info_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_reg_info_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_reg_info_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_reg_info_t" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_reg_info_t(void *obj) {
dtn_reg_info_t *arg1 = (dtn_reg_info_t *) obj;
delete arg1;
}
static swig_method swig_dtn_reg_info_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_reg_info_t_attributes[] = {
    { "-endpoint",_wrap_dtn_reg_info_t_endpoint_get, _wrap_dtn_reg_info_t_endpoint_set},
    { "-regid",_wrap_dtn_reg_info_t_regid_get, _wrap_dtn_reg_info_t_regid_set},
    { "-flags",_wrap_dtn_reg_info_t_flags_get, _wrap_dtn_reg_info_t_flags_set},
    { "-expiration",_wrap_dtn_reg_info_t_expiration_get, _wrap_dtn_reg_info_t_expiration_set},
    { "-init_passive",_wrap_dtn_reg_info_t_init_passive_get, _wrap_dtn_reg_info_t_init_passive_set},
    { "-script",_wrap_dtn_reg_info_t_script_get, 0 },
    {0,0,0}
};
static swig_class *swig_dtn_reg_info_t_bases[] = {0};
static const char * swig_dtn_reg_info_t_base_names[] = {0};
static swig_class _wrap_class_dtn_reg_info_t = { "dtn_reg_info_t", &SWIGTYPE_p_dtn_reg_info_t,_wrap_new_dtn_reg_info_t, swig_delete_dtn_reg_info_t, swig_dtn_reg_info_t_methods, swig_dtn_reg_info_t_attributes, swig_dtn_reg_info_t_bases,swig_dtn_reg_info_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_reg_info_t_script_script_len_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t_script *arg1 = (dtn_reg_info_t_script *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_reg_info_t_script_script_len_set self script_len ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t_script, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_script_script_len_set" "', argument " "1"" of type '" "dtn_reg_info_t_script *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t_script * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_reg_info_t_script_script_len_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_reg_info_t_script_script_len_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->script_len = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_script_script_len_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t_script *arg1 = (dtn_reg_info_t_script *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_reg_info_t_script_script_len_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t_script, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_script_script_len_get" "', argument " "1"" of type '" "dtn_reg_info_t_script *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t_script * >(argp1);
  result =  ((arg1)->script_len);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_script_script_val_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t_script *arg1 = (dtn_reg_info_t_script *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_reg_info_t_script_script_val_set self script_val ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t_script, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_script_script_val_set" "', argument " "1"" of type '" "dtn_reg_info_t_script *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t_script * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_reg_info_t_script_script_val_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg1->script_val) delete[] arg1->script_val;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->script_val = (char *)reinterpret_cast< char* >(memcpy((new char[size]), reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->script_val = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_reg_info_t_script_script_val_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t_script *arg1 = (dtn_reg_info_t_script *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_reg_info_t_script_script_val_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t_script, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_reg_info_t_script_script_val_get" "', argument " "1"" of type '" "dtn_reg_info_t_script *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t_script * >(argp1);
  result = (char *) ((arg1)->script_val);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_reg_info_t_script(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t_script *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_reg_info_t_script ") == TCL_ERROR) SWIG_fail;
  result = (dtn_reg_info_t_script *)new dtn_reg_info_t_script();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_reg_info_t_script,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_reg_info_t_script(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t_script *arg1 = (dtn_reg_info_t_script *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_reg_info_t_script self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t_script, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_reg_info_t_script" "', argument " "1"" of type '" "dtn_reg_info_t_script *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t_script * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_reg_info_t_script(void *obj) {
dtn_reg_info_t_script *arg1 = (dtn_reg_info_t_script *) obj;
delete arg1;
}
static swig_method swig_dtn_reg_info_t_script_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_reg_info_t_script_attributes[] = {
    { "-script_len",_wrap_dtn_reg_info_t_script_script_len_get, _wrap_dtn_reg_info_t_script_script_len_set},
    { "-script_val",_wrap_dtn_reg_info_t_script_script_val_get, _wrap_dtn_reg_info_t_script_script_val_set},
    {0,0,0}
};
static swig_class *swig_dtn_reg_info_t_script_bases[] = {0};
static const char * swig_dtn_reg_info_t_script_base_names[] = {0};
static swig_class _wrap_class_dtn_reg_info_t_script = { "dtn_reg_info_t_script", &SWIGTYPE_p_dtn_reg_info_t_script,_wrap_new_dtn_reg_info_t_script, swig_delete_dtn_reg_info_t_script, swig_dtn_reg_info_t_script_methods, swig_dtn_reg_info_t_script_attributes, swig_dtn_reg_info_t_script_bases,swig_dtn_reg_info_t_script_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_extension_block_t_type_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t *arg1 = (dtn_extension_block_t *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_extension_block_t_type_set self type ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_extension_block_t_type_set" "', argument " "1"" of type '" "dtn_extension_block_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_extension_block_t_type_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_extension_block_t_type_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->type = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_extension_block_t_type_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t *arg1 = (dtn_extension_block_t *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_extension_block_t_type_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_extension_block_t_type_get" "', argument " "1"" of type '" "dtn_extension_block_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t * >(argp1);
  result =  ((arg1)->type);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_extension_block_t_flags_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t *arg1 = (dtn_extension_block_t *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_extension_block_t_flags_set self flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_extension_block_t_flags_set" "', argument " "1"" of type '" "dtn_extension_block_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_extension_block_t_flags_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_extension_block_t_flags_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->flags = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_extension_block_t_flags_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t *arg1 = (dtn_extension_block_t *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_extension_block_t_flags_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_extension_block_t_flags_get" "', argument " "1"" of type '" "dtn_extension_block_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t * >(argp1);
  result =  ((arg1)->flags);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_extension_block_t_data_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t *arg1 = (dtn_extension_block_t *) 0 ;
  dtn_extension_block_t_data *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_extension_block_t_data_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_extension_block_t_data_get" "', argument " "1"" of type '" "dtn_extension_block_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t * >(argp1);
  result = (dtn_extension_block_t_data *)& ((arg1)->data);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_extension_block_t_data,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_extension_block_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_extension_block_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_extension_block_t *)new dtn_extension_block_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_extension_block_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_extension_block_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t *arg1 = (dtn_extension_block_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_extension_block_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_extension_block_t" "', argument " "1"" of type '" "dtn_extension_block_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_extension_block_t(void *obj) {
dtn_extension_block_t *arg1 = (dtn_extension_block_t *) obj;
delete arg1;
}
static swig_method swig_dtn_extension_block_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_extension_block_t_attributes[] = {
    { "-type",_wrap_dtn_extension_block_t_type_get, _wrap_dtn_extension_block_t_type_set},
    { "-flags",_wrap_dtn_extension_block_t_flags_get, _wrap_dtn_extension_block_t_flags_set},
    { "-data",_wrap_dtn_extension_block_t_data_get, 0 },
    {0,0,0}
};
static swig_class *swig_dtn_extension_block_t_bases[] = {0};
static const char * swig_dtn_extension_block_t_base_names[] = {0};
static swig_class _wrap_class_dtn_extension_block_t = { "dtn_extension_block_t", &SWIGTYPE_p_dtn_extension_block_t,_wrap_new_dtn_extension_block_t, swig_delete_dtn_extension_block_t, swig_dtn_extension_block_t_methods, swig_dtn_extension_block_t_attributes, swig_dtn_extension_block_t_bases,swig_dtn_extension_block_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_extension_block_t_data_data_len_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t_data *arg1 = (dtn_extension_block_t_data *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_extension_block_t_data_data_len_set self data_len ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_extension_block_t_data_data_len_set" "', argument " "1"" of type '" "dtn_extension_block_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t_data * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_extension_block_t_data_data_len_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_extension_block_t_data_data_len_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->data_len = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_extension_block_t_data_data_len_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t_data *arg1 = (dtn_extension_block_t_data *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_extension_block_t_data_data_len_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_extension_block_t_data_data_len_get" "', argument " "1"" of type '" "dtn_extension_block_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t_data * >(argp1);
  result =  ((arg1)->data_len);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_extension_block_t_data_data_val_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t_data *arg1 = (dtn_extension_block_t_data *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_extension_block_t_data_data_val_set self data_val ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_extension_block_t_data_data_val_set" "', argument " "1"" of type '" "dtn_extension_block_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t_data * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_extension_block_t_data_data_val_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg1->data_val) delete[] arg1->data_val;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->data_val = (char *)reinterpret_cast< char* >(memcpy((new char[size]), reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->data_val = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_extension_block_t_data_data_val_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t_data *arg1 = (dtn_extension_block_t_data *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_extension_block_t_data_data_val_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_extension_block_t_data_data_val_get" "', argument " "1"" of type '" "dtn_extension_block_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t_data * >(argp1);
  result = (char *) ((arg1)->data_val);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_extension_block_t_data(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t_data *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_extension_block_t_data ") == TCL_ERROR) SWIG_fail;
  result = (dtn_extension_block_t_data *)new dtn_extension_block_t_data();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_extension_block_t_data,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_extension_block_t_data(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_extension_block_t_data *arg1 = (dtn_extension_block_t_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_extension_block_t_data self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_extension_block_t_data, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_extension_block_t_data" "', argument " "1"" of type '" "dtn_extension_block_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_extension_block_t_data * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_extension_block_t_data(void *obj) {
dtn_extension_block_t_data *arg1 = (dtn_extension_block_t_data *) obj;
delete arg1;
}
static swig_method swig_dtn_extension_block_t_data_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_extension_block_t_data_attributes[] = {
    { "-data_len",_wrap_dtn_extension_block_t_data_data_len_get, _wrap_dtn_extension_block_t_data_data_len_set},
    { "-data_val",_wrap_dtn_extension_block_t_data_data_val_get, _wrap_dtn_extension_block_t_data_data_val_set},
    {0,0,0}
};
static swig_class *swig_dtn_extension_block_t_data_bases[] = {0};
static const char * swig_dtn_extension_block_t_data_base_names[] = {0};
static swig_class _wrap_class_dtn_extension_block_t_data = { "dtn_extension_block_t_data", &SWIGTYPE_p_dtn_extension_block_t_data,_wrap_new_dtn_extension_block_t_data, swig_delete_dtn_extension_block_t_data, swig_dtn_extension_block_t_data_methods, swig_dtn_extension_block_t_data_attributes, swig_dtn_extension_block_t_data_bases,swig_dtn_extension_block_t_data_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_sequence_id_t_data_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_sequence_id_t *arg1 = (dtn_sequence_id_t *) 0 ;
  dtn_sequence_id_t_data *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_sequence_id_t_data_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_sequence_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_sequence_id_t_data_get" "', argument " "1"" of type '" "dtn_sequence_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_sequence_id_t * >(argp1);
  result = (dtn_sequence_id_t_data *)& ((arg1)->data);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_sequence_id_t_data,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_sequence_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_sequence_id_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_sequence_id_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_sequence_id_t *)new dtn_sequence_id_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_sequence_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_sequence_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_sequence_id_t *arg1 = (dtn_sequence_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_sequence_id_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_sequence_id_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_sequence_id_t" "', argument " "1"" of type '" "dtn_sequence_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_sequence_id_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_sequence_id_t(void *obj) {
dtn_sequence_id_t *arg1 = (dtn_sequence_id_t *) obj;
delete arg1;
}
static swig_method swig_dtn_sequence_id_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_sequence_id_t_attributes[] = {
    { "-data",_wrap_dtn_sequence_id_t_data_get, 0 },
    {0,0,0}
};
static swig_class *swig_dtn_sequence_id_t_bases[] = {0};
static const char * swig_dtn_sequence_id_t_base_names[] = {0};
static swig_class _wrap_class_dtn_sequence_id_t = { "dtn_sequence_id_t", &SWIGTYPE_p_dtn_sequence_id_t,_wrap_new_dtn_sequence_id_t, swig_delete_dtn_sequence_id_t, swig_dtn_sequence_id_t_methods, swig_dtn_sequence_id_t_attributes, swig_dtn_sequence_id_t_bases,swig_dtn_sequence_id_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_sequence_id_t_data_data_len_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_sequence_id_t_data *arg1 = (dtn_sequence_id_t_data *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_sequence_id_t_data_data_len_set self data_len ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_sequence_id_t_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_sequence_id_t_data_data_len_set" "', argument " "1"" of type '" "dtn_sequence_id_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_sequence_id_t_data * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_sequence_id_t_data_data_len_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_sequence_id_t_data_data_len_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->data_len = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_sequence_id_t_data_data_len_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_sequence_id_t_data *arg1 = (dtn_sequence_id_t_data *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_sequence_id_t_data_data_len_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_sequence_id_t_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_sequence_id_t_data_data_len_get" "', argument " "1"" of type '" "dtn_sequence_id_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_sequence_id_t_data * >(argp1);
  result =  ((arg1)->data_len);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_sequence_id_t_data_data_val_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_sequence_id_t_data *arg1 = (dtn_sequence_id_t_data *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_sequence_id_t_data_data_val_set self data_val ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_sequence_id_t_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_sequence_id_t_data_data_val_set" "', argument " "1"" of type '" "dtn_sequence_id_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_sequence_id_t_data * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_sequence_id_t_data_data_val_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg1->data_val) delete[] arg1->data_val;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->data_val = (char *)reinterpret_cast< char* >(memcpy((new char[size]), reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->data_val = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_sequence_id_t_data_data_val_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_sequence_id_t_data *arg1 = (dtn_sequence_id_t_data *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_sequence_id_t_data_data_val_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_sequence_id_t_data, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_sequence_id_t_data_data_val_get" "', argument " "1"" of type '" "dtn_sequence_id_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_sequence_id_t_data * >(argp1);
  result = (char *) ((arg1)->data_val);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_sequence_id_t_data(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_sequence_id_t_data *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_sequence_id_t_data ") == TCL_ERROR) SWIG_fail;
  result = (dtn_sequence_id_t_data *)new dtn_sequence_id_t_data();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_sequence_id_t_data,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_sequence_id_t_data(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_sequence_id_t_data *arg1 = (dtn_sequence_id_t_data *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_sequence_id_t_data self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_sequence_id_t_data, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_sequence_id_t_data" "', argument " "1"" of type '" "dtn_sequence_id_t_data *""'"); 
  }
  arg1 = reinterpret_cast< dtn_sequence_id_t_data * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_sequence_id_t_data(void *obj) {
dtn_sequence_id_t_data *arg1 = (dtn_sequence_id_t_data *) obj;
delete arg1;
}
static swig_method swig_dtn_sequence_id_t_data_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_sequence_id_t_data_attributes[] = {
    { "-data_len",_wrap_dtn_sequence_id_t_data_data_len_get, _wrap_dtn_sequence_id_t_data_data_len_set},
    { "-data_val",_wrap_dtn_sequence_id_t_data_data_val_get, _wrap_dtn_sequence_id_t_data_data_val_set},
    {0,0,0}
};
static swig_class *swig_dtn_sequence_id_t_data_bases[] = {0};
static const char * swig_dtn_sequence_id_t_data_base_names[] = {0};
static swig_class _wrap_class_dtn_sequence_id_t_data = { "dtn_sequence_id_t_data", &SWIGTYPE_p_dtn_sequence_id_t_data,_wrap_new_dtn_sequence_id_t_data, swig_delete_dtn_sequence_id_t_data, swig_dtn_sequence_id_t_data_methods, swig_dtn_sequence_id_t_data_attributes, swig_dtn_sequence_id_t_data_bases,swig_dtn_sequence_id_t_data_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_bundle_spec_t_source_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_endpoint_id_t *arg2 = (dtn_endpoint_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_source_set self source ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_source_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_endpoint_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_source_set" "', argument " "2"" of type '" "dtn_endpoint_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_endpoint_id_t * >(argp2);
  if (arg1) (arg1)->source = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_source_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_endpoint_id_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_source_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_source_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (dtn_endpoint_id_t *)& ((arg1)->source);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_endpoint_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_dest_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_endpoint_id_t *arg2 = (dtn_endpoint_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_dest_set self dest ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_dest_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_endpoint_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_dest_set" "', argument " "2"" of type '" "dtn_endpoint_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_endpoint_id_t * >(argp2);
  if (arg1) (arg1)->dest = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_dest_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_endpoint_id_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_dest_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_dest_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (dtn_endpoint_id_t *)& ((arg1)->dest);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_endpoint_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_replyto_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_endpoint_id_t *arg2 = (dtn_endpoint_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_replyto_set self replyto ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_replyto_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_endpoint_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_replyto_set" "', argument " "2"" of type '" "dtn_endpoint_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_endpoint_id_t * >(argp2);
  if (arg1) (arg1)->replyto = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_replyto_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_endpoint_id_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_replyto_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_replyto_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (dtn_endpoint_id_t *)& ((arg1)->replyto);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_endpoint_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_priority_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_bundle_priority_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_priority_set self priority ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_priority_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_spec_t_priority_set" "', argument " "2"" of type '" "dtn_bundle_priority_t""'");
  } 
  arg2 = static_cast< dtn_bundle_priority_t >(val2);
  if (arg1) (arg1)->priority = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_priority_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_bundle_priority_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_priority_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_priority_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (dtn_bundle_priority_t) ((arg1)->priority);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_dopts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_dopts_set self dopts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_dopts_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_spec_t_dopts_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->dopts = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_dopts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_dopts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_dopts_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (int) ((arg1)->dopts);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_expiration_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_timeval_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_expiration_set self expiration ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_expiration_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_expiration_set" "', argument " "2"" of type '" "dtn_timeval_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_spec_t_expiration_set" "', argument " "2"" of type '" "dtn_timeval_t""'");
    } else {
      arg2 = *(reinterpret_cast< dtn_timeval_t * >(argp2));
    }
  }
  if (arg1) (arg1)->expiration = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_expiration_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_timeval_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_expiration_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_expiration_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result =  ((arg1)->expiration);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new dtn_timeval_t(static_cast< const dtn_timeval_t& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_creation_ts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_timestamp_t *arg2 = (dtn_timestamp_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_creation_ts_set self creation_ts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_creation_ts_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_creation_ts_set" "', argument " "2"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timestamp_t * >(argp2);
  if (arg1) (arg1)->creation_ts = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_creation_ts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_timestamp_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_creation_ts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_creation_ts_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (dtn_timestamp_t *)& ((arg1)->creation_ts);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_timestamp_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_delivery_regid_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_reg_id_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_delivery_regid_set self delivery_regid ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_delivery_regid_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_delivery_regid_set" "', argument " "2"" of type '" "dtn_reg_id_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_spec_t_delivery_regid_set" "', argument " "2"" of type '" "dtn_reg_id_t""'");
    } else {
      arg2 = *(reinterpret_cast< dtn_reg_id_t * >(argp2));
    }
  }
  if (arg1) (arg1)->delivery_regid = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_delivery_regid_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_reg_id_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_delivery_regid_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_delivery_regid_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result =  ((arg1)->delivery_regid);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new dtn_reg_id_t(static_cast< const dtn_reg_id_t& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_sequence_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_sequence_id_t *arg2 = (dtn_sequence_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_sequence_id_set self sequence_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_sequence_id_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_sequence_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_sequence_id_set" "', argument " "2"" of type '" "dtn_sequence_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_sequence_id_t * >(argp2);
  if (arg1) (arg1)->sequence_id = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_sequence_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_sequence_id_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_sequence_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_sequence_id_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (dtn_sequence_id_t *)& ((arg1)->sequence_id);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_sequence_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_obsoletes_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_sequence_id_t *arg2 = (dtn_sequence_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_obsoletes_id_set self obsoletes_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_obsoletes_id_set" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_sequence_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_obsoletes_id_set" "', argument " "2"" of type '" "dtn_sequence_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_sequence_id_t * >(argp2);
  if (arg1) (arg1)->obsoletes_id = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_obsoletes_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_sequence_id_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_obsoletes_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_obsoletes_id_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (dtn_sequence_id_t *)& ((arg1)->obsoletes_id);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_sequence_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_metadata_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_bundle_spec_t_metadata *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_metadata_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_metadata_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (dtn_bundle_spec_t_metadata *)& ((arg1)->metadata);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_spec_t_metadata,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_blocks_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  dtn_bundle_spec_t_blocks *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_blocks_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_blocks_get" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  result = (dtn_bundle_spec_t_blocks *)& ((arg1)->blocks);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_spec_t_blocks,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle_spec_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle_spec_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle_spec_t *)new dtn_bundle_spec_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_spec_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle_spec_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle_spec_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle_spec_t" "', argument " "1"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle_spec_t(void *obj) {
dtn_bundle_spec_t *arg1 = (dtn_bundle_spec_t *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_spec_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_spec_t_attributes[] = {
    { "-source",_wrap_dtn_bundle_spec_t_source_get, _wrap_dtn_bundle_spec_t_source_set},
    { "-dest",_wrap_dtn_bundle_spec_t_dest_get, _wrap_dtn_bundle_spec_t_dest_set},
    { "-replyto",_wrap_dtn_bundle_spec_t_replyto_get, _wrap_dtn_bundle_spec_t_replyto_set},
    { "-priority",_wrap_dtn_bundle_spec_t_priority_get, _wrap_dtn_bundle_spec_t_priority_set},
    { "-dopts",_wrap_dtn_bundle_spec_t_dopts_get, _wrap_dtn_bundle_spec_t_dopts_set},
    { "-expiration",_wrap_dtn_bundle_spec_t_expiration_get, _wrap_dtn_bundle_spec_t_expiration_set},
    { "-creation_ts",_wrap_dtn_bundle_spec_t_creation_ts_get, _wrap_dtn_bundle_spec_t_creation_ts_set},
    { "-delivery_regid",_wrap_dtn_bundle_spec_t_delivery_regid_get, _wrap_dtn_bundle_spec_t_delivery_regid_set},
    { "-sequence_id",_wrap_dtn_bundle_spec_t_sequence_id_get, _wrap_dtn_bundle_spec_t_sequence_id_set},
    { "-obsoletes_id",_wrap_dtn_bundle_spec_t_obsoletes_id_get, _wrap_dtn_bundle_spec_t_obsoletes_id_set},
    { "-metadata",_wrap_dtn_bundle_spec_t_metadata_get, 0 },
    { "-blocks",_wrap_dtn_bundle_spec_t_blocks_get, 0 },
    {0,0,0}
};
static swig_class *swig_dtn_bundle_spec_t_bases[] = {0};
static const char * swig_dtn_bundle_spec_t_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle_spec_t = { "dtn_bundle_spec_t", &SWIGTYPE_p_dtn_bundle_spec_t,_wrap_new_dtn_bundle_spec_t, swig_delete_dtn_bundle_spec_t, swig_dtn_bundle_spec_t_methods, swig_dtn_bundle_spec_t_attributes, swig_dtn_bundle_spec_t_bases,swig_dtn_bundle_spec_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_bundle_spec_t_metadata_metadata_len_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_metadata *arg1 = (dtn_bundle_spec_t_metadata *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_metadata_metadata_len_set self metadata_len ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_metadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_metadata_metadata_len_set" "', argument " "1"" of type '" "dtn_bundle_spec_t_metadata *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_metadata * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_metadata_metadata_len_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_spec_t_metadata_metadata_len_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->metadata_len = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_metadata_metadata_len_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_metadata *arg1 = (dtn_bundle_spec_t_metadata *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_metadata_metadata_len_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_metadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_metadata_metadata_len_get" "', argument " "1"" of type '" "dtn_bundle_spec_t_metadata *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_metadata * >(argp1);
  result =  ((arg1)->metadata_len);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_metadata_metadata_val_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_metadata *arg1 = (dtn_bundle_spec_t_metadata *) 0 ;
  dtn_extension_block_t *arg2 = (dtn_extension_block_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_metadata_metadata_val_set self metadata_val ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_metadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_metadata_metadata_val_set" "', argument " "1"" of type '" "dtn_bundle_spec_t_metadata *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_metadata * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_extension_block_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_metadata_metadata_val_set" "', argument " "2"" of type '" "dtn_extension_block_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_extension_block_t * >(argp2);
  if (arg1) (arg1)->metadata_val = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_metadata_metadata_val_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_metadata *arg1 = (dtn_bundle_spec_t_metadata *) 0 ;
  dtn_extension_block_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_metadata_metadata_val_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_metadata, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_metadata_metadata_val_get" "', argument " "1"" of type '" "dtn_bundle_spec_t_metadata *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_metadata * >(argp1);
  result = (dtn_extension_block_t *) ((arg1)->metadata_val);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_extension_block_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle_spec_t_metadata(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_metadata *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle_spec_t_metadata ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle_spec_t_metadata *)new dtn_bundle_spec_t_metadata();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_spec_t_metadata,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle_spec_t_metadata(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_metadata *arg1 = (dtn_bundle_spec_t_metadata *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle_spec_t_metadata self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_metadata, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle_spec_t_metadata" "', argument " "1"" of type '" "dtn_bundle_spec_t_metadata *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_metadata * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle_spec_t_metadata(void *obj) {
dtn_bundle_spec_t_metadata *arg1 = (dtn_bundle_spec_t_metadata *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_spec_t_metadata_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_spec_t_metadata_attributes[] = {
    { "-metadata_len",_wrap_dtn_bundle_spec_t_metadata_metadata_len_get, _wrap_dtn_bundle_spec_t_metadata_metadata_len_set},
    { "-metadata_val",_wrap_dtn_bundle_spec_t_metadata_metadata_val_get, _wrap_dtn_bundle_spec_t_metadata_metadata_val_set},
    {0,0,0}
};
static swig_class *swig_dtn_bundle_spec_t_metadata_bases[] = {0};
static const char * swig_dtn_bundle_spec_t_metadata_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle_spec_t_metadata = { "dtn_bundle_spec_t_metadata", &SWIGTYPE_p_dtn_bundle_spec_t_metadata,_wrap_new_dtn_bundle_spec_t_metadata, swig_delete_dtn_bundle_spec_t_metadata, swig_dtn_bundle_spec_t_metadata_methods, swig_dtn_bundle_spec_t_metadata_attributes, swig_dtn_bundle_spec_t_metadata_bases,swig_dtn_bundle_spec_t_metadata_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_bundle_spec_t_blocks_blocks_len_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_blocks *arg1 = (dtn_bundle_spec_t_blocks *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_blocks_blocks_len_set self blocks_len ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_blocks, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_blocks_blocks_len_set" "', argument " "1"" of type '" "dtn_bundle_spec_t_blocks *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_blocks * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_blocks_blocks_len_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_spec_t_blocks_blocks_len_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->blocks_len = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_blocks_blocks_len_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_blocks *arg1 = (dtn_bundle_spec_t_blocks *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_blocks_blocks_len_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_blocks, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_blocks_blocks_len_get" "', argument " "1"" of type '" "dtn_bundle_spec_t_blocks *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_blocks * >(argp1);
  result =  ((arg1)->blocks_len);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_blocks_blocks_val_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_blocks *arg1 = (dtn_bundle_spec_t_blocks *) 0 ;
  dtn_extension_block_t *arg2 = (dtn_extension_block_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_spec_t_blocks_blocks_val_set self blocks_val ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_blocks, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_blocks_blocks_val_set" "', argument " "1"" of type '" "dtn_bundle_spec_t_blocks *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_blocks * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_extension_block_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_spec_t_blocks_blocks_val_set" "', argument " "2"" of type '" "dtn_extension_block_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_extension_block_t * >(argp2);
  if (arg1) (arg1)->blocks_val = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_spec_t_blocks_blocks_val_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_blocks *arg1 = (dtn_bundle_spec_t_blocks *) 0 ;
  dtn_extension_block_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_spec_t_blocks_blocks_val_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_blocks, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_spec_t_blocks_blocks_val_get" "', argument " "1"" of type '" "dtn_bundle_spec_t_blocks *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_blocks * >(argp1);
  result = (dtn_extension_block_t *) ((arg1)->blocks_val);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_extension_block_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle_spec_t_blocks(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_blocks *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle_spec_t_blocks ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle_spec_t_blocks *)new dtn_bundle_spec_t_blocks();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_spec_t_blocks,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle_spec_t_blocks(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_spec_t_blocks *arg1 = (dtn_bundle_spec_t_blocks *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle_spec_t_blocks self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_spec_t_blocks, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle_spec_t_blocks" "', argument " "1"" of type '" "dtn_bundle_spec_t_blocks *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_spec_t_blocks * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle_spec_t_blocks(void *obj) {
dtn_bundle_spec_t_blocks *arg1 = (dtn_bundle_spec_t_blocks *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_spec_t_blocks_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_spec_t_blocks_attributes[] = {
    { "-blocks_len",_wrap_dtn_bundle_spec_t_blocks_blocks_len_get, _wrap_dtn_bundle_spec_t_blocks_blocks_len_set},
    { "-blocks_val",_wrap_dtn_bundle_spec_t_blocks_blocks_val_get, _wrap_dtn_bundle_spec_t_blocks_blocks_val_set},
    {0,0,0}
};
static swig_class *swig_dtn_bundle_spec_t_blocks_bases[] = {0};
static const char * swig_dtn_bundle_spec_t_blocks_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle_spec_t_blocks = { "dtn_bundle_spec_t_blocks", &SWIGTYPE_p_dtn_bundle_spec_t_blocks,_wrap_new_dtn_bundle_spec_t_blocks, swig_delete_dtn_bundle_spec_t_blocks, swig_dtn_bundle_spec_t_blocks_methods, swig_dtn_bundle_spec_t_blocks_attributes, swig_dtn_bundle_spec_t_blocks_bases,swig_dtn_bundle_spec_t_blocks_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_bundle_id_t_source_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) 0 ;
  dtn_endpoint_id_t *arg2 = (dtn_endpoint_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_id_t_source_set self source ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_t_source_set" "', argument " "1"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_endpoint_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_id_t_source_set" "', argument " "2"" of type '" "dtn_endpoint_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_endpoint_id_t * >(argp2);
  if (arg1) (arg1)->source = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_t_source_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) 0 ;
  dtn_endpoint_id_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_id_t_source_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_t_source_get" "', argument " "1"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id_t * >(argp1);
  result = (dtn_endpoint_id_t *)& ((arg1)->source);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_endpoint_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_t_creation_ts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) 0 ;
  dtn_timestamp_t *arg2 = (dtn_timestamp_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_id_t_creation_ts_set self creation_ts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_t_creation_ts_set" "', argument " "1"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_id_t_creation_ts_set" "', argument " "2"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timestamp_t * >(argp2);
  if (arg1) (arg1)->creation_ts = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_t_creation_ts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) 0 ;
  dtn_timestamp_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_id_t_creation_ts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_t_creation_ts_get" "', argument " "1"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id_t * >(argp1);
  result = (dtn_timestamp_t *)& ((arg1)->creation_ts);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_timestamp_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_t_frag_offset_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_id_t_frag_offset_set self frag_offset ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_t_frag_offset_set" "', argument " "1"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_id_t_frag_offset_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_id_t_frag_offset_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->frag_offset = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_t_frag_offset_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_id_t_frag_offset_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_t_frag_offset_get" "', argument " "1"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id_t * >(argp1);
  result =  ((arg1)->frag_offset);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_t_orig_length_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_id_t_orig_length_set self orig_length ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_t_orig_length_set" "', argument " "1"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id_t * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_id_t_orig_length_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_id_t_orig_length_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->orig_length = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_t_orig_length_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_id_t_orig_length_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_t_orig_length_get" "', argument " "1"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id_t * >(argp1);
  result =  ((arg1)->orig_length);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle_id_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle_id_t *)new dtn_bundle_id_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle_id_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle_id_t" "', argument " "1"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle_id_t(void *obj) {
dtn_bundle_id_t *arg1 = (dtn_bundle_id_t *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_id_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_id_t_attributes[] = {
    { "-source",_wrap_dtn_bundle_id_t_source_get, _wrap_dtn_bundle_id_t_source_set},
    { "-creation_ts",_wrap_dtn_bundle_id_t_creation_ts_get, _wrap_dtn_bundle_id_t_creation_ts_set},
    { "-frag_offset",_wrap_dtn_bundle_id_t_frag_offset_get, _wrap_dtn_bundle_id_t_frag_offset_set},
    { "-orig_length",_wrap_dtn_bundle_id_t_orig_length_get, _wrap_dtn_bundle_id_t_orig_length_set},
    {0,0,0}
};
static swig_class *swig_dtn_bundle_id_t_bases[] = {0};
static const char * swig_dtn_bundle_id_t_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle_id_t = { "dtn_bundle_id_t", &SWIGTYPE_p_dtn_bundle_id_t,_wrap_new_dtn_bundle_id_t, swig_delete_dtn_bundle_id_t, swig_dtn_bundle_id_t_methods, swig_dtn_bundle_id_t_attributes, swig_dtn_bundle_id_t_bases,swig_dtn_bundle_id_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_bundle_status_report_t_bundle_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_bundle_id_t *arg2 = (dtn_bundle_id_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_t_bundle_id_set self bundle_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_bundle_id_set" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_status_report_t_bundle_id_set" "', argument " "2"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_id_t * >(argp2);
  if (arg1) (arg1)->bundle_id = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_bundle_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_bundle_id_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_t_bundle_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_bundle_id_get" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  result = (dtn_bundle_id_t *)& ((arg1)->bundle_id);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_id_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_reason_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_status_report_reason_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_t_reason_set self reason ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_reason_set" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_status_report_t_reason_set" "', argument " "2"" of type '" "dtn_status_report_reason_t""'");
  } 
  arg2 = static_cast< dtn_status_report_reason_t >(val2);
  if (arg1) (arg1)->reason = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_reason_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_status_report_reason_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_t_reason_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_reason_get" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  result = (dtn_status_report_reason_t) ((arg1)->reason);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_flags_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_status_report_flags_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_t_flags_set self flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_flags_set" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_status_report_t_flags_set" "', argument " "2"" of type '" "dtn_status_report_flags_t""'");
  } 
  arg2 = static_cast< dtn_status_report_flags_t >(val2);
  if (arg1) (arg1)->flags = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_flags_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_status_report_flags_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_t_flags_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_flags_get" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  result = (dtn_status_report_flags_t) ((arg1)->flags);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_receipt_ts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *arg2 = (dtn_timestamp_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_t_receipt_ts_set self receipt_ts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_receipt_ts_set" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_status_report_t_receipt_ts_set" "', argument " "2"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timestamp_t * >(argp2);
  if (arg1) (arg1)->receipt_ts = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_receipt_ts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_t_receipt_ts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_receipt_ts_get" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  result = (dtn_timestamp_t *)& ((arg1)->receipt_ts);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_timestamp_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_custody_ts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *arg2 = (dtn_timestamp_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_t_custody_ts_set self custody_ts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_custody_ts_set" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_status_report_t_custody_ts_set" "', argument " "2"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timestamp_t * >(argp2);
  if (arg1) (arg1)->custody_ts = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_custody_ts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_t_custody_ts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_custody_ts_get" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  result = (dtn_timestamp_t *)& ((arg1)->custody_ts);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_timestamp_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_forwarding_ts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *arg2 = (dtn_timestamp_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_t_forwarding_ts_set self forwarding_ts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_forwarding_ts_set" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_status_report_t_forwarding_ts_set" "', argument " "2"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timestamp_t * >(argp2);
  if (arg1) (arg1)->forwarding_ts = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_forwarding_ts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_t_forwarding_ts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_forwarding_ts_get" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  result = (dtn_timestamp_t *)& ((arg1)->forwarding_ts);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_timestamp_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_delivery_ts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *arg2 = (dtn_timestamp_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_t_delivery_ts_set self delivery_ts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_delivery_ts_set" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_status_report_t_delivery_ts_set" "', argument " "2"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timestamp_t * >(argp2);
  if (arg1) (arg1)->delivery_ts = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_delivery_ts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_t_delivery_ts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_delivery_ts_get" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  result = (dtn_timestamp_t *)& ((arg1)->delivery_ts);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_timestamp_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_deletion_ts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *arg2 = (dtn_timestamp_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_t_deletion_ts_set self deletion_ts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_deletion_ts_set" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_status_report_t_deletion_ts_set" "', argument " "2"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timestamp_t * >(argp2);
  if (arg1) (arg1)->deletion_ts = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_deletion_ts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_t_deletion_ts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_deletion_ts_get" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  result = (dtn_timestamp_t *)& ((arg1)->deletion_ts);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_timestamp_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_ack_by_app_ts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *arg2 = (dtn_timestamp_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_t_ack_by_app_ts_set self ack_by_app_ts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_ack_by_app_ts_set" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_status_report_t_ack_by_app_ts_set" "', argument " "2"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timestamp_t * >(argp2);
  if (arg1) (arg1)->ack_by_app_ts = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_t_ack_by_app_ts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  dtn_timestamp_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_t_ack_by_app_ts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_t_ack_by_app_ts_get" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  result = (dtn_timestamp_t *)& ((arg1)->ack_by_app_ts);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_timestamp_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle_status_report_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle_status_report_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle_status_report_t *)new dtn_bundle_status_report_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_status_report_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle_status_report_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle_status_report_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_status_report_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle_status_report_t" "', argument " "1"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_status_report_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle_status_report_t(void *obj) {
dtn_bundle_status_report_t *arg1 = (dtn_bundle_status_report_t *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_status_report_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_status_report_t_attributes[] = {
    { "-bundle_id",_wrap_dtn_bundle_status_report_t_bundle_id_get, _wrap_dtn_bundle_status_report_t_bundle_id_set},
    { "-reason",_wrap_dtn_bundle_status_report_t_reason_get, _wrap_dtn_bundle_status_report_t_reason_set},
    { "-flags",_wrap_dtn_bundle_status_report_t_flags_get, _wrap_dtn_bundle_status_report_t_flags_set},
    { "-receipt_ts",_wrap_dtn_bundle_status_report_t_receipt_ts_get, _wrap_dtn_bundle_status_report_t_receipt_ts_set},
    { "-custody_ts",_wrap_dtn_bundle_status_report_t_custody_ts_get, _wrap_dtn_bundle_status_report_t_custody_ts_set},
    { "-forwarding_ts",_wrap_dtn_bundle_status_report_t_forwarding_ts_get, _wrap_dtn_bundle_status_report_t_forwarding_ts_set},
    { "-delivery_ts",_wrap_dtn_bundle_status_report_t_delivery_ts_get, _wrap_dtn_bundle_status_report_t_delivery_ts_set},
    { "-deletion_ts",_wrap_dtn_bundle_status_report_t_deletion_ts_get, _wrap_dtn_bundle_status_report_t_deletion_ts_set},
    { "-ack_by_app_ts",_wrap_dtn_bundle_status_report_t_ack_by_app_ts_get, _wrap_dtn_bundle_status_report_t_ack_by_app_ts_set},
    {0,0,0}
};
static swig_class *swig_dtn_bundle_status_report_t_bases[] = {0};
static const char * swig_dtn_bundle_status_report_t_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle_status_report_t = { "dtn_bundle_status_report_t", &SWIGTYPE_p_dtn_bundle_status_report_t,_wrap_new_dtn_bundle_status_report_t, swig_delete_dtn_bundle_status_report_t, swig_dtn_bundle_status_report_t_methods, swig_dtn_bundle_status_report_t_attributes, swig_dtn_bundle_status_report_t_bases,swig_dtn_bundle_status_report_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_bundle_payload_t_location_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t *arg1 = (dtn_bundle_payload_t *) 0 ;
  dtn_bundle_payload_location_t arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_payload_t_location_set self location ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_location_set" "', argument " "1"" of type '" "dtn_bundle_payload_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t * >(argp1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_payload_t_location_set" "', argument " "2"" of type '" "dtn_bundle_payload_location_t""'");
  } 
  arg2 = static_cast< dtn_bundle_payload_location_t >(val2);
  if (arg1) (arg1)->location = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_location_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t *arg1 = (dtn_bundle_payload_t *) 0 ;
  dtn_bundle_payload_location_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_payload_t_location_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_location_get" "', argument " "1"" of type '" "dtn_bundle_payload_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t * >(argp1);
  result = (dtn_bundle_payload_location_t) ((arg1)->location);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_status_report_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t *arg1 = (dtn_bundle_payload_t *) 0 ;
  dtn_bundle_status_report_t *arg2 = (dtn_bundle_status_report_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_payload_t_status_report_set self status_report ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_status_report_set" "', argument " "1"" of type '" "dtn_bundle_payload_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_status_report_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_payload_t_status_report_set" "', argument " "2"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_status_report_t * >(argp2);
  if (arg1) (arg1)->status_report = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_status_report_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t *arg1 = (dtn_bundle_payload_t *) 0 ;
  dtn_bundle_status_report_t *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_payload_t_status_report_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_status_report_get" "', argument " "1"" of type '" "dtn_bundle_payload_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t * >(argp1);
  result = (dtn_bundle_status_report_t *) ((arg1)->status_report);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_status_report_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_buf_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t *arg1 = (dtn_bundle_payload_t *) 0 ;
  dtn_bundle_payload_t_buf *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_payload_t_buf_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_buf_get" "', argument " "1"" of type '" "dtn_bundle_payload_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t * >(argp1);
  result = (dtn_bundle_payload_t_buf *)& ((arg1)->buf);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_payload_t_buf,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_filename_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t *arg1 = (dtn_bundle_payload_t *) 0 ;
  dtn_bundle_payload_t_filename *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_payload_t_filename_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_filename_get" "', argument " "1"" of type '" "dtn_bundle_payload_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t * >(argp1);
  result = (dtn_bundle_payload_t_filename *)& ((arg1)->filename);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_payload_t_filename,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle_payload_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle_payload_t ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle_payload_t *)new dtn_bundle_payload_t();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_payload_t,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle_payload_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t *arg1 = (dtn_bundle_payload_t *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle_payload_t self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle_payload_t" "', argument " "1"" of type '" "dtn_bundle_payload_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle_payload_t(void *obj) {
dtn_bundle_payload_t *arg1 = (dtn_bundle_payload_t *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_payload_t_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_payload_t_attributes[] = {
    { "-location",_wrap_dtn_bundle_payload_t_location_get, _wrap_dtn_bundle_payload_t_location_set},
    { "-status_report",_wrap_dtn_bundle_payload_t_status_report_get, _wrap_dtn_bundle_payload_t_status_report_set},
    { "-buf",_wrap_dtn_bundle_payload_t_buf_get, 0 },
    { "-filename",_wrap_dtn_bundle_payload_t_filename_get, 0 },
    {0,0,0}
};
static swig_class *swig_dtn_bundle_payload_t_bases[] = {0};
static const char * swig_dtn_bundle_payload_t_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle_payload_t = { "dtn_bundle_payload_t", &SWIGTYPE_p_dtn_bundle_payload_t,_wrap_new_dtn_bundle_payload_t, swig_delete_dtn_bundle_payload_t, swig_dtn_bundle_payload_t_methods, swig_dtn_bundle_payload_t_attributes, swig_dtn_bundle_payload_t_bases,swig_dtn_bundle_payload_t_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_bundle_payload_t_buf_buf_len_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_buf *arg1 = (dtn_bundle_payload_t_buf *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_payload_t_buf_buf_len_set self buf_len ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_buf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_buf_buf_len_set" "', argument " "1"" of type '" "dtn_bundle_payload_t_buf *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_buf * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_payload_t_buf_buf_len_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_payload_t_buf_buf_len_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->buf_len = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_buf_buf_len_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_buf *arg1 = (dtn_bundle_payload_t_buf *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_payload_t_buf_buf_len_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_buf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_buf_buf_len_get" "', argument " "1"" of type '" "dtn_bundle_payload_t_buf *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_buf * >(argp1);
  result =  ((arg1)->buf_len);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_buf_buf_val_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_buf *arg1 = (dtn_bundle_payload_t_buf *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_payload_t_buf_buf_val_set self buf_val ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_buf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_buf_buf_val_set" "', argument " "1"" of type '" "dtn_bundle_payload_t_buf *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_buf * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_payload_t_buf_buf_val_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg1->buf_val) delete[] arg1->buf_val;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->buf_val = (char *)reinterpret_cast< char* >(memcpy((new char[size]), reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->buf_val = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_buf_buf_val_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_buf *arg1 = (dtn_bundle_payload_t_buf *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_payload_t_buf_buf_val_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_buf, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_buf_buf_val_get" "', argument " "1"" of type '" "dtn_bundle_payload_t_buf *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_buf * >(argp1);
  result = (char *) ((arg1)->buf_val);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle_payload_t_buf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_buf *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle_payload_t_buf ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle_payload_t_buf *)new dtn_bundle_payload_t_buf();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_payload_t_buf,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle_payload_t_buf(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_buf *arg1 = (dtn_bundle_payload_t_buf *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle_payload_t_buf self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_buf, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle_payload_t_buf" "', argument " "1"" of type '" "dtn_bundle_payload_t_buf *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_buf * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle_payload_t_buf(void *obj) {
dtn_bundle_payload_t_buf *arg1 = (dtn_bundle_payload_t_buf *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_payload_t_buf_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_payload_t_buf_attributes[] = {
    { "-buf_len",_wrap_dtn_bundle_payload_t_buf_buf_len_get, _wrap_dtn_bundle_payload_t_buf_buf_len_set},
    { "-buf_val",_wrap_dtn_bundle_payload_t_buf_buf_val_get, _wrap_dtn_bundle_payload_t_buf_buf_val_set},
    {0,0,0}
};
static swig_class *swig_dtn_bundle_payload_t_buf_bases[] = {0};
static const char * swig_dtn_bundle_payload_t_buf_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle_payload_t_buf = { "dtn_bundle_payload_t_buf", &SWIGTYPE_p_dtn_bundle_payload_t_buf,_wrap_new_dtn_bundle_payload_t_buf, swig_delete_dtn_bundle_payload_t_buf, swig_dtn_bundle_payload_t_buf_methods, swig_dtn_bundle_payload_t_buf_attributes, swig_dtn_bundle_payload_t_buf_bases,swig_dtn_bundle_payload_t_buf_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_bundle_payload_t_filename_filename_len_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_filename *arg1 = (dtn_bundle_payload_t_filename *) 0 ;
  u_int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_payload_t_filename_filename_len_set self filename_len ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_filename, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_filename_filename_len_set" "', argument " "1"" of type '" "dtn_bundle_payload_t_filename *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_filename * >(argp1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_payload_t_filename_filename_len_set" "', argument " "2"" of type '" "u_int""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_payload_t_filename_filename_len_set" "', argument " "2"" of type '" "u_int""'");
    } else {
      arg2 = *(reinterpret_cast< u_int * >(argp2));
    }
  }
  if (arg1) (arg1)->filename_len = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_filename_filename_len_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_filename *arg1 = (dtn_bundle_payload_t_filename *) 0 ;
  u_int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_payload_t_filename_filename_len_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_filename, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_filename_filename_len_get" "', argument " "1"" of type '" "dtn_bundle_payload_t_filename *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_filename * >(argp1);
  result =  ((arg1)->filename_len);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new u_int(static_cast< const u_int& >(result))), SWIGTYPE_p_u_int, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_filename_filename_val_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_filename *arg1 = (dtn_bundle_payload_t_filename *) 0 ;
  char *arg2 = (char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_payload_t_filename_filename_val_set self filename_val ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_filename, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_filename_filename_val_set" "', argument " "1"" of type '" "dtn_bundle_payload_t_filename *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_filename * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_payload_t_filename_filename_val_set" "', argument " "2"" of type '" "char *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  if (arg1->filename_val) delete[] arg1->filename_val;
  if (arg2) {
    size_t size = strlen(reinterpret_cast< const char * >(arg2)) + 1;
    arg1->filename_val = (char *)reinterpret_cast< char* >(memcpy((new char[size]), reinterpret_cast< const char * >(arg2), sizeof(char)*(size)));
  } else {
    arg1->filename_val = 0;
  }
  
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_t_filename_filename_val_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_filename *arg1 = (dtn_bundle_payload_t_filename *) 0 ;
  char *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_payload_t_filename_filename_val_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_filename, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_t_filename_filename_val_get" "', argument " "1"" of type '" "dtn_bundle_payload_t_filename *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_filename * >(argp1);
  result = (char *) ((arg1)->filename_val);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle_payload_t_filename(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_filename *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle_payload_t_filename ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle_payload_t_filename *)new dtn_bundle_payload_t_filename();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_payload_t_filename,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle_payload_t_filename(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_payload_t_filename *arg1 = (dtn_bundle_payload_t_filename *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle_payload_t_filename self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_payload_t_filename, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle_payload_t_filename" "', argument " "1"" of type '" "dtn_bundle_payload_t_filename *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_payload_t_filename * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle_payload_t_filename(void *obj) {
dtn_bundle_payload_t_filename *arg1 = (dtn_bundle_payload_t_filename *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_payload_t_filename_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_payload_t_filename_attributes[] = {
    { "-filename_len",_wrap_dtn_bundle_payload_t_filename_filename_len_get, _wrap_dtn_bundle_payload_t_filename_filename_len_set},
    { "-filename_val",_wrap_dtn_bundle_payload_t_filename_filename_val_get, _wrap_dtn_bundle_payload_t_filename_filename_val_set},
    {0,0,0}
};
static swig_class *swig_dtn_bundle_payload_t_filename_bases[] = {0};
static const char * swig_dtn_bundle_payload_t_filename_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle_payload_t_filename = { "dtn_bundle_payload_t_filename", &SWIGTYPE_p_dtn_bundle_payload_t_filename,_wrap_new_dtn_bundle_payload_t_filename, swig_delete_dtn_bundle_payload_t_filename, swig_dtn_bundle_payload_t_filename_methods, swig_dtn_bundle_payload_t_filename_attributes, swig_dtn_bundle_payload_t_filename_bases,swig_dtn_bundle_payload_t_filename_base_names, &swig_module };
SWIGINTERN int
_wrap_xdr_dtn_endpoint_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_endpoint_id_t *arg2 = (dtn_endpoint_id_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_endpoint_id_t XDR * dtn_endpoint_id_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_endpoint_id_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_endpoint_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_endpoint_id_t" "', argument " "2"" of type '" "dtn_endpoint_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_endpoint_id_t * >(argp2);
  result = xdr_dtn_endpoint_id_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_reg_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_reg_id_t *arg2 = (dtn_reg_id_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_reg_id_t XDR * dtn_reg_id_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_reg_id_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_u_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_reg_id_t" "', argument " "2"" of type '" "dtn_reg_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_reg_id_t * >(argp2);
  result = xdr_dtn_reg_id_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_timeval_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_timeval_t *arg2 = (dtn_timeval_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_timeval_t XDR * dtn_timeval_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_timeval_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_u_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_timeval_t" "', argument " "2"" of type '" "dtn_timeval_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timeval_t * >(argp2);
  result = xdr_dtn_timeval_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_timestamp_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_timestamp_t *arg2 = (dtn_timestamp_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_timestamp_t XDR * dtn_timestamp_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_timestamp_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_timestamp_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_timestamp_t" "', argument " "2"" of type '" "dtn_timestamp_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_timestamp_t * >(argp2);
  result = xdr_dtn_timestamp_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_service_tag_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_service_tag_t *arg2 = (dtn_service_tag_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_service_tag_t XDR * dtn_service_tag_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_service_tag_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_service_tag_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_service_tag_t" "', argument " "2"" of type '" "dtn_service_tag_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_service_tag_t * >(argp2);
  result = xdr_dtn_service_tag_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_reg_flags_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_reg_flags_t *arg2 = (dtn_reg_flags_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_reg_flags_t XDR * dtn_reg_flags_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_reg_flags_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_reg_flags_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_reg_flags_t" "', argument " "2"" of type '" "dtn_reg_flags_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_reg_flags_t * >(argp2);
  result = xdr_dtn_reg_flags_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_reg_info_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_reg_info_t *arg2 = (dtn_reg_info_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_reg_info_t XDR * dtn_reg_info_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_reg_info_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_reg_info_t" "', argument " "2"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_reg_info_t * >(argp2);
  result = xdr_dtn_reg_info_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_bundle_priority_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_bundle_priority_t *arg2 = (dtn_bundle_priority_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_bundle_priority_t XDR * dtn_bundle_priority_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_bundle_priority_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_priority_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_bundle_priority_t" "', argument " "2"" of type '" "dtn_bundle_priority_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_priority_t * >(argp2);
  result = xdr_dtn_bundle_priority_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_bundle_delivery_opts_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_bundle_delivery_opts_t *arg2 = (dtn_bundle_delivery_opts_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_bundle_delivery_opts_t XDR * dtn_bundle_delivery_opts_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_bundle_delivery_opts_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_delivery_opts_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_bundle_delivery_opts_t" "', argument " "2"" of type '" "dtn_bundle_delivery_opts_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_delivery_opts_t * >(argp2);
  result = xdr_dtn_bundle_delivery_opts_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_extension_block_flags_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_extension_block_flags_t *arg2 = (dtn_extension_block_flags_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_extension_block_flags_t XDR * dtn_extension_block_flags_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_extension_block_flags_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_extension_block_flags_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_extension_block_flags_t" "', argument " "2"" of type '" "dtn_extension_block_flags_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_extension_block_flags_t * >(argp2);
  result = xdr_dtn_extension_block_flags_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_extension_block_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_extension_block_t *arg2 = (dtn_extension_block_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_extension_block_t XDR * dtn_extension_block_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_extension_block_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_extension_block_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_extension_block_t" "', argument " "2"" of type '" "dtn_extension_block_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_extension_block_t * >(argp2);
  result = xdr_dtn_extension_block_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_sequence_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_sequence_id_t *arg2 = (dtn_sequence_id_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_sequence_id_t XDR * dtn_sequence_id_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_sequence_id_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_sequence_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_sequence_id_t" "', argument " "2"" of type '" "dtn_sequence_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_sequence_id_t * >(argp2);
  result = xdr_dtn_sequence_id_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_bundle_spec_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_bundle_spec_t *arg2 = (dtn_bundle_spec_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_bundle_spec_t XDR * dtn_bundle_spec_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_bundle_spec_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_spec_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_bundle_spec_t" "', argument " "2"" of type '" "dtn_bundle_spec_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_spec_t * >(argp2);
  result = xdr_dtn_bundle_spec_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_bundle_id_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_bundle_id_t *arg2 = (dtn_bundle_id_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_bundle_id_t XDR * dtn_bundle_id_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_bundle_id_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_id_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_bundle_id_t" "', argument " "2"" of type '" "dtn_bundle_id_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_id_t * >(argp2);
  result = xdr_dtn_bundle_id_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_status_report_reason_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_status_report_reason_t *arg2 = (dtn_status_report_reason_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_status_report_reason_t XDR * dtn_status_report_reason_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_status_report_reason_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_status_report_reason_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_status_report_reason_t" "', argument " "2"" of type '" "dtn_status_report_reason_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_status_report_reason_t * >(argp2);
  result = xdr_dtn_status_report_reason_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_status_report_flags_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_status_report_flags_t *arg2 = (dtn_status_report_flags_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_status_report_flags_t XDR * dtn_status_report_flags_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_status_report_flags_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_status_report_flags_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_status_report_flags_t" "', argument " "2"" of type '" "dtn_status_report_flags_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_status_report_flags_t * >(argp2);
  result = xdr_dtn_status_report_flags_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_bundle_status_report_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_bundle_status_report_t *arg2 = (dtn_bundle_status_report_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_bundle_status_report_t XDR * dtn_bundle_status_report_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_bundle_status_report_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_status_report_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_bundle_status_report_t" "', argument " "2"" of type '" "dtn_bundle_status_report_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_status_report_t * >(argp2);
  result = xdr_dtn_bundle_status_report_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_bundle_payload_location_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_bundle_payload_location_t *arg2 = (dtn_bundle_payload_location_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_bundle_payload_location_t XDR * dtn_bundle_payload_location_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_bundle_payload_location_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_payload_location_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_bundle_payload_location_t" "', argument " "2"" of type '" "dtn_bundle_payload_location_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_payload_location_t * >(argp2);
  result = xdr_dtn_bundle_payload_location_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_xdr_dtn_bundle_payload_t(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  XDR *arg1 = (XDR *) 0 ;
  dtn_bundle_payload_t *arg2 = (dtn_bundle_payload_t *) 0 ;
  bool_t result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:xdr_dtn_bundle_payload_t XDR * dtn_bundle_payload_t * ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_XDR, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "xdr_dtn_bundle_payload_t" "', argument " "1"" of type '" "XDR *""'"); 
  }
  arg1 = reinterpret_cast< XDR * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_payload_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "xdr_dtn_bundle_payload_t" "', argument " "2"" of type '" "dtn_bundle_payload_t *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_payload_t * >(argp2);
  result = xdr_dtn_bundle_payload_t(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new bool_t(static_cast< const bool_t& >(result))), SWIGTYPE_p_bool_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_strerror(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  char *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_strerror err ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_strerror" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (char *)dtn_strerror(arg1);
  Tcl_SetObjResult(interp,SWIG_FromCharPtr((const char *)result));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN const char *_wrap_Handles_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, char *name1, char *name2, int flags) {
  Tcl_Obj *value = 0;
  
  value = SWIG_NewInstanceObj(SWIG_as_voidptr(&Handles), SWIGTYPE_p_mapT_unsigned_int_dtn_handle_t_t, 0 );
  if (value) {
    Tcl_SetVar2(interp,name1,name2,Tcl_GetStringFromObj(value,NULL), flags);
    Tcl_DecrRefCount(value);
  }
  return NULL;
}


SWIGINTERN const char *_wrap_Handles_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, char *name1, char *name2 SWIGUNUSED, int flags) {
  Tcl_Obj *value = 0;
  Tcl_Obj *name1o = 0;
  
  name1o = Tcl_NewStringObj(name1,-1);
  value = Tcl_ObjGetVar2(interp, name1o, 0, flags);
  Tcl_DecrRefCount(name1o);
  if (!value) SWIG_fail;
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(value, &argp, SWIGTYPE_p_mapT_unsigned_int_dtn_handle_t_t,  0 );
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""Handles""' of type '""HandleMap""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""Handles""' of type '""HandleMap""'");
    } else {
      Handles = *(reinterpret_cast< HandleMap * >(argp));
    }
  }
  return NULL;
fail:
  return "Handles";
}


SWIGINTERN const char *_wrap_HandleID_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, char *name1, char *name2, int flags) {
  Tcl_Obj *value = 0;
  
  value = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(HandleID));
  if (value) {
    Tcl_SetVar2(interp,name1,name2,Tcl_GetStringFromObj(value,NULL), flags);
    Tcl_DecrRefCount(value);
  }
  return NULL;
}


SWIGINTERN const char *_wrap_HandleID_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, char *name1, char *name2 SWIGUNUSED, int flags) {
  Tcl_Obj *value = 0;
  Tcl_Obj *name1o = 0;
  
  name1o = Tcl_NewStringObj(name1,-1);
  value = Tcl_ObjGetVar2(interp, name1o, 0, flags);
  Tcl_DecrRefCount(name1o);
  if (!value) SWIG_fail;
  {
    unsigned int val;
    int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(value, &val);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""HandleID""' of type '""unsigned int""'");
    }
    HandleID = static_cast< unsigned int >(val);
  }
  return NULL;
fail:
  return "HandleID";
}


SWIGINTERN int
_wrap_dtn_open(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int result;
  
  if (SWIG_GetArgs(interp, objc, objv,":dtn_open ") == TCL_ERROR) SWIG_fail;
  result = (int)dtn_open();
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_find_handle(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  dtn_handle_t result;
  int val1 ;
  int ecode1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:find_handle i ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "find_handle" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = find_handle(arg1);
  Tcl_SetObjResult(interp,SWIG_NewInstanceObj((new dtn_handle_t(static_cast< const dtn_handle_t& >(result))), SWIGTYPE_p_dtn_handle_t, SWIG_POINTER_OWN | 0 ));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_close(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_close handle ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_close" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  dtn_close(arg1);
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_errno(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_errno handle ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_errno" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)dtn_errno(arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_build_local_eid(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  char *arg2 = (char *) 0 ;
  std::string result;
  int val1 ;
  int ecode1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_build_local_eid handle service_tag ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_build_local_eid" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_AsCharPtrAndSize(objv[2], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_build_local_eid" "', argument " "2"" of type '" "char const *""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  result = dtn_build_local_eid(arg1,(char const *)arg2);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_OK;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_build_reginfo(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_reg_info_t *arg1 = (dtn_reg_info_t *) 0 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  unsigned int arg4 ;
  bool arg5 ;
  std::string *arg6 = 0 ;
  int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int res6 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:build_reginfo reginfo endpoint flags expiration init_passive script ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_reg_info_t, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "build_reginfo" "', argument " "1"" of type '" "dtn_reg_info_t *""'"); 
  }
  arg1 = reinterpret_cast< dtn_reg_info_t * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "build_reginfo" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "build_reginfo" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "build_reginfo" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "build_reginfo" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "build_reginfo" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "build_reginfo" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "build_reginfo" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  result = (int)build_reginfo(arg1,(std::string const &)*arg2,arg3,arg4,arg5,(std::string const &)*arg6);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_register(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  std::string *arg2 = 0 ;
  unsigned int arg3 ;
  int arg4 ;
  bool arg5 ;
  std::string *arg6 = 0 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  unsigned int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  bool val5 ;
  int ecode5 = 0 ;
  int res6 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooo:dtn_register handle endpoint flags expiration init_passive script ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_register" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_register" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_register" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  ecode3 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dtn_register" "', argument " "3"" of type '" "unsigned int""'");
  } 
  arg3 = static_cast< unsigned int >(val3);
  ecode4 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "dtn_register" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  ecode5 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "dtn_register" "', argument " "5"" of type '" "bool""'");
  } 
  arg5 = static_cast< bool >(val5);
  {
    std::string *ptr = (std::string *)0;
    res6 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[6], &ptr);
    if (!SWIG_IsOK(res6)) {
      SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "dtn_register" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_register" "', argument " "6"" of type '" "std::string const &""'"); 
    }
    arg6 = ptr;
  }
  result = (int)dtn_register(arg1,(std::string const &)*arg2,arg3,arg4,arg5,(std::string const &)*arg6);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  if (SWIG_IsNewObj(res6)) delete arg6;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_unregister(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  dtn_reg_id_t arg2 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_unregister handle regid ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_unregister" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_unregister" "', argument " "2"" of type '" "dtn_reg_id_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_unregister" "', argument " "2"" of type '" "dtn_reg_id_t""'");
    } else {
      arg2 = *(reinterpret_cast< dtn_reg_id_t * >(argp2));
    }
  }
  result = (int)dtn_unregister(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_find_registration(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  std::string *arg2 = 0 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_find_registration handle endpoint ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_find_registration" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_find_registration" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_find_registration" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  result = (int)dtn_find_registration(arg1,(std::string const &)*arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_change_registration(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  dtn_reg_id_t arg2 ;
  std::string *arg3 = 0 ;
  unsigned int arg4 ;
  int arg5 ;
  bool arg6 ;
  std::string *arg7 = 0 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  unsigned int val4 ;
  int ecode4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  bool val6 ;
  int ecode6 = 0 ;
  int res7 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooo:dtn_change_registration handle regid endpoint action expiration init_passive script ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_change_registration" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  {
    res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_u_int,  0 );
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_change_registration" "', argument " "2"" of type '" "dtn_reg_id_t""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_change_registration" "', argument " "2"" of type '" "dtn_reg_id_t""'");
    } else {
      arg2 = *(reinterpret_cast< dtn_reg_id_t * >(argp2));
    }
  }
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dtn_change_registration" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_change_registration" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  ecode4 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[4], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "dtn_change_registration" "', argument " "4"" of type '" "unsigned int""'");
  } 
  arg4 = static_cast< unsigned int >(val4);
  ecode5 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[5], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "dtn_change_registration" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_bool SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "dtn_change_registration" "', argument " "6"" of type '" "bool""'");
  } 
  arg6 = static_cast< bool >(val6);
  {
    std::string *ptr = (std::string *)0;
    res7 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[7], &ptr);
    if (!SWIG_IsOK(res7)) {
      SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "dtn_change_registration" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_change_registration" "', argument " "7"" of type '" "std::string const &""'"); 
    }
    arg7 = ptr;
  }
  result = (int)dtn_change_registration(arg1,arg2,(std::string const &)*arg3,arg4,arg5,arg6,(std::string const &)*arg7);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res7)) delete arg7;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bind(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int arg2 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bind handle regid ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_bind" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bind" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)dtn_bind(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_unbind(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int arg2 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_unbind handle regid ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_unbind" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_unbind" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)dtn_unbind(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_source_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id *arg1 = (dtn_bundle_id *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_id_source_set self source ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_source_set" "', argument " "1"" of type '" "dtn_bundle_id *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_id_source_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_id_source_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->source = *arg2;
  
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_source_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id *arg1 = (dtn_bundle_id *) 0 ;
  std::string *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_id_source_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_source_get" "', argument " "1"" of type '" "dtn_bundle_id *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id * >(argp1);
  {
    std::string const &_result_ref =  ((arg1)->source);
    result = (std::string *) &_result_ref;
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_creation_secs_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id *arg1 = (dtn_bundle_id *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_id_creation_secs_set self creation_secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_creation_secs_set" "', argument " "1"" of type '" "dtn_bundle_id *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_id_creation_secs_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->creation_secs = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_creation_secs_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id *arg1 = (dtn_bundle_id *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_id_creation_secs_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_creation_secs_get" "', argument " "1"" of type '" "dtn_bundle_id *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id * >(argp1);
  result = (unsigned int) ((arg1)->creation_secs);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_creation_seqno_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id *arg1 = (dtn_bundle_id *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_id_creation_seqno_set self creation_seqno ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_creation_seqno_set" "', argument " "1"" of type '" "dtn_bundle_id *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_id_creation_seqno_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->creation_seqno = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_id_creation_seqno_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id *arg1 = (dtn_bundle_id *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_id_creation_seqno_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_id_creation_seqno_get" "', argument " "1"" of type '" "dtn_bundle_id *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id * >(argp1);
  result = (unsigned int) ((arg1)->creation_seqno);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle_id(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle_id ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle_id *)new dtn_bundle_id();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_id,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle_id(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle_id *arg1 = (dtn_bundle_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle_id self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle_id, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle_id" "', argument " "1"" of type '" "dtn_bundle_id *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle_id * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle_id(void *obj) {
dtn_bundle_id *arg1 = (dtn_bundle_id *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_id_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_id_attributes[] = {
    { "-source",_wrap_dtn_bundle_id_source_get, _wrap_dtn_bundle_id_source_set},
    { "-creation_secs",_wrap_dtn_bundle_id_creation_secs_get, _wrap_dtn_bundle_id_creation_secs_set},
    { "-creation_seqno",_wrap_dtn_bundle_id_creation_seqno_get, _wrap_dtn_bundle_id_creation_seqno_set},
    {0,0,0}
};
static swig_class *swig_dtn_bundle_id_bases[] = {0};
static const char * swig_dtn_bundle_id_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle_id = { "dtn_bundle_id", &SWIGTYPE_p_dtn_bundle_id,_wrap_new_dtn_bundle_id, swig_delete_dtn_bundle_id, swig_dtn_bundle_id_methods, swig_dtn_bundle_id_attributes, swig_dtn_bundle_id_bases,swig_dtn_bundle_id_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_send__SWIG_0(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  unsigned int arg6 ;
  unsigned int arg7 ;
  unsigned int arg8 ;
  unsigned int arg9 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  std::string *arg12 = 0 ;
  dtn_bundle_id *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  unsigned int val8 ;
  int ecode8 = 0 ;
  unsigned int val9 ;
  int ecode9 = 0 ;
  int res10 = SWIG_OLDOBJ ;
  int res11 = SWIG_OLDOBJ ;
  int res12 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooooooooo:dtn_send handle regid source dest replyto priority dopts expiration payload_location payload_data sequence_id obsoletes_id ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_send" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_send" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dtn_send" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dtn_send" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "dtn_send" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  ecode6 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "dtn_send" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[7], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "dtn_send" "', argument " "7"" of type '" "unsigned int""'");
  } 
  arg7 = static_cast< unsigned int >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[8], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "dtn_send" "', argument " "8"" of type '" "unsigned int""'");
  } 
  arg8 = static_cast< unsigned int >(val8);
  ecode9 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[9], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "dtn_send" "', argument " "9"" of type '" "unsigned int""'");
  } 
  arg9 = static_cast< unsigned int >(val9);
  {
    std::string *ptr = (std::string *)0;
    res10 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[10], &ptr);
    if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "dtn_send" "', argument " "10"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "10"" of type '" "std::string const &""'"); 
    }
    arg10 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res11 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[11], &ptr);
    if (!SWIG_IsOK(res11)) {
      SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "dtn_send" "', argument " "11"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "11"" of type '" "std::string const &""'"); 
    }
    arg11 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res12 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[12], &ptr);
    if (!SWIG_IsOK(res12)) {
      SWIG_exception_fail(SWIG_ArgError(res12), "in method '" "dtn_send" "', argument " "12"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "12"" of type '" "std::string const &""'"); 
    }
    arg12 = ptr;
  }
  result = (dtn_bundle_id *)dtn_send(arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,arg6,arg7,arg8,arg9,(std::string const &)*arg10,(std::string const &)*arg11,(std::string const &)*arg12);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_id,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res10)) delete arg10;
  if (SWIG_IsNewObj(res11)) delete arg11;
  if (SWIG_IsNewObj(res12)) delete arg12;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res10)) delete arg10;
  if (SWIG_IsNewObj(res11)) delete arg11;
  if (SWIG_IsNewObj(res12)) delete arg12;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_send__SWIG_1(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  unsigned int arg6 ;
  unsigned int arg7 ;
  unsigned int arg8 ;
  unsigned int arg9 ;
  std::string *arg10 = 0 ;
  std::string *arg11 = 0 ;
  dtn_bundle_id *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  unsigned int val8 ;
  int ecode8 = 0 ;
  unsigned int val9 ;
  int ecode9 = 0 ;
  int res10 = SWIG_OLDOBJ ;
  int res11 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooooooooooo:dtn_send handle regid source dest replyto priority dopts expiration payload_location payload_data sequence_id ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_send" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_send" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dtn_send" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dtn_send" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "dtn_send" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  ecode6 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "dtn_send" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[7], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "dtn_send" "', argument " "7"" of type '" "unsigned int""'");
  } 
  arg7 = static_cast< unsigned int >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[8], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "dtn_send" "', argument " "8"" of type '" "unsigned int""'");
  } 
  arg8 = static_cast< unsigned int >(val8);
  ecode9 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[9], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "dtn_send" "', argument " "9"" of type '" "unsigned int""'");
  } 
  arg9 = static_cast< unsigned int >(val9);
  {
    std::string *ptr = (std::string *)0;
    res10 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[10], &ptr);
    if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "dtn_send" "', argument " "10"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "10"" of type '" "std::string const &""'"); 
    }
    arg10 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res11 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[11], &ptr);
    if (!SWIG_IsOK(res11)) {
      SWIG_exception_fail(SWIG_ArgError(res11), "in method '" "dtn_send" "', argument " "11"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "11"" of type '" "std::string const &""'"); 
    }
    arg11 = ptr;
  }
  result = (dtn_bundle_id *)dtn_send(arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,arg6,arg7,arg8,arg9,(std::string const &)*arg10,(std::string const &)*arg11);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_id,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res10)) delete arg10;
  if (SWIG_IsNewObj(res11)) delete arg11;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res10)) delete arg10;
  if (SWIG_IsNewObj(res11)) delete arg11;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_send__SWIG_2(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int arg2 ;
  std::string *arg3 = 0 ;
  std::string *arg4 = 0 ;
  std::string *arg5 = 0 ;
  unsigned int arg6 ;
  unsigned int arg7 ;
  unsigned int arg8 ;
  unsigned int arg9 ;
  std::string *arg10 = 0 ;
  dtn_bundle_id *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int res3 = SWIG_OLDOBJ ;
  int res4 = SWIG_OLDOBJ ;
  int res5 = SWIG_OLDOBJ ;
  unsigned int val6 ;
  int ecode6 = 0 ;
  unsigned int val7 ;
  int ecode7 = 0 ;
  unsigned int val8 ;
  int ecode8 = 0 ;
  unsigned int val9 ;
  int ecode9 = 0 ;
  int res10 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oooooooooo:dtn_send handle regid source dest replyto priority dopts expiration payload_location payload_data ",(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_send" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_send" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  {
    std::string *ptr = (std::string *)0;
    res3 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[3], &ptr);
    if (!SWIG_IsOK(res3)) {
      SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dtn_send" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "3"" of type '" "std::string const &""'"); 
    }
    arg3 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res4 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[4], &ptr);
    if (!SWIG_IsOK(res4)) {
      SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dtn_send" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "4"" of type '" "std::string const &""'"); 
    }
    arg4 = ptr;
  }
  {
    std::string *ptr = (std::string *)0;
    res5 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[5], &ptr);
    if (!SWIG_IsOK(res5)) {
      SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "dtn_send" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "5"" of type '" "std::string const &""'"); 
    }
    arg5 = ptr;
  }
  ecode6 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[6], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "dtn_send" "', argument " "6"" of type '" "unsigned int""'");
  } 
  arg6 = static_cast< unsigned int >(val6);
  ecode7 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[7], &val7);
  if (!SWIG_IsOK(ecode7)) {
    SWIG_exception_fail(SWIG_ArgError(ecode7), "in method '" "dtn_send" "', argument " "7"" of type '" "unsigned int""'");
  } 
  arg7 = static_cast< unsigned int >(val7);
  ecode8 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[8], &val8);
  if (!SWIG_IsOK(ecode8)) {
    SWIG_exception_fail(SWIG_ArgError(ecode8), "in method '" "dtn_send" "', argument " "8"" of type '" "unsigned int""'");
  } 
  arg8 = static_cast< unsigned int >(val8);
  ecode9 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[9], &val9);
  if (!SWIG_IsOK(ecode9)) {
    SWIG_exception_fail(SWIG_ArgError(ecode9), "in method '" "dtn_send" "', argument " "9"" of type '" "unsigned int""'");
  } 
  arg9 = static_cast< unsigned int >(val9);
  {
    std::string *ptr = (std::string *)0;
    res10 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[10], &ptr);
    if (!SWIG_IsOK(res10)) {
      SWIG_exception_fail(SWIG_ArgError(res10), "in method '" "dtn_send" "', argument " "10"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_send" "', argument " "10"" of type '" "std::string const &""'"); 
    }
    arg10 = ptr;
  }
  result = (dtn_bundle_id *)dtn_send(arg1,arg2,(std::string const &)*arg3,(std::string const &)*arg4,(std::string const &)*arg5,arg6,arg7,arg8,arg9,(std::string const &)*arg10);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_id,0));
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res10)) delete arg10;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res3)) delete arg3;
  if (SWIG_IsNewObj(res4)) delete arg4;
  if (SWIG_IsNewObj(res5)) delete arg5;
  if (SWIG_IsNewObj(res10)) delete arg10;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_send(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  Tcl_Obj *CONST *argv = objv+1;
  int argc = objc-1;
  if (argc == 10) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[9], (std::string**)(0));
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        return _wrap_dtn_send__SWIG_2(clientData, interp, objc, argv - 1);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 11) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[9], (std::string**)(0));
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[10], (std::string**)(0));
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          return _wrap_dtn_send__SWIG_1(clientData, interp, objc, argv - 1);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  if (argc == 12) {
    int _v;
    {
      int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[2], (std::string**)(0));
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[3], (std::string**)(0));
          _v = SWIG_CheckState(res);
          if (_v) {
            int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[4], (std::string**)(0));
            _v = SWIG_CheckState(res);
            if (_v) {
              {
                int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                {
                  int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[6], NULL);
                  _v = SWIG_CheckState(res);
                }
                if (_v) {
                  {
                    int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[7], NULL);
                    _v = SWIG_CheckState(res);
                  }
                  if (_v) {
                    {
                      int res = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(argv[8], NULL);
                      _v = SWIG_CheckState(res);
                    }
                    if (_v) {
                      int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[9], (std::string**)(0));
                      _v = SWIG_CheckState(res);
                      if (_v) {
                        int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[10], (std::string**)(0));
                        _v = SWIG_CheckState(res);
                        if (_v) {
                          int res = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(argv[11], (std::string**)(0));
                          _v = SWIG_CheckState(res);
                          if (_v) {
                            return _wrap_dtn_send__SWIG_0(clientData, interp, objc, argv - 1);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  
  Tcl_SetResult(interp,(char *) "No matching function for overloaded 'dtn_send'", TCL_STATIC);
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_cancel(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  dtn_bundle_id *arg2 = 0 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_cancel handle id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_cancel" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2, SWIGTYPE_p_dtn_bundle_id,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_cancel" "', argument " "2"" of type '" "dtn_bundle_id const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_cancel" "', argument " "2"" of type '" "dtn_bundle_id const &""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_id * >(argp2);
  result = (int)dtn_cancel(arg1,(dtn_bundle_id const &)*arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_bundle_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  dtn_bundle_id *arg2 = (dtn_bundle_id *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_bundle_id_set self bundle_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_bundle_id_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_bundle_id, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_status_report_bundle_id_set" "', argument " "2"" of type '" "dtn_bundle_id *""'"); 
  }
  arg2 = reinterpret_cast< dtn_bundle_id * >(argp2);
  if (arg1) (arg1)->bundle_id = *arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_bundle_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  dtn_bundle_id *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_bundle_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_bundle_id_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (dtn_bundle_id *)& ((arg1)->bundle_id);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle_id,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_reason_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_reason_set self reason ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_reason_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_reason_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->reason = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_reason_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_reason_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_reason_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->reason);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_flags_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_flags_set self flags ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_flags_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_flags_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->flags = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_flags_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_flags_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_flags_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->flags);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_receipt_ts_secs_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_receipt_ts_secs_set self receipt_ts_secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_receipt_ts_secs_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_receipt_ts_secs_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->receipt_ts_secs = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_receipt_ts_secs_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_receipt_ts_secs_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_receipt_ts_secs_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->receipt_ts_secs);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_receipt_ts_seqno_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_receipt_ts_seqno_set self receipt_ts_seqno ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_receipt_ts_seqno_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_receipt_ts_seqno_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->receipt_ts_seqno = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_receipt_ts_seqno_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_receipt_ts_seqno_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_receipt_ts_seqno_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->receipt_ts_seqno);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_custody_ts_secs_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_custody_ts_secs_set self custody_ts_secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_custody_ts_secs_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_custody_ts_secs_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->custody_ts_secs = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_custody_ts_secs_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_custody_ts_secs_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_custody_ts_secs_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->custody_ts_secs);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_custody_ts_seqno_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_custody_ts_seqno_set self custody_ts_seqno ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_custody_ts_seqno_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_custody_ts_seqno_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->custody_ts_seqno = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_custody_ts_seqno_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_custody_ts_seqno_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_custody_ts_seqno_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->custody_ts_seqno);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_forwarding_ts_secs_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_forwarding_ts_secs_set self forwarding_ts_secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_forwarding_ts_secs_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_forwarding_ts_secs_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->forwarding_ts_secs = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_forwarding_ts_secs_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_forwarding_ts_secs_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_forwarding_ts_secs_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->forwarding_ts_secs);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_forwarding_ts_seqno_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_forwarding_ts_seqno_set self forwarding_ts_seqno ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_forwarding_ts_seqno_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_forwarding_ts_seqno_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->forwarding_ts_seqno = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_forwarding_ts_seqno_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_forwarding_ts_seqno_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_forwarding_ts_seqno_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->forwarding_ts_seqno);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_delivery_ts_secs_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_delivery_ts_secs_set self delivery_ts_secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_delivery_ts_secs_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_delivery_ts_secs_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->delivery_ts_secs = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_delivery_ts_secs_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_delivery_ts_secs_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_delivery_ts_secs_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->delivery_ts_secs);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_delivery_ts_seqno_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_delivery_ts_seqno_set self delivery_ts_seqno ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_delivery_ts_seqno_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_delivery_ts_seqno_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->delivery_ts_seqno = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_delivery_ts_seqno_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_delivery_ts_seqno_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_delivery_ts_seqno_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->delivery_ts_seqno);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_deletion_ts_secs_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_deletion_ts_secs_set self deletion_ts_secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_deletion_ts_secs_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_deletion_ts_secs_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->deletion_ts_secs = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_deletion_ts_secs_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_deletion_ts_secs_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_deletion_ts_secs_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->deletion_ts_secs);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_deletion_ts_seqno_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_deletion_ts_seqno_set self deletion_ts_seqno ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_deletion_ts_seqno_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_deletion_ts_seqno_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->deletion_ts_seqno = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_deletion_ts_seqno_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_deletion_ts_seqno_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_deletion_ts_seqno_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->deletion_ts_seqno);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_ack_by_app_ts_secs_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_ack_by_app_ts_secs_set self ack_by_app_ts_secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_ack_by_app_ts_secs_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_ack_by_app_ts_secs_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->ack_by_app_ts_secs = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_ack_by_app_ts_secs_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_ack_by_app_ts_secs_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_ack_by_app_ts_secs_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->ack_by_app_ts_secs);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_ack_by_app_ts_seqno_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_status_report_ack_by_app_ts_seqno_set self ack_by_app_ts_seqno ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_ack_by_app_ts_seqno_set" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_status_report_ack_by_app_ts_seqno_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->ack_by_app_ts_seqno = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_status_report_ack_by_app_ts_seqno_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_ack_by_app_ts_seqno_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_status_report_ack_by_app_ts_seqno_get" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  result = (unsigned int) ((arg1)->ack_by_app_ts_seqno);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_status_report(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_status_report ") == TCL_ERROR) SWIG_fail;
  result = (dtn_status_report *)new dtn_status_report();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_status_report,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_status_report(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_status_report *arg1 = (dtn_status_report *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_status_report self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_status_report, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_status_report" "', argument " "1"" of type '" "dtn_status_report *""'"); 
  }
  arg1 = reinterpret_cast< dtn_status_report * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_status_report(void *obj) {
dtn_status_report *arg1 = (dtn_status_report *) obj;
delete arg1;
}
static swig_method swig_dtn_status_report_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_status_report_attributes[] = {
    { "-bundle_id",_wrap_dtn_status_report_bundle_id_get, _wrap_dtn_status_report_bundle_id_set},
    { "-reason",_wrap_dtn_status_report_reason_get, _wrap_dtn_status_report_reason_set},
    { "-flags",_wrap_dtn_status_report_flags_get, _wrap_dtn_status_report_flags_set},
    { "-receipt_ts_secs",_wrap_dtn_status_report_receipt_ts_secs_get, _wrap_dtn_status_report_receipt_ts_secs_set},
    { "-receipt_ts_seqno",_wrap_dtn_status_report_receipt_ts_seqno_get, _wrap_dtn_status_report_receipt_ts_seqno_set},
    { "-custody_ts_secs",_wrap_dtn_status_report_custody_ts_secs_get, _wrap_dtn_status_report_custody_ts_secs_set},
    { "-custody_ts_seqno",_wrap_dtn_status_report_custody_ts_seqno_get, _wrap_dtn_status_report_custody_ts_seqno_set},
    { "-forwarding_ts_secs",_wrap_dtn_status_report_forwarding_ts_secs_get, _wrap_dtn_status_report_forwarding_ts_secs_set},
    { "-forwarding_ts_seqno",_wrap_dtn_status_report_forwarding_ts_seqno_get, _wrap_dtn_status_report_forwarding_ts_seqno_set},
    { "-delivery_ts_secs",_wrap_dtn_status_report_delivery_ts_secs_get, _wrap_dtn_status_report_delivery_ts_secs_set},
    { "-delivery_ts_seqno",_wrap_dtn_status_report_delivery_ts_seqno_get, _wrap_dtn_status_report_delivery_ts_seqno_set},
    { "-deletion_ts_secs",_wrap_dtn_status_report_deletion_ts_secs_get, _wrap_dtn_status_report_deletion_ts_secs_set},
    { "-deletion_ts_seqno",_wrap_dtn_status_report_deletion_ts_seqno_get, _wrap_dtn_status_report_deletion_ts_seqno_set},
    { "-ack_by_app_ts_secs",_wrap_dtn_status_report_ack_by_app_ts_secs_get, _wrap_dtn_status_report_ack_by_app_ts_secs_set},
    { "-ack_by_app_ts_seqno",_wrap_dtn_status_report_ack_by_app_ts_seqno_get, _wrap_dtn_status_report_ack_by_app_ts_seqno_set},
    {0,0,0}
};
static swig_class *swig_dtn_status_report_bases[] = {0};
static const char * swig_dtn_status_report_base_names[] = {0};
static swig_class _wrap_class_dtn_status_report = { "dtn_status_report", &SWIGTYPE_p_dtn_status_report,_wrap_new_dtn_status_report, swig_delete_dtn_status_report, swig_dtn_status_report_methods, swig_dtn_status_report_attributes, swig_dtn_status_report_bases,swig_dtn_status_report_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_status_report_reason_to_str(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  unsigned int arg1 ;
  std::string result;
  unsigned int val1 ;
  int ecode1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_status_report_reason_to_str reason ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_status_report_reason_to_str" "', argument " "1"" of type '" "unsigned int""'");
  } 
  arg1 = static_cast< unsigned int >(val1);
  result = dtn_status_report_reason_to_str(arg1);
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_source_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_source_set self source ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_source_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_source_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_source_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->source = *arg2;
  
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_source_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_source_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_source_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string const &_result_ref =  ((arg1)->source);
    result = (std::string *) &_result_ref;
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_dest_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_dest_set self dest ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_dest_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_dest_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_dest_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->dest = *arg2;
  
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_dest_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_dest_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_dest_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string const &_result_ref =  ((arg1)->dest);
    result = (std::string *) &_result_ref;
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_replyto_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_replyto_set self replyto ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_replyto_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_replyto_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_replyto_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->replyto = *arg2;
  
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_replyto_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_replyto_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_replyto_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string const &_result_ref =  ((arg1)->replyto);
    result = (std::string *) &_result_ref;
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_priority_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_priority_set self priority ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_priority_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_priority_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->priority = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_priority_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_priority_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_priority_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  result = (unsigned int) ((arg1)->priority);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_dopts_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_dopts_set self dopts ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_dopts_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_dopts_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->dopts = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_dopts_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_dopts_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_dopts_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  result = (unsigned int) ((arg1)->dopts);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_expiration_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_expiration_set self expiration ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_expiration_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_expiration_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->expiration = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_expiration_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_expiration_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_expiration_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  result = (unsigned int) ((arg1)->expiration);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_creation_secs_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_creation_secs_set self creation_secs ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_creation_secs_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_creation_secs_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->creation_secs = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_creation_secs_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_creation_secs_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_creation_secs_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  result = (unsigned int) ((arg1)->creation_secs);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_creation_seqno_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_creation_seqno_set self creation_seqno ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_creation_seqno_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_creation_seqno_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->creation_seqno = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_creation_seqno_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_creation_seqno_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_creation_seqno_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  result = (unsigned int) ((arg1)->creation_seqno);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_delivery_regid_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_delivery_regid_set self delivery_regid ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_delivery_regid_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_bundle_delivery_regid_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->delivery_regid = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_delivery_regid_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_delivery_regid_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_delivery_regid_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  result = (unsigned int) ((arg1)->delivery_regid);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_sequence_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_sequence_id_set self sequence_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_sequence_id_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_sequence_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_sequence_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->sequence_id = *arg2;
  
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_sequence_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_sequence_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_sequence_id_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string const &_result_ref =  ((arg1)->sequence_id);
    result = (std::string *) &_result_ref;
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_obsoletes_id_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_obsoletes_id_set self obsoletes_id ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_obsoletes_id_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_obsoletes_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_obsoletes_id_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->obsoletes_id = *arg2;
  
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_obsoletes_id_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_obsoletes_id_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_obsoletes_id_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string const &_result_ref =  ((arg1)->obsoletes_id);
    result = (std::string *) &_result_ref;
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_payload_set self payload ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_payload_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_bundle_payload_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->payload = *arg2;
  
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_payload_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  std::string *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_payload_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_payload_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  {
    std::string const &_result_ref =  ((arg1)->payload);
    result = (std::string *) &_result_ref;
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  dtn_status_report *arg2 = (dtn_status_report *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_bundle_status_report_set self status_report ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_set" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  res2 = SWIG_ConvertPtr(objv[2], &argp2,SWIGTYPE_p_dtn_status_report, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_bundle_status_report_set" "', argument " "2"" of type '" "dtn_status_report *""'"); 
  }
  arg2 = reinterpret_cast< dtn_status_report * >(argp2);
  if (arg1) (arg1)->status_report = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_bundle_status_report_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  dtn_status_report *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_bundle_status_report_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_bundle_status_report_get" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  result = (dtn_status_report *) ((arg1)->status_report);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_status_report,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_bundle(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_bundle ") == TCL_ERROR) SWIG_fail;
  result = (dtn_bundle *)new dtn_bundle();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_bundle(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_bundle *arg1 = (dtn_bundle *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_bundle self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_bundle, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_bundle" "', argument " "1"" of type '" "dtn_bundle *""'"); 
  }
  arg1 = reinterpret_cast< dtn_bundle * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_bundle(void *obj) {
dtn_bundle *arg1 = (dtn_bundle *) obj;
delete arg1;
}
static swig_method swig_dtn_bundle_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_bundle_attributes[] = {
    { "-source",_wrap_dtn_bundle_source_get, _wrap_dtn_bundle_source_set},
    { "-dest",_wrap_dtn_bundle_dest_get, _wrap_dtn_bundle_dest_set},
    { "-replyto",_wrap_dtn_bundle_replyto_get, _wrap_dtn_bundle_replyto_set},
    { "-priority",_wrap_dtn_bundle_priority_get, _wrap_dtn_bundle_priority_set},
    { "-dopts",_wrap_dtn_bundle_dopts_get, _wrap_dtn_bundle_dopts_set},
    { "-expiration",_wrap_dtn_bundle_expiration_get, _wrap_dtn_bundle_expiration_set},
    { "-creation_secs",_wrap_dtn_bundle_creation_secs_get, _wrap_dtn_bundle_creation_secs_set},
    { "-creation_seqno",_wrap_dtn_bundle_creation_seqno_get, _wrap_dtn_bundle_creation_seqno_set},
    { "-delivery_regid",_wrap_dtn_bundle_delivery_regid_get, _wrap_dtn_bundle_delivery_regid_set},
    { "-sequence_id",_wrap_dtn_bundle_sequence_id_get, _wrap_dtn_bundle_sequence_id_set},
    { "-obsoletes_id",_wrap_dtn_bundle_obsoletes_id_get, _wrap_dtn_bundle_obsoletes_id_set},
    { "-payload",_wrap_dtn_bundle_payload_get, _wrap_dtn_bundle_payload_set},
    { "-status_report",_wrap_dtn_bundle_status_report_get, _wrap_dtn_bundle_status_report_set},
    {0,0,0}
};
static swig_class *swig_dtn_bundle_bases[] = {0};
static const char * swig_dtn_bundle_base_names[] = {0};
static swig_class _wrap_class_dtn_bundle = { "dtn_bundle", &SWIGTYPE_p_dtn_bundle,_wrap_new_dtn_bundle, swig_delete_dtn_bundle, swig_dtn_bundle_methods, swig_dtn_bundle_attributes, swig_dtn_bundle_bases,swig_dtn_bundle_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_recv(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  unsigned int arg2 ;
  int arg3 ;
  dtn_bundle *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"ooo:dtn_recv handle payload_location timeout ",(void *)0,(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_recv" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_recv" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  ecode3 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[3], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dtn_recv" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (dtn_bundle *)dtn_recv(arg1,arg2,arg3);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_bundle,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_session_info_status_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_session_info *arg1 = (dtn_session_info *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_session_info_status_set self status ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_session_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_session_info_status_set" "', argument " "1"" of type '" "dtn_session_info *""'"); 
  }
  arg1 = reinterpret_cast< dtn_session_info * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_session_info_status_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->status = arg2;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_session_info_status_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_session_info *arg1 = (dtn_session_info *) 0 ;
  unsigned int result;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_session_info_status_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_session_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_session_info_status_get" "', argument " "1"" of type '" "dtn_session_info *""'"); 
  }
  arg1 = reinterpret_cast< dtn_session_info * >(argp1);
  result = (unsigned int) ((arg1)->status);
  Tcl_SetObjResult(interp,SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_session_info_session_set(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_session_info *arg1 = (dtn_session_info *) 0 ;
  std::string *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 = SWIG_OLDOBJ ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_session_info_session_set self session ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_session_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_session_info_session_set" "', argument " "1"" of type '" "dtn_session_info *""'"); 
  }
  arg1 = reinterpret_cast< dtn_session_info * >(argp1);
  {
    std::string *ptr = (std::string *)0;
    res2 = SWIG_AsPtr_std_string SWIG_TCL_CALL_ARGS_2(objv[2], &ptr);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dtn_session_info_session_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    if (!ptr) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dtn_session_info_session_set" "', argument " "2"" of type '" "std::string const &""'"); 
    }
    arg2 = ptr;
  }
  if (arg1) (arg1)->session = *arg2;
  
  
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_OK;
fail:
  if (SWIG_IsNewObj(res2)) delete arg2;
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_session_info_session_get(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_session_info *arg1 = (dtn_session_info *) 0 ;
  std::string *result = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_session_info_session_get self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_session_info, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dtn_session_info_session_get" "', argument " "1"" of type '" "dtn_session_info *""'"); 
  }
  arg1 = reinterpret_cast< dtn_session_info * >(argp1);
  {
    std::string const &_result_ref =  ((arg1)->session);
    result = (std::string *) &_result_ref;
  }
  Tcl_SetObjResult(interp,SWIG_From_std_string(static_cast< std::string >(*result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_new_dtn_session_info(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_session_info *result = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,":new_dtn_session_info ") == TCL_ERROR) SWIG_fail;
  result = (dtn_session_info *)new dtn_session_info();
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_session_info,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_delete_dtn_session_info(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  dtn_session_info *arg1 = (dtn_session_info *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:delete_dtn_session_info self ",(void *)0) == TCL_ERROR) SWIG_fail;
  res1 = SWIG_ConvertPtr(objv[1], &argp1,SWIGTYPE_p_dtn_session_info, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dtn_session_info" "', argument " "1"" of type '" "dtn_session_info *""'"); 
  }
  arg1 = reinterpret_cast< dtn_session_info * >(argp1);
  delete arg1;
  
  
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN void swig_delete_dtn_session_info(void *obj) {
dtn_session_info *arg1 = (dtn_session_info *) obj;
delete arg1;
}
static swig_method swig_dtn_session_info_methods[] = {
    {0,0}
};
static swig_attribute swig_dtn_session_info_attributes[] = {
    { "-status",_wrap_dtn_session_info_status_get, _wrap_dtn_session_info_status_set},
    { "-session",_wrap_dtn_session_info_session_get, _wrap_dtn_session_info_session_set},
    {0,0,0}
};
static swig_class *swig_dtn_session_info_bases[] = {0};
static const char * swig_dtn_session_info_base_names[] = {0};
static swig_class _wrap_class_dtn_session_info = { "dtn_session_info", &SWIGTYPE_p_dtn_session_info,_wrap_new_dtn_session_info, swig_delete_dtn_session_info, swig_dtn_session_info_methods, swig_dtn_session_info_attributes, swig_dtn_session_info_bases,swig_dtn_session_info_base_names, &swig_module };
SWIGINTERN int
_wrap_dtn_session_update(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int arg2 ;
  dtn_session_info *result = 0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_session_update handle timeout ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_session_update" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_session_update" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (dtn_session_info *)dtn_session_update(arg1,arg2);
  Tcl_SetObjResult(interp, SWIG_NewInstanceObj( SWIG_as_voidptr(result), SWIGTYPE_p_dtn_session_info,0));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_poll_fd(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_poll_fd handle ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_poll_fd" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)dtn_poll_fd(arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_begin_poll(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int arg2 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"oo:dtn_begin_poll handle timeout ",(void *)0,(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_begin_poll" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[2], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dtn_begin_poll" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)dtn_begin_poll(arg1,arg2);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}


SWIGINTERN int
_wrap_dtn_cancel_poll(ClientData clientData SWIGUNUSED, Tcl_Interp *interp, int objc, Tcl_Obj *CONST objv[]) {
  int arg1 ;
  int result;
  int val1 ;
  int ecode1 = 0 ;
  
  if (SWIG_GetArgs(interp, objc, objv,"o:dtn_cancel_poll handle ",(void *)0) == TCL_ERROR) SWIG_fail;
  ecode1 = SWIG_AsVal_int SWIG_TCL_CALL_ARGS_2(objv[1], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dtn_cancel_poll" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  result = (int)dtn_cancel_poll(arg1);
  Tcl_SetObjResult(interp,SWIG_From_int(static_cast< int >(result)));
  return TCL_OK;
fail:
  return TCL_ERROR;
}



static swig_command_info swig_commands[] = {
    { SWIG_prefix "dtn_endpoint_id_t_uri_set", (swig_wrapper_func) _wrap_dtn_endpoint_id_t_uri_set, NULL},
    { SWIG_prefix "dtn_endpoint_id_t_uri_get", (swig_wrapper_func) _wrap_dtn_endpoint_id_t_uri_get, NULL},
    { SWIG_prefix "new_dtn_endpoint_id_t", (swig_wrapper_func) _wrap_new_dtn_endpoint_id_t, NULL},
    { SWIG_prefix "delete_dtn_endpoint_id_t", (swig_wrapper_func) _wrap_delete_dtn_endpoint_id_t, NULL},
    { SWIG_prefix "dtn_endpoint_id_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_endpoint_id_t},
    { SWIG_prefix "dtn_timestamp_t_secs_set", (swig_wrapper_func) _wrap_dtn_timestamp_t_secs_set, NULL},
    { SWIG_prefix "dtn_timestamp_t_secs_get", (swig_wrapper_func) _wrap_dtn_timestamp_t_secs_get, NULL},
    { SWIG_prefix "dtn_timestamp_t_seqno_set", (swig_wrapper_func) _wrap_dtn_timestamp_t_seqno_set, NULL},
    { SWIG_prefix "dtn_timestamp_t_seqno_get", (swig_wrapper_func) _wrap_dtn_timestamp_t_seqno_get, NULL},
    { SWIG_prefix "new_dtn_timestamp_t", (swig_wrapper_func) _wrap_new_dtn_timestamp_t, NULL},
    { SWIG_prefix "delete_dtn_timestamp_t", (swig_wrapper_func) _wrap_delete_dtn_timestamp_t, NULL},
    { SWIG_prefix "dtn_timestamp_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_timestamp_t},
    { SWIG_prefix "dtn_service_tag_t_tag_set", (swig_wrapper_func) _wrap_dtn_service_tag_t_tag_set, NULL},
    { SWIG_prefix "dtn_service_tag_t_tag_get", (swig_wrapper_func) _wrap_dtn_service_tag_t_tag_get, NULL},
    { SWIG_prefix "new_dtn_service_tag_t", (swig_wrapper_func) _wrap_new_dtn_service_tag_t, NULL},
    { SWIG_prefix "delete_dtn_service_tag_t", (swig_wrapper_func) _wrap_delete_dtn_service_tag_t, NULL},
    { SWIG_prefix "dtn_service_tag_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_service_tag_t},
    { SWIG_prefix "dtn_reg_info_t_endpoint_set", (swig_wrapper_func) _wrap_dtn_reg_info_t_endpoint_set, NULL},
    { SWIG_prefix "dtn_reg_info_t_endpoint_get", (swig_wrapper_func) _wrap_dtn_reg_info_t_endpoint_get, NULL},
    { SWIG_prefix "dtn_reg_info_t_regid_set", (swig_wrapper_func) _wrap_dtn_reg_info_t_regid_set, NULL},
    { SWIG_prefix "dtn_reg_info_t_regid_get", (swig_wrapper_func) _wrap_dtn_reg_info_t_regid_get, NULL},
    { SWIG_prefix "dtn_reg_info_t_flags_set", (swig_wrapper_func) _wrap_dtn_reg_info_t_flags_set, NULL},
    { SWIG_prefix "dtn_reg_info_t_flags_get", (swig_wrapper_func) _wrap_dtn_reg_info_t_flags_get, NULL},
    { SWIG_prefix "dtn_reg_info_t_expiration_set", (swig_wrapper_func) _wrap_dtn_reg_info_t_expiration_set, NULL},
    { SWIG_prefix "dtn_reg_info_t_expiration_get", (swig_wrapper_func) _wrap_dtn_reg_info_t_expiration_get, NULL},
    { SWIG_prefix "dtn_reg_info_t_init_passive_set", (swig_wrapper_func) _wrap_dtn_reg_info_t_init_passive_set, NULL},
    { SWIG_prefix "dtn_reg_info_t_init_passive_get", (swig_wrapper_func) _wrap_dtn_reg_info_t_init_passive_get, NULL},
    { SWIG_prefix "dtn_reg_info_t_script_get", (swig_wrapper_func) _wrap_dtn_reg_info_t_script_get, NULL},
    { SWIG_prefix "new_dtn_reg_info_t", (swig_wrapper_func) _wrap_new_dtn_reg_info_t, NULL},
    { SWIG_prefix "delete_dtn_reg_info_t", (swig_wrapper_func) _wrap_delete_dtn_reg_info_t, NULL},
    { SWIG_prefix "dtn_reg_info_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_reg_info_t},
    { SWIG_prefix "dtn_reg_info_t_script_script_len_set", (swig_wrapper_func) _wrap_dtn_reg_info_t_script_script_len_set, NULL},
    { SWIG_prefix "dtn_reg_info_t_script_script_len_get", (swig_wrapper_func) _wrap_dtn_reg_info_t_script_script_len_get, NULL},
    { SWIG_prefix "dtn_reg_info_t_script_script_val_set", (swig_wrapper_func) _wrap_dtn_reg_info_t_script_script_val_set, NULL},
    { SWIG_prefix "dtn_reg_info_t_script_script_val_get", (swig_wrapper_func) _wrap_dtn_reg_info_t_script_script_val_get, NULL},
    { SWIG_prefix "new_dtn_reg_info_t_script", (swig_wrapper_func) _wrap_new_dtn_reg_info_t_script, NULL},
    { SWIG_prefix "delete_dtn_reg_info_t_script", (swig_wrapper_func) _wrap_delete_dtn_reg_info_t_script, NULL},
    { SWIG_prefix "dtn_reg_info_t_script", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_reg_info_t_script},
    { SWIG_prefix "dtn_extension_block_t_type_set", (swig_wrapper_func) _wrap_dtn_extension_block_t_type_set, NULL},
    { SWIG_prefix "dtn_extension_block_t_type_get", (swig_wrapper_func) _wrap_dtn_extension_block_t_type_get, NULL},
    { SWIG_prefix "dtn_extension_block_t_flags_set", (swig_wrapper_func) _wrap_dtn_extension_block_t_flags_set, NULL},
    { SWIG_prefix "dtn_extension_block_t_flags_get", (swig_wrapper_func) _wrap_dtn_extension_block_t_flags_get, NULL},
    { SWIG_prefix "dtn_extension_block_t_data_get", (swig_wrapper_func) _wrap_dtn_extension_block_t_data_get, NULL},
    { SWIG_prefix "new_dtn_extension_block_t", (swig_wrapper_func) _wrap_new_dtn_extension_block_t, NULL},
    { SWIG_prefix "delete_dtn_extension_block_t", (swig_wrapper_func) _wrap_delete_dtn_extension_block_t, NULL},
    { SWIG_prefix "dtn_extension_block_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_extension_block_t},
    { SWIG_prefix "dtn_extension_block_t_data_data_len_set", (swig_wrapper_func) _wrap_dtn_extension_block_t_data_data_len_set, NULL},
    { SWIG_prefix "dtn_extension_block_t_data_data_len_get", (swig_wrapper_func) _wrap_dtn_extension_block_t_data_data_len_get, NULL},
    { SWIG_prefix "dtn_extension_block_t_data_data_val_set", (swig_wrapper_func) _wrap_dtn_extension_block_t_data_data_val_set, NULL},
    { SWIG_prefix "dtn_extension_block_t_data_data_val_get", (swig_wrapper_func) _wrap_dtn_extension_block_t_data_data_val_get, NULL},
    { SWIG_prefix "new_dtn_extension_block_t_data", (swig_wrapper_func) _wrap_new_dtn_extension_block_t_data, NULL},
    { SWIG_prefix "delete_dtn_extension_block_t_data", (swig_wrapper_func) _wrap_delete_dtn_extension_block_t_data, NULL},
    { SWIG_prefix "dtn_extension_block_t_data", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_extension_block_t_data},
    { SWIG_prefix "dtn_sequence_id_t_data_get", (swig_wrapper_func) _wrap_dtn_sequence_id_t_data_get, NULL},
    { SWIG_prefix "new_dtn_sequence_id_t", (swig_wrapper_func) _wrap_new_dtn_sequence_id_t, NULL},
    { SWIG_prefix "delete_dtn_sequence_id_t", (swig_wrapper_func) _wrap_delete_dtn_sequence_id_t, NULL},
    { SWIG_prefix "dtn_sequence_id_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_sequence_id_t},
    { SWIG_prefix "dtn_sequence_id_t_data_data_len_set", (swig_wrapper_func) _wrap_dtn_sequence_id_t_data_data_len_set, NULL},
    { SWIG_prefix "dtn_sequence_id_t_data_data_len_get", (swig_wrapper_func) _wrap_dtn_sequence_id_t_data_data_len_get, NULL},
    { SWIG_prefix "dtn_sequence_id_t_data_data_val_set", (swig_wrapper_func) _wrap_dtn_sequence_id_t_data_data_val_set, NULL},
    { SWIG_prefix "dtn_sequence_id_t_data_data_val_get", (swig_wrapper_func) _wrap_dtn_sequence_id_t_data_data_val_get, NULL},
    { SWIG_prefix "new_dtn_sequence_id_t_data", (swig_wrapper_func) _wrap_new_dtn_sequence_id_t_data, NULL},
    { SWIG_prefix "delete_dtn_sequence_id_t_data", (swig_wrapper_func) _wrap_delete_dtn_sequence_id_t_data, NULL},
    { SWIG_prefix "dtn_sequence_id_t_data", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_sequence_id_t_data},
    { SWIG_prefix "dtn_bundle_spec_t_source_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_source_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_source_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_source_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_dest_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_dest_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_dest_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_dest_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_replyto_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_replyto_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_replyto_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_replyto_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_priority_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_priority_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_priority_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_priority_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_dopts_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_dopts_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_dopts_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_dopts_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_expiration_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_expiration_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_expiration_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_expiration_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_creation_ts_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_creation_ts_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_creation_ts_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_creation_ts_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_delivery_regid_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_delivery_regid_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_delivery_regid_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_delivery_regid_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_sequence_id_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_sequence_id_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_sequence_id_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_sequence_id_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_obsoletes_id_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_obsoletes_id_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_obsoletes_id_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_obsoletes_id_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_metadata_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_metadata_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_blocks_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_blocks_get, NULL},
    { SWIG_prefix "new_dtn_bundle_spec_t", (swig_wrapper_func) _wrap_new_dtn_bundle_spec_t, NULL},
    { SWIG_prefix "delete_dtn_bundle_spec_t", (swig_wrapper_func) _wrap_delete_dtn_bundle_spec_t, NULL},
    { SWIG_prefix "dtn_bundle_spec_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle_spec_t},
    { SWIG_prefix "dtn_bundle_spec_t_metadata_metadata_len_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_metadata_metadata_len_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_metadata_metadata_len_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_metadata_metadata_len_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_metadata_metadata_val_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_metadata_metadata_val_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_metadata_metadata_val_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_metadata_metadata_val_get, NULL},
    { SWIG_prefix "new_dtn_bundle_spec_t_metadata", (swig_wrapper_func) _wrap_new_dtn_bundle_spec_t_metadata, NULL},
    { SWIG_prefix "delete_dtn_bundle_spec_t_metadata", (swig_wrapper_func) _wrap_delete_dtn_bundle_spec_t_metadata, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_metadata", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle_spec_t_metadata},
    { SWIG_prefix "dtn_bundle_spec_t_blocks_blocks_len_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_blocks_blocks_len_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_blocks_blocks_len_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_blocks_blocks_len_get, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_blocks_blocks_val_set", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_blocks_blocks_val_set, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_blocks_blocks_val_get", (swig_wrapper_func) _wrap_dtn_bundle_spec_t_blocks_blocks_val_get, NULL},
    { SWIG_prefix "new_dtn_bundle_spec_t_blocks", (swig_wrapper_func) _wrap_new_dtn_bundle_spec_t_blocks, NULL},
    { SWIG_prefix "delete_dtn_bundle_spec_t_blocks", (swig_wrapper_func) _wrap_delete_dtn_bundle_spec_t_blocks, NULL},
    { SWIG_prefix "dtn_bundle_spec_t_blocks", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle_spec_t_blocks},
    { SWIG_prefix "dtn_bundle_id_t_source_set", (swig_wrapper_func) _wrap_dtn_bundle_id_t_source_set, NULL},
    { SWIG_prefix "dtn_bundle_id_t_source_get", (swig_wrapper_func) _wrap_dtn_bundle_id_t_source_get, NULL},
    { SWIG_prefix "dtn_bundle_id_t_creation_ts_set", (swig_wrapper_func) _wrap_dtn_bundle_id_t_creation_ts_set, NULL},
    { SWIG_prefix "dtn_bundle_id_t_creation_ts_get", (swig_wrapper_func) _wrap_dtn_bundle_id_t_creation_ts_get, NULL},
    { SWIG_prefix "dtn_bundle_id_t_frag_offset_set", (swig_wrapper_func) _wrap_dtn_bundle_id_t_frag_offset_set, NULL},
    { SWIG_prefix "dtn_bundle_id_t_frag_offset_get", (swig_wrapper_func) _wrap_dtn_bundle_id_t_frag_offset_get, NULL},
    { SWIG_prefix "dtn_bundle_id_t_orig_length_set", (swig_wrapper_func) _wrap_dtn_bundle_id_t_orig_length_set, NULL},
    { SWIG_prefix "dtn_bundle_id_t_orig_length_get", (swig_wrapper_func) _wrap_dtn_bundle_id_t_orig_length_get, NULL},
    { SWIG_prefix "new_dtn_bundle_id_t", (swig_wrapper_func) _wrap_new_dtn_bundle_id_t, NULL},
    { SWIG_prefix "delete_dtn_bundle_id_t", (swig_wrapper_func) _wrap_delete_dtn_bundle_id_t, NULL},
    { SWIG_prefix "dtn_bundle_id_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle_id_t},
    { SWIG_prefix "dtn_bundle_status_report_t_bundle_id_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_bundle_id_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_bundle_id_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_bundle_id_get, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_reason_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_reason_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_reason_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_reason_get, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_flags_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_flags_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_flags_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_flags_get, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_receipt_ts_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_receipt_ts_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_receipt_ts_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_receipt_ts_get, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_custody_ts_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_custody_ts_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_custody_ts_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_custody_ts_get, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_forwarding_ts_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_forwarding_ts_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_forwarding_ts_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_forwarding_ts_get, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_delivery_ts_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_delivery_ts_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_delivery_ts_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_delivery_ts_get, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_deletion_ts_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_deletion_ts_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_deletion_ts_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_deletion_ts_get, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_ack_by_app_ts_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_ack_by_app_ts_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t_ack_by_app_ts_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_t_ack_by_app_ts_get, NULL},
    { SWIG_prefix "new_dtn_bundle_status_report_t", (swig_wrapper_func) _wrap_new_dtn_bundle_status_report_t, NULL},
    { SWIG_prefix "delete_dtn_bundle_status_report_t", (swig_wrapper_func) _wrap_delete_dtn_bundle_status_report_t, NULL},
    { SWIG_prefix "dtn_bundle_status_report_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle_status_report_t},
    { SWIG_prefix "dtn_bundle_payload_t_location_set", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_location_set, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_location_get", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_location_get, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_status_report_set", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_status_report_set, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_status_report_get", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_status_report_get, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_buf_get", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_buf_get, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_filename_get", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_filename_get, NULL},
    { SWIG_prefix "new_dtn_bundle_payload_t", (swig_wrapper_func) _wrap_new_dtn_bundle_payload_t, NULL},
    { SWIG_prefix "delete_dtn_bundle_payload_t", (swig_wrapper_func) _wrap_delete_dtn_bundle_payload_t, NULL},
    { SWIG_prefix "dtn_bundle_payload_t", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle_payload_t},
    { SWIG_prefix "dtn_bundle_payload_t_buf_buf_len_set", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_buf_buf_len_set, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_buf_buf_len_get", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_buf_buf_len_get, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_buf_buf_val_set", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_buf_buf_val_set, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_buf_buf_val_get", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_buf_buf_val_get, NULL},
    { SWIG_prefix "new_dtn_bundle_payload_t_buf", (swig_wrapper_func) _wrap_new_dtn_bundle_payload_t_buf, NULL},
    { SWIG_prefix "delete_dtn_bundle_payload_t_buf", (swig_wrapper_func) _wrap_delete_dtn_bundle_payload_t_buf, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_buf", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle_payload_t_buf},
    { SWIG_prefix "dtn_bundle_payload_t_filename_filename_len_set", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_filename_filename_len_set, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_filename_filename_len_get", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_filename_filename_len_get, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_filename_filename_val_set", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_filename_filename_val_set, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_filename_filename_val_get", (swig_wrapper_func) _wrap_dtn_bundle_payload_t_filename_filename_val_get, NULL},
    { SWIG_prefix "new_dtn_bundle_payload_t_filename", (swig_wrapper_func) _wrap_new_dtn_bundle_payload_t_filename, NULL},
    { SWIG_prefix "delete_dtn_bundle_payload_t_filename", (swig_wrapper_func) _wrap_delete_dtn_bundle_payload_t_filename, NULL},
    { SWIG_prefix "dtn_bundle_payload_t_filename", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle_payload_t_filename},
    { SWIG_prefix "xdr_dtn_endpoint_id_t", (swig_wrapper_func) _wrap_xdr_dtn_endpoint_id_t, NULL},
    { SWIG_prefix "xdr_dtn_reg_id_t", (swig_wrapper_func) _wrap_xdr_dtn_reg_id_t, NULL},
    { SWIG_prefix "xdr_dtn_timeval_t", (swig_wrapper_func) _wrap_xdr_dtn_timeval_t, NULL},
    { SWIG_prefix "xdr_dtn_timestamp_t", (swig_wrapper_func) _wrap_xdr_dtn_timestamp_t, NULL},
    { SWIG_prefix "xdr_dtn_service_tag_t", (swig_wrapper_func) _wrap_xdr_dtn_service_tag_t, NULL},
    { SWIG_prefix "xdr_dtn_reg_flags_t", (swig_wrapper_func) _wrap_xdr_dtn_reg_flags_t, NULL},
    { SWIG_prefix "xdr_dtn_reg_info_t", (swig_wrapper_func) _wrap_xdr_dtn_reg_info_t, NULL},
    { SWIG_prefix "xdr_dtn_bundle_priority_t", (swig_wrapper_func) _wrap_xdr_dtn_bundle_priority_t, NULL},
    { SWIG_prefix "xdr_dtn_bundle_delivery_opts_t", (swig_wrapper_func) _wrap_xdr_dtn_bundle_delivery_opts_t, NULL},
    { SWIG_prefix "xdr_dtn_extension_block_flags_t", (swig_wrapper_func) _wrap_xdr_dtn_extension_block_flags_t, NULL},
    { SWIG_prefix "xdr_dtn_extension_block_t", (swig_wrapper_func) _wrap_xdr_dtn_extension_block_t, NULL},
    { SWIG_prefix "xdr_dtn_sequence_id_t", (swig_wrapper_func) _wrap_xdr_dtn_sequence_id_t, NULL},
    { SWIG_prefix "xdr_dtn_bundle_spec_t", (swig_wrapper_func) _wrap_xdr_dtn_bundle_spec_t, NULL},
    { SWIG_prefix "xdr_dtn_bundle_id_t", (swig_wrapper_func) _wrap_xdr_dtn_bundle_id_t, NULL},
    { SWIG_prefix "xdr_dtn_status_report_reason_t", (swig_wrapper_func) _wrap_xdr_dtn_status_report_reason_t, NULL},
    { SWIG_prefix "xdr_dtn_status_report_flags_t", (swig_wrapper_func) _wrap_xdr_dtn_status_report_flags_t, NULL},
    { SWIG_prefix "xdr_dtn_bundle_status_report_t", (swig_wrapper_func) _wrap_xdr_dtn_bundle_status_report_t, NULL},
    { SWIG_prefix "xdr_dtn_bundle_payload_location_t", (swig_wrapper_func) _wrap_xdr_dtn_bundle_payload_location_t, NULL},
    { SWIG_prefix "xdr_dtn_bundle_payload_t", (swig_wrapper_func) _wrap_xdr_dtn_bundle_payload_t, NULL},
    { SWIG_prefix "dtn_strerror", (swig_wrapper_func) _wrap_dtn_strerror, NULL},
    { SWIG_prefix "dtn_open", (swig_wrapper_func) _wrap_dtn_open, NULL},
    { SWIG_prefix "find_handle", (swig_wrapper_func) _wrap_find_handle, NULL},
    { SWIG_prefix "dtn_close", (swig_wrapper_func) _wrap_dtn_close, NULL},
    { SWIG_prefix "dtn_errno", (swig_wrapper_func) _wrap_dtn_errno, NULL},
    { SWIG_prefix "dtn_build_local_eid", (swig_wrapper_func) _wrap_dtn_build_local_eid, NULL},
    { SWIG_prefix "build_reginfo", (swig_wrapper_func) _wrap_build_reginfo, NULL},
    { SWIG_prefix "dtn_register", (swig_wrapper_func) _wrap_dtn_register, NULL},
    { SWIG_prefix "dtn_unregister", (swig_wrapper_func) _wrap_dtn_unregister, NULL},
    { SWIG_prefix "dtn_find_registration", (swig_wrapper_func) _wrap_dtn_find_registration, NULL},
    { SWIG_prefix "dtn_change_registration", (swig_wrapper_func) _wrap_dtn_change_registration, NULL},
    { SWIG_prefix "dtn_bind", (swig_wrapper_func) _wrap_dtn_bind, NULL},
    { SWIG_prefix "dtn_unbind", (swig_wrapper_func) _wrap_dtn_unbind, NULL},
    { SWIG_prefix "dtn_bundle_id_source_set", (swig_wrapper_func) _wrap_dtn_bundle_id_source_set, NULL},
    { SWIG_prefix "dtn_bundle_id_source_get", (swig_wrapper_func) _wrap_dtn_bundle_id_source_get, NULL},
    { SWIG_prefix "dtn_bundle_id_creation_secs_set", (swig_wrapper_func) _wrap_dtn_bundle_id_creation_secs_set, NULL},
    { SWIG_prefix "dtn_bundle_id_creation_secs_get", (swig_wrapper_func) _wrap_dtn_bundle_id_creation_secs_get, NULL},
    { SWIG_prefix "dtn_bundle_id_creation_seqno_set", (swig_wrapper_func) _wrap_dtn_bundle_id_creation_seqno_set, NULL},
    { SWIG_prefix "dtn_bundle_id_creation_seqno_get", (swig_wrapper_func) _wrap_dtn_bundle_id_creation_seqno_get, NULL},
    { SWIG_prefix "new_dtn_bundle_id", (swig_wrapper_func) _wrap_new_dtn_bundle_id, NULL},
    { SWIG_prefix "delete_dtn_bundle_id", (swig_wrapper_func) _wrap_delete_dtn_bundle_id, NULL},
    { SWIG_prefix "dtn_bundle_id", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle_id},
    { SWIG_prefix "dtn_send", (swig_wrapper_func) _wrap_dtn_send, NULL},
    { SWIG_prefix "dtn_cancel", (swig_wrapper_func) _wrap_dtn_cancel, NULL},
    { SWIG_prefix "dtn_status_report_bundle_id_set", (swig_wrapper_func) _wrap_dtn_status_report_bundle_id_set, NULL},
    { SWIG_prefix "dtn_status_report_bundle_id_get", (swig_wrapper_func) _wrap_dtn_status_report_bundle_id_get, NULL},
    { SWIG_prefix "dtn_status_report_reason_set", (swig_wrapper_func) _wrap_dtn_status_report_reason_set, NULL},
    { SWIG_prefix "dtn_status_report_reason_get", (swig_wrapper_func) _wrap_dtn_status_report_reason_get, NULL},
    { SWIG_prefix "dtn_status_report_flags_set", (swig_wrapper_func) _wrap_dtn_status_report_flags_set, NULL},
    { SWIG_prefix "dtn_status_report_flags_get", (swig_wrapper_func) _wrap_dtn_status_report_flags_get, NULL},
    { SWIG_prefix "dtn_status_report_receipt_ts_secs_set", (swig_wrapper_func) _wrap_dtn_status_report_receipt_ts_secs_set, NULL},
    { SWIG_prefix "dtn_status_report_receipt_ts_secs_get", (swig_wrapper_func) _wrap_dtn_status_report_receipt_ts_secs_get, NULL},
    { SWIG_prefix "dtn_status_report_receipt_ts_seqno_set", (swig_wrapper_func) _wrap_dtn_status_report_receipt_ts_seqno_set, NULL},
    { SWIG_prefix "dtn_status_report_receipt_ts_seqno_get", (swig_wrapper_func) _wrap_dtn_status_report_receipt_ts_seqno_get, NULL},
    { SWIG_prefix "dtn_status_report_custody_ts_secs_set", (swig_wrapper_func) _wrap_dtn_status_report_custody_ts_secs_set, NULL},
    { SWIG_prefix "dtn_status_report_custody_ts_secs_get", (swig_wrapper_func) _wrap_dtn_status_report_custody_ts_secs_get, NULL},
    { SWIG_prefix "dtn_status_report_custody_ts_seqno_set", (swig_wrapper_func) _wrap_dtn_status_report_custody_ts_seqno_set, NULL},
    { SWIG_prefix "dtn_status_report_custody_ts_seqno_get", (swig_wrapper_func) _wrap_dtn_status_report_custody_ts_seqno_get, NULL},
    { SWIG_prefix "dtn_status_report_forwarding_ts_secs_set", (swig_wrapper_func) _wrap_dtn_status_report_forwarding_ts_secs_set, NULL},
    { SWIG_prefix "dtn_status_report_forwarding_ts_secs_get", (swig_wrapper_func) _wrap_dtn_status_report_forwarding_ts_secs_get, NULL},
    { SWIG_prefix "dtn_status_report_forwarding_ts_seqno_set", (swig_wrapper_func) _wrap_dtn_status_report_forwarding_ts_seqno_set, NULL},
    { SWIG_prefix "dtn_status_report_forwarding_ts_seqno_get", (swig_wrapper_func) _wrap_dtn_status_report_forwarding_ts_seqno_get, NULL},
    { SWIG_prefix "dtn_status_report_delivery_ts_secs_set", (swig_wrapper_func) _wrap_dtn_status_report_delivery_ts_secs_set, NULL},
    { SWIG_prefix "dtn_status_report_delivery_ts_secs_get", (swig_wrapper_func) _wrap_dtn_status_report_delivery_ts_secs_get, NULL},
    { SWIG_prefix "dtn_status_report_delivery_ts_seqno_set", (swig_wrapper_func) _wrap_dtn_status_report_delivery_ts_seqno_set, NULL},
    { SWIG_prefix "dtn_status_report_delivery_ts_seqno_get", (swig_wrapper_func) _wrap_dtn_status_report_delivery_ts_seqno_get, NULL},
    { SWIG_prefix "dtn_status_report_deletion_ts_secs_set", (swig_wrapper_func) _wrap_dtn_status_report_deletion_ts_secs_set, NULL},
    { SWIG_prefix "dtn_status_report_deletion_ts_secs_get", (swig_wrapper_func) _wrap_dtn_status_report_deletion_ts_secs_get, NULL},
    { SWIG_prefix "dtn_status_report_deletion_ts_seqno_set", (swig_wrapper_func) _wrap_dtn_status_report_deletion_ts_seqno_set, NULL},
    { SWIG_prefix "dtn_status_report_deletion_ts_seqno_get", (swig_wrapper_func) _wrap_dtn_status_report_deletion_ts_seqno_get, NULL},
    { SWIG_prefix "dtn_status_report_ack_by_app_ts_secs_set", (swig_wrapper_func) _wrap_dtn_status_report_ack_by_app_ts_secs_set, NULL},
    { SWIG_prefix "dtn_status_report_ack_by_app_ts_secs_get", (swig_wrapper_func) _wrap_dtn_status_report_ack_by_app_ts_secs_get, NULL},
    { SWIG_prefix "dtn_status_report_ack_by_app_ts_seqno_set", (swig_wrapper_func) _wrap_dtn_status_report_ack_by_app_ts_seqno_set, NULL},
    { SWIG_prefix "dtn_status_report_ack_by_app_ts_seqno_get", (swig_wrapper_func) _wrap_dtn_status_report_ack_by_app_ts_seqno_get, NULL},
    { SWIG_prefix "new_dtn_status_report", (swig_wrapper_func) _wrap_new_dtn_status_report, NULL},
    { SWIG_prefix "delete_dtn_status_report", (swig_wrapper_func) _wrap_delete_dtn_status_report, NULL},
    { SWIG_prefix "dtn_status_report", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_status_report},
    { SWIG_prefix "dtn_status_report_reason_to_str", (swig_wrapper_func) _wrap_dtn_status_report_reason_to_str, NULL},
    { SWIG_prefix "dtn_bundle_source_set", (swig_wrapper_func) _wrap_dtn_bundle_source_set, NULL},
    { SWIG_prefix "dtn_bundle_source_get", (swig_wrapper_func) _wrap_dtn_bundle_source_get, NULL},
    { SWIG_prefix "dtn_bundle_dest_set", (swig_wrapper_func) _wrap_dtn_bundle_dest_set, NULL},
    { SWIG_prefix "dtn_bundle_dest_get", (swig_wrapper_func) _wrap_dtn_bundle_dest_get, NULL},
    { SWIG_prefix "dtn_bundle_replyto_set", (swig_wrapper_func) _wrap_dtn_bundle_replyto_set, NULL},
    { SWIG_prefix "dtn_bundle_replyto_get", (swig_wrapper_func) _wrap_dtn_bundle_replyto_get, NULL},
    { SWIG_prefix "dtn_bundle_priority_set", (swig_wrapper_func) _wrap_dtn_bundle_priority_set, NULL},
    { SWIG_prefix "dtn_bundle_priority_get", (swig_wrapper_func) _wrap_dtn_bundle_priority_get, NULL},
    { SWIG_prefix "dtn_bundle_dopts_set", (swig_wrapper_func) _wrap_dtn_bundle_dopts_set, NULL},
    { SWIG_prefix "dtn_bundle_dopts_get", (swig_wrapper_func) _wrap_dtn_bundle_dopts_get, NULL},
    { SWIG_prefix "dtn_bundle_expiration_set", (swig_wrapper_func) _wrap_dtn_bundle_expiration_set, NULL},
    { SWIG_prefix "dtn_bundle_expiration_get", (swig_wrapper_func) _wrap_dtn_bundle_expiration_get, NULL},
    { SWIG_prefix "dtn_bundle_creation_secs_set", (swig_wrapper_func) _wrap_dtn_bundle_creation_secs_set, NULL},
    { SWIG_prefix "dtn_bundle_creation_secs_get", (swig_wrapper_func) _wrap_dtn_bundle_creation_secs_get, NULL},
    { SWIG_prefix "dtn_bundle_creation_seqno_set", (swig_wrapper_func) _wrap_dtn_bundle_creation_seqno_set, NULL},
    { SWIG_prefix "dtn_bundle_creation_seqno_get", (swig_wrapper_func) _wrap_dtn_bundle_creation_seqno_get, NULL},
    { SWIG_prefix "dtn_bundle_delivery_regid_set", (swig_wrapper_func) _wrap_dtn_bundle_delivery_regid_set, NULL},
    { SWIG_prefix "dtn_bundle_delivery_regid_get", (swig_wrapper_func) _wrap_dtn_bundle_delivery_regid_get, NULL},
    { SWIG_prefix "dtn_bundle_sequence_id_set", (swig_wrapper_func) _wrap_dtn_bundle_sequence_id_set, NULL},
    { SWIG_prefix "dtn_bundle_sequence_id_get", (swig_wrapper_func) _wrap_dtn_bundle_sequence_id_get, NULL},
    { SWIG_prefix "dtn_bundle_obsoletes_id_set", (swig_wrapper_func) _wrap_dtn_bundle_obsoletes_id_set, NULL},
    { SWIG_prefix "dtn_bundle_obsoletes_id_get", (swig_wrapper_func) _wrap_dtn_bundle_obsoletes_id_get, NULL},
    { SWIG_prefix "dtn_bundle_payload_set", (swig_wrapper_func) _wrap_dtn_bundle_payload_set, NULL},
    { SWIG_prefix "dtn_bundle_payload_get", (swig_wrapper_func) _wrap_dtn_bundle_payload_get, NULL},
    { SWIG_prefix "dtn_bundle_status_report_set", (swig_wrapper_func) _wrap_dtn_bundle_status_report_set, NULL},
    { SWIG_prefix "dtn_bundle_status_report_get", (swig_wrapper_func) _wrap_dtn_bundle_status_report_get, NULL},
    { SWIG_prefix "new_dtn_bundle", (swig_wrapper_func) _wrap_new_dtn_bundle, NULL},
    { SWIG_prefix "delete_dtn_bundle", (swig_wrapper_func) _wrap_delete_dtn_bundle, NULL},
    { SWIG_prefix "dtn_bundle", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_bundle},
    { SWIG_prefix "dtn_recv", (swig_wrapper_func) _wrap_dtn_recv, NULL},
    { SWIG_prefix "dtn_session_info_status_set", (swig_wrapper_func) _wrap_dtn_session_info_status_set, NULL},
    { SWIG_prefix "dtn_session_info_status_get", (swig_wrapper_func) _wrap_dtn_session_info_status_get, NULL},
    { SWIG_prefix "dtn_session_info_session_set", (swig_wrapper_func) _wrap_dtn_session_info_session_set, NULL},
    { SWIG_prefix "dtn_session_info_session_get", (swig_wrapper_func) _wrap_dtn_session_info_session_get, NULL},
    { SWIG_prefix "new_dtn_session_info", (swig_wrapper_func) _wrap_new_dtn_session_info, NULL},
    { SWIG_prefix "delete_dtn_session_info", (swig_wrapper_func) _wrap_delete_dtn_session_info, NULL},
    { SWIG_prefix "dtn_session_info", (swig_wrapper_func) SWIG_ObjectConstructor, (ClientData)&_wrap_class_dtn_session_info},
    { SWIG_prefix "dtn_session_update", (swig_wrapper_func) _wrap_dtn_session_update, NULL},
    { SWIG_prefix "dtn_poll_fd", (swig_wrapper_func) _wrap_dtn_poll_fd, NULL},
    { SWIG_prefix "dtn_begin_poll", (swig_wrapper_func) _wrap_dtn_begin_poll, NULL},
    { SWIG_prefix "dtn_cancel_poll", (swig_wrapper_func) _wrap_dtn_cancel_poll, NULL},
    {0, 0, 0}
};

static swig_var_info swig_variables[] = {
    { SWIG_prefix "Handles", 0, (swig_variable_func) _wrap_Handles_get,(swig_variable_func) _wrap_Handles_set},
    { SWIG_prefix "HandleID", 0, (swig_variable_func) _wrap_HandleID_get,(swig_variable_func) _wrap_HandleID_set},
    {0,0,0,0}
};

static swig_const_info swig_constants[] = {
    {0,0,0,0,0,0}
};

/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static swig_type_info _swigt__p_XDR = {"_p_XDR", "XDR *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_bool_t = {"_p_bool_t", "bool_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dtn_bundle = {"_p_dtn_bundle", "dtn_bundle *", 0, 0, (void*)&_wrap_class_dtn_bundle, 0};
static swig_type_info _swigt__p_dtn_bundle_delivery_opts_t = {"_p_dtn_bundle_delivery_opts_t", "enum dtn_bundle_delivery_opts_t *|dtn_bundle_delivery_opts_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dtn_bundle_id = {"_p_dtn_bundle_id", "dtn_bundle_id *", 0, 0, (void*)&_wrap_class_dtn_bundle_id, 0};
static swig_type_info _swigt__p_dtn_bundle_id_t = {"_p_dtn_bundle_id_t", "dtn_bundle_id_t *", 0, 0, (void*)&_wrap_class_dtn_bundle_id_t, 0};
static swig_type_info _swigt__p_dtn_bundle_payload_location_t = {"_p_dtn_bundle_payload_location_t", "enum dtn_bundle_payload_location_t *|dtn_bundle_payload_location_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dtn_bundle_payload_t = {"_p_dtn_bundle_payload_t", "dtn_bundle_payload_t *", 0, 0, (void*)&_wrap_class_dtn_bundle_payload_t, 0};
static swig_type_info _swigt__p_dtn_bundle_payload_t_buf = {"_p_dtn_bundle_payload_t_buf", "dtn_bundle_payload_t_buf *", 0, 0, (void*)&_wrap_class_dtn_bundle_payload_t_buf, 0};
static swig_type_info _swigt__p_dtn_bundle_payload_t_filename = {"_p_dtn_bundle_payload_t_filename", "dtn_bundle_payload_t_filename *", 0, 0, (void*)&_wrap_class_dtn_bundle_payload_t_filename, 0};
static swig_type_info _swigt__p_dtn_bundle_priority_t = {"_p_dtn_bundle_priority_t", "enum dtn_bundle_priority_t *|dtn_bundle_priority_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dtn_bundle_spec_t = {"_p_dtn_bundle_spec_t", "dtn_bundle_spec_t *", 0, 0, (void*)&_wrap_class_dtn_bundle_spec_t, 0};
static swig_type_info _swigt__p_dtn_bundle_spec_t_blocks = {"_p_dtn_bundle_spec_t_blocks", "dtn_bundle_spec_t_blocks *", 0, 0, (void*)&_wrap_class_dtn_bundle_spec_t_blocks, 0};
static swig_type_info _swigt__p_dtn_bundle_spec_t_metadata = {"_p_dtn_bundle_spec_t_metadata", "dtn_bundle_spec_t_metadata *", 0, 0, (void*)&_wrap_class_dtn_bundle_spec_t_metadata, 0};
static swig_type_info _swigt__p_dtn_bundle_status_report_t = {"_p_dtn_bundle_status_report_t", "dtn_bundle_status_report_t *", 0, 0, (void*)&_wrap_class_dtn_bundle_status_report_t, 0};
static swig_type_info _swigt__p_dtn_endpoint_id_t = {"_p_dtn_endpoint_id_t", "dtn_endpoint_id_t *", 0, 0, (void*)&_wrap_class_dtn_endpoint_id_t, 0};
static swig_type_info _swigt__p_dtn_extension_block_flags_t = {"_p_dtn_extension_block_flags_t", "enum dtn_extension_block_flags_t *|dtn_extension_block_flags_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dtn_extension_block_t = {"_p_dtn_extension_block_t", "dtn_extension_block_t *", 0, 0, (void*)&_wrap_class_dtn_extension_block_t, 0};
static swig_type_info _swigt__p_dtn_extension_block_t_data = {"_p_dtn_extension_block_t_data", "dtn_extension_block_t_data *", 0, 0, (void*)&_wrap_class_dtn_extension_block_t_data, 0};
static swig_type_info _swigt__p_dtn_handle_t = {"_p_dtn_handle_t", "dtn_handle_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dtn_reg_flags_t = {"_p_dtn_reg_flags_t", "enum dtn_reg_flags_t *|dtn_reg_flags_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dtn_reg_info_t = {"_p_dtn_reg_info_t", "dtn_reg_info_t *", 0, 0, (void*)&_wrap_class_dtn_reg_info_t, 0};
static swig_type_info _swigt__p_dtn_reg_info_t_script = {"_p_dtn_reg_info_t_script", "dtn_reg_info_t_script *", 0, 0, (void*)&_wrap_class_dtn_reg_info_t_script, 0};
static swig_type_info _swigt__p_dtn_sequence_id_t = {"_p_dtn_sequence_id_t", "dtn_sequence_id_t *", 0, 0, (void*)&_wrap_class_dtn_sequence_id_t, 0};
static swig_type_info _swigt__p_dtn_sequence_id_t_data = {"_p_dtn_sequence_id_t_data", "dtn_sequence_id_t_data *", 0, 0, (void*)&_wrap_class_dtn_sequence_id_t_data, 0};
static swig_type_info _swigt__p_dtn_service_tag_t = {"_p_dtn_service_tag_t", "dtn_service_tag_t *", 0, 0, (void*)&_wrap_class_dtn_service_tag_t, 0};
static swig_type_info _swigt__p_dtn_session_info = {"_p_dtn_session_info", "dtn_session_info *", 0, 0, (void*)&_wrap_class_dtn_session_info, 0};
static swig_type_info _swigt__p_dtn_status_report = {"_p_dtn_status_report", "dtn_status_report *", 0, 0, (void*)&_wrap_class_dtn_status_report, 0};
static swig_type_info _swigt__p_dtn_status_report_flags_t = {"_p_dtn_status_report_flags_t", "enum dtn_status_report_flags_t *|dtn_status_report_flags_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dtn_status_report_reason_t = {"_p_dtn_status_report_reason_t", "enum dtn_status_report_reason_t *|dtn_status_report_reason_t *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dtn_timestamp_t = {"_p_dtn_timestamp_t", "dtn_timestamp_t *", 0, 0, (void*)&_wrap_class_dtn_timestamp_t, 0};
static swig_type_info _swigt__p_mapT_unsigned_int_dtn_handle_t_t = {"_p_mapT_unsigned_int_dtn_handle_t_t", "map< unsigned int,dtn_handle_t > *|HandleMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_u_int = {"_p_u_int", "dtn_timeval_t *|dtn_reg_id_t *|u_int *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_XDR,
  &_swigt__p_bool_t,
  &_swigt__p_char,
  &_swigt__p_dtn_bundle,
  &_swigt__p_dtn_bundle_delivery_opts_t,
  &_swigt__p_dtn_bundle_id,
  &_swigt__p_dtn_bundle_id_t,
  &_swigt__p_dtn_bundle_payload_location_t,
  &_swigt__p_dtn_bundle_payload_t,
  &_swigt__p_dtn_bundle_payload_t_buf,
  &_swigt__p_dtn_bundle_payload_t_filename,
  &_swigt__p_dtn_bundle_priority_t,
  &_swigt__p_dtn_bundle_spec_t,
  &_swigt__p_dtn_bundle_spec_t_blocks,
  &_swigt__p_dtn_bundle_spec_t_metadata,
  &_swigt__p_dtn_bundle_status_report_t,
  &_swigt__p_dtn_endpoint_id_t,
  &_swigt__p_dtn_extension_block_flags_t,
  &_swigt__p_dtn_extension_block_t,
  &_swigt__p_dtn_extension_block_t_data,
  &_swigt__p_dtn_handle_t,
  &_swigt__p_dtn_reg_flags_t,
  &_swigt__p_dtn_reg_info_t,
  &_swigt__p_dtn_reg_info_t_script,
  &_swigt__p_dtn_sequence_id_t,
  &_swigt__p_dtn_sequence_id_t_data,
  &_swigt__p_dtn_service_tag_t,
  &_swigt__p_dtn_session_info,
  &_swigt__p_dtn_status_report,
  &_swigt__p_dtn_status_report_flags_t,
  &_swigt__p_dtn_status_report_reason_t,
  &_swigt__p_dtn_timestamp_t,
  &_swigt__p_mapT_unsigned_int_dtn_handle_t_t,
  &_swigt__p_u_int,
};

static swig_cast_info _swigc__p_XDR[] = {  {&_swigt__p_XDR, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_bool_t[] = {  {&_swigt__p_bool_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle[] = {  {&_swigt__p_dtn_bundle, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_delivery_opts_t[] = {  {&_swigt__p_dtn_bundle_delivery_opts_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_id[] = {  {&_swigt__p_dtn_bundle_id, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_id_t[] = {  {&_swigt__p_dtn_bundle_id_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_payload_location_t[] = {  {&_swigt__p_dtn_bundle_payload_location_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_payload_t[] = {  {&_swigt__p_dtn_bundle_payload_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_payload_t_buf[] = {  {&_swigt__p_dtn_bundle_payload_t_buf, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_payload_t_filename[] = {  {&_swigt__p_dtn_bundle_payload_t_filename, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_priority_t[] = {  {&_swigt__p_dtn_bundle_priority_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_spec_t[] = {  {&_swigt__p_dtn_bundle_spec_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_spec_t_blocks[] = {  {&_swigt__p_dtn_bundle_spec_t_blocks, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_spec_t_metadata[] = {  {&_swigt__p_dtn_bundle_spec_t_metadata, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_bundle_status_report_t[] = {  {&_swigt__p_dtn_bundle_status_report_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_endpoint_id_t[] = {  {&_swigt__p_dtn_endpoint_id_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_extension_block_flags_t[] = {  {&_swigt__p_dtn_extension_block_flags_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_extension_block_t[] = {  {&_swigt__p_dtn_extension_block_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_extension_block_t_data[] = {  {&_swigt__p_dtn_extension_block_t_data, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_handle_t[] = {  {&_swigt__p_dtn_handle_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_reg_flags_t[] = {  {&_swigt__p_dtn_reg_flags_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_reg_info_t[] = {  {&_swigt__p_dtn_reg_info_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_reg_info_t_script[] = {  {&_swigt__p_dtn_reg_info_t_script, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_sequence_id_t[] = {  {&_swigt__p_dtn_sequence_id_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_sequence_id_t_data[] = {  {&_swigt__p_dtn_sequence_id_t_data, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_service_tag_t[] = {  {&_swigt__p_dtn_service_tag_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_session_info[] = {  {&_swigt__p_dtn_session_info, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_status_report[] = {  {&_swigt__p_dtn_status_report, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_status_report_flags_t[] = {  {&_swigt__p_dtn_status_report_flags_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_status_report_reason_t[] = {  {&_swigt__p_dtn_status_report_reason_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dtn_timestamp_t[] = {  {&_swigt__p_dtn_timestamp_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_mapT_unsigned_int_dtn_handle_t_t[] = {  {&_swigt__p_mapT_unsigned_int_dtn_handle_t_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_u_int[] = {  {&_swigt__p_u_int, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_XDR,
  _swigc__p_bool_t,
  _swigc__p_char,
  _swigc__p_dtn_bundle,
  _swigc__p_dtn_bundle_delivery_opts_t,
  _swigc__p_dtn_bundle_id,
  _swigc__p_dtn_bundle_id_t,
  _swigc__p_dtn_bundle_payload_location_t,
  _swigc__p_dtn_bundle_payload_t,
  _swigc__p_dtn_bundle_payload_t_buf,
  _swigc__p_dtn_bundle_payload_t_filename,
  _swigc__p_dtn_bundle_priority_t,
  _swigc__p_dtn_bundle_spec_t,
  _swigc__p_dtn_bundle_spec_t_blocks,
  _swigc__p_dtn_bundle_spec_t_metadata,
  _swigc__p_dtn_bundle_status_report_t,
  _swigc__p_dtn_endpoint_id_t,
  _swigc__p_dtn_extension_block_flags_t,
  _swigc__p_dtn_extension_block_t,
  _swigc__p_dtn_extension_block_t_data,
  _swigc__p_dtn_handle_t,
  _swigc__p_dtn_reg_flags_t,
  _swigc__p_dtn_reg_info_t,
  _swigc__p_dtn_reg_info_t_script,
  _swigc__p_dtn_sequence_id_t,
  _swigc__p_dtn_sequence_id_t_data,
  _swigc__p_dtn_service_tag_t,
  _swigc__p_dtn_session_info,
  _swigc__p_dtn_status_report,
  _swigc__p_dtn_status_report_flags_t,
  _swigc__p_dtn_status_report_reason_t,
  _swigc__p_dtn_timestamp_t,
  _swigc__p_mapT_unsigned_int_dtn_handle_t_t,
  _swigc__p_u_int,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic 
 * memory is used. Also, since swig_type_info structures store pointers to 
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization. 
 * The idea is that swig generates all the structures that are needed. 
 * The runtime then collects these partially filled structures. 
 * The SWIG_InitializeModule function takes these initial arrays out of 
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned staticly to an initial 
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it 
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded. 
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the 
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int found, init;
  
  //dzdebug  clientdata = clientdata;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
    module_head = &swig_module;
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    found=0;
    iter=module_head;
    do {
      if (iter==&swig_module) {
        found=1;
        break;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* if the is found in the list, then all is done and we may leave */
    if (found) return;
    /* otherwise we must add out module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpeters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %d\n", swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %d %s\n", i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif


#ifdef __cplusplus
extern "C" {
#endif
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  
  SWIGINTERN void
  SWIG_Tcl_InstallConstants(Tcl_Interp *interp, swig_const_info constants[]) {
    int i;
    Tcl_Obj *obj;
    
    if (!swigconstTableinit) {
      Tcl_InitHashTable(&swigconstTable, TCL_STRING_KEYS);
      swigconstTableinit = 1;
    }
    for (i = 0; constants[i].type; i++) {
      switch(constants[i].type) {
      case SWIG_TCL_POINTER:
        obj = SWIG_NewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_TCL_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        SWIG_Tcl_SetConstantObj(interp, constants[i].name, obj);
      }
    }
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

SWIGEXPORT int SWIG_init(Tcl_Interp *interp) {
  int i;
  if (interp == 0) return TCL_ERROR;
#ifdef USE_TCL_STUBS
  if (Tcl_InitStubs(interp, (char*)"8.1", 0) == NULL) {
    return TCL_ERROR;
  }
#endif  
  Tcl_PkgProvide(interp, (char*)SWIG_name, (char*)SWIG_version);
  
#ifdef SWIG_namespace
  Tcl_Eval(interp, "namespace eval " SWIG_namespace " { }");
#endif
  
  SWIG_InitializeModule((void *) interp);
  SWIG_PropagateClientData();
  
  for (i = 0; swig_commands[i].name; i++) {
    Tcl_CreateObjCommand(interp, (char *) swig_commands[i].name, (swig_wrapper_func) swig_commands[i].wrapper,
      swig_commands[i].clientdata, NULL);
  }
  for (i = 0; swig_variables[i].name; i++) {
    Tcl_SetVar(interp, (char *) swig_variables[i].name, (char *) "", TCL_GLOBAL_ONLY);
    Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_READS | TCL_GLOBAL_ONLY, 
      (Tcl_VarTraceProc *) swig_variables[i].get, (ClientData) swig_variables[i].addr);
    Tcl_TraceVar(interp, (char *) swig_variables[i].name, TCL_TRACE_WRITES | TCL_GLOBAL_ONLY, 
      (Tcl_VarTraceProc *) swig_variables[i].set, (ClientData) swig_variables[i].addr);
  }
  
  SWIG_Tcl_InstallConstants(interp, swig_constants);
  
  
  SWIG_Tcl_SetConstantObj(interp, "DTN_MAX_ENDPOINT_ID", SWIG_From_int(static_cast< int >(256)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_MAX_AUTHDATA", SWIG_From_int(static_cast< int >(1024)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_MAX_REGION_LEN", SWIG_From_int(static_cast< int >(64)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_MAX_BUNDLE_MEM", SWIG_From_int(static_cast< int >(50000)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_MAX_BLOCK_LEN", SWIG_From_int(static_cast< int >(1024)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_MAX_BLOCKS", SWIG_From_int(static_cast< int >(256)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_REGID_NONE", SWIG_From_int(static_cast< int >(0)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_REG_DROP", SWIG_From_int(static_cast< int >(DTN_REG_DROP)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_REG_DEFER", SWIG_From_int(static_cast< int >(DTN_REG_DEFER)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_REG_EXEC", SWIG_From_int(static_cast< int >(DTN_REG_EXEC)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_SESSION_CUSTODY", SWIG_From_int(static_cast< int >(DTN_SESSION_CUSTODY)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_SESSION_PUBLISH", SWIG_From_int(static_cast< int >(DTN_SESSION_PUBLISH)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_SESSION_SUBSCRIBE", SWIG_From_int(static_cast< int >(DTN_SESSION_SUBSCRIBE)));
  SWIG_Tcl_SetConstantObj(interp, "COS_BULK", SWIG_From_int(static_cast< int >(COS_BULK)));
  SWIG_Tcl_SetConstantObj(interp, "COS_NORMAL", SWIG_From_int(static_cast< int >(COS_NORMAL)));
  SWIG_Tcl_SetConstantObj(interp, "COS_EXPEDITED", SWIG_From_int(static_cast< int >(COS_EXPEDITED)));
  SWIG_Tcl_SetConstantObj(interp, "COS_RESERVED", SWIG_From_int(static_cast< int >(COS_RESERVED)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_NONE", SWIG_From_int(static_cast< int >(DOPTS_NONE)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_CUSTODY", SWIG_From_int(static_cast< int >(DOPTS_CUSTODY)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_DELIVERY_RCPT", SWIG_From_int(static_cast< int >(DOPTS_DELIVERY_RCPT)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_RECEIVE_RCPT", SWIG_From_int(static_cast< int >(DOPTS_RECEIVE_RCPT)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_FORWARD_RCPT", SWIG_From_int(static_cast< int >(DOPTS_FORWARD_RCPT)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_CUSTODY_RCPT", SWIG_From_int(static_cast< int >(DOPTS_CUSTODY_RCPT)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_DELETE_RCPT", SWIG_From_int(static_cast< int >(DOPTS_DELETE_RCPT)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_SINGLETON_DEST", SWIG_From_int(static_cast< int >(DOPTS_SINGLETON_DEST)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_MULTINODE_DEST", SWIG_From_int(static_cast< int >(DOPTS_MULTINODE_DEST)));
  SWIG_Tcl_SetConstantObj(interp, "DOPTS_DO_NOT_FRAGMENT", SWIG_From_int(static_cast< int >(DOPTS_DO_NOT_FRAGMENT)));
  SWIG_Tcl_SetConstantObj(interp, "BLOCK_FLAG_NONE", SWIG_From_int(static_cast< int >(BLOCK_FLAG_NONE)));
  SWIG_Tcl_SetConstantObj(interp, "BLOCK_FLAG_REPLICATE", SWIG_From_int(static_cast< int >(BLOCK_FLAG_REPLICATE)));
  SWIG_Tcl_SetConstantObj(interp, "BLOCK_FLAG_REPORT", SWIG_From_int(static_cast< int >(BLOCK_FLAG_REPORT)));
  SWIG_Tcl_SetConstantObj(interp, "BLOCK_FLAG_DELETE_BUNDLE", SWIG_From_int(static_cast< int >(BLOCK_FLAG_DELETE_BUNDLE)));
  SWIG_Tcl_SetConstantObj(interp, "BLOCK_FLAG_LAST", SWIG_From_int(static_cast< int >(BLOCK_FLAG_LAST)));
  SWIG_Tcl_SetConstantObj(interp, "BLOCK_FLAG_DISCARD_BLOCK", SWIG_From_int(static_cast< int >(BLOCK_FLAG_DISCARD_BLOCK)));
  SWIG_Tcl_SetConstantObj(interp, "BLOCK_FLAG_UNPROCESSED", SWIG_From_int(static_cast< int >(BLOCK_FLAG_UNPROCESSED)));
  SWIG_Tcl_SetConstantObj(interp, "REASON_NO_ADDTL_INFO", SWIG_From_int(static_cast< int >(REASON_NO_ADDTL_INFO)));
  SWIG_Tcl_SetConstantObj(interp, "REASON_LIFETIME_EXPIRED", SWIG_From_int(static_cast< int >(REASON_LIFETIME_EXPIRED)));
  SWIG_Tcl_SetConstantObj(interp, "REASON_FORWARDED_UNIDIR_LINK", SWIG_From_int(static_cast< int >(REASON_FORWARDED_UNIDIR_LINK)));
  SWIG_Tcl_SetConstantObj(interp, "REASON_TRANSMISSION_CANCELLED", SWIG_From_int(static_cast< int >(REASON_TRANSMISSION_CANCELLED)));
  SWIG_Tcl_SetConstantObj(interp, "REASON_DEPLETED_STORAGE", SWIG_From_int(static_cast< int >(REASON_DEPLETED_STORAGE)));
  SWIG_Tcl_SetConstantObj(interp, "REASON_ENDPOINT_ID_UNINTELLIGIBLE", SWIG_From_int(static_cast< int >(REASON_ENDPOINT_ID_UNINTELLIGIBLE)));
  SWIG_Tcl_SetConstantObj(interp, "REASON_NO_ROUTE_TO_DEST", SWIG_From_int(static_cast< int >(REASON_NO_ROUTE_TO_DEST)));
  SWIG_Tcl_SetConstantObj(interp, "REASON_NO_TIMELY_CONTACT", SWIG_From_int(static_cast< int >(REASON_NO_TIMELY_CONTACT)));
  SWIG_Tcl_SetConstantObj(interp, "REASON_BLOCK_UNINTELLIGIBLE", SWIG_From_int(static_cast< int >(REASON_BLOCK_UNINTELLIGIBLE)));
  SWIG_Tcl_SetConstantObj(interp, "STATUS_RECEIVED", SWIG_From_int(static_cast< int >(STATUS_RECEIVED)));
  SWIG_Tcl_SetConstantObj(interp, "STATUS_CUSTODY_ACCEPTED", SWIG_From_int(static_cast< int >(STATUS_CUSTODY_ACCEPTED)));
  SWIG_Tcl_SetConstantObj(interp, "STATUS_FORWARDED", SWIG_From_int(static_cast< int >(STATUS_FORWARDED)));
  SWIG_Tcl_SetConstantObj(interp, "STATUS_DELIVERED", SWIG_From_int(static_cast< int >(STATUS_DELIVERED)));
  SWIG_Tcl_SetConstantObj(interp, "STATUS_DELETED", SWIG_From_int(static_cast< int >(STATUS_DELETED)));
  SWIG_Tcl_SetConstantObj(interp, "STATUS_ACKED_BY_APP", SWIG_From_int(static_cast< int >(STATUS_ACKED_BY_APP)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_PAYLOAD_FILE", SWIG_From_int(static_cast< int >(DTN_PAYLOAD_FILE)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_PAYLOAD_MEM", SWIG_From_int(static_cast< int >(DTN_PAYLOAD_MEM)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_PAYLOAD_TEMP_FILE", SWIG_From_int(static_cast< int >(DTN_PAYLOAD_TEMP_FILE)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_SUCCESS", SWIG_From_int(static_cast< int >(0)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_ERRBASE", SWIG_From_int(static_cast< int >(128)));
  SWIG_Tcl_SetConstantObj(interp, "DTN_EINVAL", SWIG_From_int(static_cast< int >((128+1))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_EXDR", SWIG_From_int(static_cast< int >((128+2))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_ECOMM", SWIG_From_int(static_cast< int >((128+3))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_ECONNECT", SWIG_From_int(static_cast< int >((128+4))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_ETIMEOUT", SWIG_From_int(static_cast< int >((128+5))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_ESIZE", SWIG_From_int(static_cast< int >((128+6))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_ENOTFOUND", SWIG_From_int(static_cast< int >((128+7))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_EINTERNAL", SWIG_From_int(static_cast< int >((128+8))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_EINPOLL", SWIG_From_int(static_cast< int >((128+9))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_EBUSY", SWIG_From_int(static_cast< int >((128+10))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_EVERSION", SWIG_From_int(static_cast< int >((128+11))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_EMSGTYPE", SWIG_From_int(static_cast< int >((128+12))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_ENOSPACE", SWIG_From_int(static_cast< int >((128+13))));
  SWIG_Tcl_SetConstantObj(interp, "DTN_ERRMAX", SWIG_From_int(static_cast< int >(255)));
  return TCL_OK;
}
SWIGEXPORT int Dtnapi_SafeInit(Tcl_Interp *interp) {
  return SWIG_init(interp);
}

