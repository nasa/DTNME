#
#    Copyright 2005-2006 Intel Corporation
# 
#    Licensed under the Apache License, Version 2.0 (the "License");
#    you may not use this file except in compliance with the License.
#    You may obtain a copy of the License at
# 
#        http://www.apache.org/licenses/LICENSE-2.0
# 
#    Unless required by applicable law or agreed to in writing, software
#    distributed under the License is distributed on an "AS IS" BASIS,
#    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#    See the License for the specific language governing permissions and
#    limitations under the License.
#

# 
#  configure.ac -- input file for configure script
# 
#  Note: make sure to run build-configure.sh when any changes are
#        made to this file or to any of the files in aclocal

AC_PREREQ(2.57)
AC_INIT(oasys)
AC_CONFIG_SRCDIR([oasys-version.h])
AC_CONFIG_HEADER([oasys-config.h])
AC_PREFIX_DEFAULT([/usr])

#  Stick a comment in the generated file so people know what to do.
AC_REVISION([-- DO NOT EDIT THIS FILE!  See the instructions in configure.ac --])

AC_COPYRIGHT([
   Copyright 2005-2007 Intel Corporation

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

])
	       
AC_DEFINE(OASYS_CONFIG_STATE, 1, 
          [defined so code can ensure that oasys-config.h is properly included])
	       
#  This is handy to re-run configure but use any options you used before.
AC_ARG_WITH(
  [previous-options],
  [AS_HELP_STRING(
    [--with-previous-options],
    [read config.status for configure options])],
  [
if test -r ./config.status &&
   args=`sed -n '7s/^# [^ ]* //p' config.status`
then
    set -x
    exec $0 $args
fi
  ])

#  First set srcdir and builddir, calculated above in AC_CONFIG_SRCDIR
AC_MSG_CHECKING([location of source directory])
SRCDIR=`(cd $srcdir && pwd)`
AC_MSG_RESULT([\"$SRCDIR\"])
AC_SUBST([SRCDIR])

builddir=`pwd`
AC_MSG_CHECKING([location of build directory])
AC_MSG_RESULT([\"$builddir\"])
BUILDDIR=$builddir
AC_SUBST([BUILDDIR])

# -------------------------------------------------------------------------
# Dump the autoconf cache now to try to avoid redundant checks
# -------------------------------------------------------------------------
AC_CACHE_SAVE

# -------------------------------------------------------------------------
# Checks for dependent third-party libraries
# -------------------------------------------------------------------------
AX_WITH_PYTHON
AC_PYTHON_BUILD_EXT
AC_CONFIG_TCL
AC_CONFIG_GOOGLE_PERFTOOLS
AC_CONFIG_BLUEZ
AC_CONFIG_EXPAT
AC_CONFIG_XERCES
AC_CONFIG_TCLREADLINE
AC_CONFIG_ZLIB
AC_CONFIG_XSD
AC_CONFIG_STORAGE
AC_CONFIG_AX25
AC_CONFIG_ODBC

# -------------------------------------------------------------------------
# Pull in the checks for gcc and system dependencies
# -------------------------------------------------------------------------
AC_OASYS_CONFIG_GCC
AC_OASYS_CONFIG_SYSTEM
AC_OASYS_CONFIG_ATOMIC
AC_OASYS_CONFIG_CPP11_ABI

# -------------------------------------------------------------------------
# Output
# -------------------------------------------------------------------------

dnl
dnl To put the extlib flags settings in System.make, not
dnl Rules.make, change the name for the substituted variable.
dnl
dnl That way other projects that use oasys' Rules.make can 
dnl use EXTLIB_CFLAGS and EXTLIB_LDFLAGS for their own dependencies.
dnl
SYS_EXTLIB_CFLAGS=$EXTLIB_CFLAGS
SYS_EXTLIB_CXXFLAGS=$EXTLIB_CXXFLAGS
SYS_EXTLIB_LDFLAGS=$EXTLIB_LDFLAGS
EXTLIB_CFLAGS=
EXTLIB_CXXFLAGS=
EXTLIB_LDFLAGS=

dnl
dnl Set the oasys locations to properly set up Rules.make
dnl
OASYS_INCDIR=$SRCDIR
OASYS_LIBDIR=$BUILDDIR/lib
OASYS_ETCDIR=$SRCDIR

mkdir -p $OASYS_LIBDIR

INCFLAGS="-I\$(SRCDIR)/ext"
AC_SUBST(INCFLAGS)

dnl
dnl Add a hook to create a symlink to .
dnl


AC_OASYS_SUBST_CONFIG

AC_CONFIG_FILES([Rules.make])
AC_CONFIG_FILES([System.make])

dnl
dnl Add directories 'include' and 'share', each containing a symlink
dnl called 'oasys' pointing to the source directory so that the
dnl include path works properly when using the --with-oasys configure
dnl option to point to a source directory or a build directory.
dnl

#rm -rf include share
#mkdir include
#mkdir share
#ln -s $SRCDIR include/oasys
#ln -s $SRCDIR share/oasys

if test ! $SRCDIR = `pwd` ; then
   AC_SUBST([SUBDIR])
   AC_CONFIG_FILES([Makefile:Makefile-Builddir.in])
fi

AC_OUTPUT

gmake buildopts


