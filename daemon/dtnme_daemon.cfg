#
# dtnme_daemon.conf
#
# Default configuration file for Internet-connected DTN nodes. The
# daemon uses a tcl interpreter to parse this file, thus any standard
# tcl commands are valid, and all settings are get/set using a single
# 'set' functions as: <module> set <var> <val?>
#

########################################
#
# Local Configuration Parameters
#
########################################
# DTNME requires a DTN scheme EID. We construct it from the local 
# host name by default but it can be manually set for uniqueness 
# if running multiple DTN servers on the same system
### set shorthostname [lindex [split [info hostname] .] 0]
set local_node_number      node_eid
set local_node_name        node_${local_node_number}
set local_dtn_eid          dtn://${local_node_name}.test

# the IPN scheme EID for this server must use a 0 service ID
set local_ipn_eid          ipn:${local_node_number}.0

# these ports are the default values but can be changed for uniqueness
# if running multiple DTN servers on the same system
set local_console_addr     127.0.0.1
set local_console_port     12345
set local_api_port         12345
set local_storage_server   12345
set local_ip_address       127.0.0.1
set local_tcp_port         12345
set local_stcp_port        12345
set local_udp_port         12345
set local_ltp_port         12345

# define the directory(s) for log files and the database
set local_log_dir          ${local_node_name}
set local_db_dir           ${local_node_name}
# try to create the directory paths
file mkdir $local_log_dir
file mkdir $local_db_dir

# parameters to connect to a remote DTN server

## HOSC GW
set remote1_link_name        remote1_link
set remote1_node_number      2
set remote1_ip_address       192.168.1.1
set remote1_node_name        node${remote1_node_number}
set remote1_dtn_eid          dtn://${remote1_node_name}.test
set remote1_eid              ipn:${remote1_node_number}.0
set remote1_tcp_port         12345
set remote1_stcp_port        12345
set remote1_udp_port         12345
set remote1_ltp_port         12345
set remote1_route_pattern    ipn:${remote1_node_number}.*
set remote1_dtn_route_pattern ${remote1_dtn_eid}/*



puts stderr "configuring for LTPUDP between $local_ipn_eid and $remote1_eid"



########################################
#
# Initialize the log file
#
########################################
# Rotate the log every 86400 seconds (1 day)
# the initial call to rotate (after the proc) is required to
# start the proc running every 1 day
proc rotate {local_log_dir} {
    if {[file exists ${local_log_dir}/dtn.log]} {
        set date [ clock format [ clock seconds ] -format "%Y-%m-%d-%H-%M-%S" ]
        set new "${local_log_dir}/dtn.$date.log"
        file rename "${local_log_dir}/dtn.log" $new
    }

    log rotate

    after 86400000 rotate ${local_log_dir}
}
rotate ${local_log_dir}


log /dtnme info "dtnme parsing configuration..."
log /dtnme info "configuring for EID: ${local_dtn_eid}   and IPN: ${local_ipn_eid}"




########################################
#
# Daemon Console Configuration
#
########################################

#
# console set stdio [ true | false ]
#
# If set to false, disable the interactive console on stdin/stdout.
# The default is set to true (unless the dtnme process is run as a
# daemon).
#
# console set stdio false

#
# console set addr <port>
# console set port <port>
#
# Settings for the socket based console protocol.
# (this interprets user commands)
#
console set addr $local_console_addr
console set port $local_console_port

#
# api port (default 5010)
#
api set local_port $local_api_port
##api set enabled false


#
#
# console set prompt <prompt>
#
# Set the prompt string.  Helps if running multiple dtnme's
#
console set prompt "$local_node_name dtn% "

########################################
#
# Storage Configuration
#
########################################

#
# storage set type [ berkeleydb | postgres | mysql  | external ]
#
# Set the storage system to be used
#
storage set type berkeleydb
#storage set type memorydb

# the following are for use with external data stores
#
# The server port to connect to (on localhost)
# Note that 12345 has no special significance -- chosen randomly
storage set server_port $local_storage_server

# The external data store schema location, which can be
# found in dtn2/oasys/storage/DS.xsd.
#storage set schema DS.xsd

if {$local_db_dir == ""} {
    puts stderr "Must create ${local_db_dir} storage directory"
    exit 1
}

#
# storage set payloaddir <dir>
#
# Set the directory to be used for bundle payload files
#
storage set payloaddir ${local_db_dir}/bundles

#
# storage set dbname <db>
#
# Set the database name (appended with .db as the filename in berkeley
# db, used as-is for SQL variants
#
storage set dbname     DTN

#
# storage set dbdir    <dir>
#
#
# When using berkeley db, set the directory to be used for the
# database files and the name of the files and error log.
#
storage set dbdir      ${local_db_dir}/db

#
# storage set db_log_auto_removal
#
# 
# When using berkeley db, turn this flag on to keep the
# transaction logs from filling up the partition
#
storage set db_log_auto_removal true

#
# Payload quota
#
storage set payload_quota 200000000000

########################################
#
# Routing configuration
#
########################################

#
# Set the algorithm used for dtn routing.
#
# route set type [static | flood | neighborhood | linkstate | external]
#
route set type static

# custody timeout values
param set custody_timer_min 15
param set custody_timer_max 30
#
# route local_eid <eid>
#
# Set the local administrative id of this node. The default just uses
# the internet hostname plus the appended string ".dtn" to make it
# clear that the hostname isn't really used for DNS lookups.
#
route local_eid ${local_dtn_eid}

#
# route local_eid_ipn <eid>
#
# Set the local administrative ipn:x.0 style id of this node 
# to take advantage of CBHE compression when working with ipn:
# destined bundles
#
route local_eid_ipn ${local_ipn_eid}

#
# param set announce_ipn <true or false>
#
# When establishing a TCP connection with another DTN server,
# provide the local IPN EID instead of the DTN EID if true
param set announce_ipn true


#
# External router specific options
#
# route set server_port 8001
# route set hello_interval 30
# route set schema "/etc/router.xsd"

########################################
#
# Convergence layer configuration
#
########################################


param set recreate_links_on_restart false
param set persistent_links true


#
# interface add [name] [CL]
#
# Add an input interface to listen on addr:port for incoming bundles
# from other tcp / udp convergence layers
#
# For IP-based interfaces, interfaces listen on INADDR_ANY port 4556
# by default. These can be overridden by using the local_addr and/or
# local_port arguments.
#interface add tcp0 tcp local_port=$local_tcp_port
#interface add stcp0 stcp local_port=$local_stcp_port
#interface add udp0 udp local_addr=$local_ip_address local_port=$local_udp_port
#interface add ltp0 ltpudp local_addr=$local_ip_address local_port=$local_ltp_port

#
# link add <name> <nexthop> <type> <clayer> <args...>
#
# Add a link to a peer node.
# 
# For IP-based links (tcp or udp), the nexthop should contain a DNS
# hostname or IP address, followed optionally by a : and a port. If
# the port is not specified, the default of 4556 is used.
#
# e.g.  link add link1 dtn.dtnrg.org ONDEMAND tcp
#       link add link2 dtn2.dtnrg.org:10000 ONDEMAND tcp
# For IP-based links (tcp or udp), the nexthop should contain a DNS
# hostname or IP address, followed optionally by a : and a port. If
# the port is not specified, the default of 4556 is used.
#
#link add null /dev/null ALWAYSON null


########################################
#
# Remote Link configuration
#
########################################
#
# Add the link definition to the remote node
#
# link add <name> <nexthop> <type> <clayer> <args...>
#


#link add ${remote1_link_name} ${remote1_ip_address}:${remote1_udp_port} ALWAYSON udp mtu=32000 rate=100000000
#link add ${remote1_link_name} ${remote1_ip_address}:${remote1_ltp_port} ALWAYSON ltpudp inact_intvl=30 retran_intvl=7 retran_retries=7 remote_engine_id=2 rate=10G max_sessions=5000 agg_size=1360 agg_time=0 recvbuf=5000000 sendbuf=5000000 seg_size=1360 
#link add ${remote1_link_name} ${remote1_ip_address}:${remote1_tcp_port} ALWAYSON tcp3
#link add ${remote1_link_name} ${remote1_ip_address}:${remote1_tcp_port} ALWAYSON tcp tls_enabled=true tls_link_verify_certs_dir=./certs/server/verify tls_link_private_key_file=./certs/server/server-key.pem tls_link_cert_file=./certs/server/server-cert.pem
#link add ${remote1_link_name} ${remote1_ip_address}:${remote1_tcp_port} ALWAYSON stcp min_retry_interval=5 max_retry_interval=5


#
# Add the routing along the link
#
# route add <dest> <link|peer>
#
# Add a route to the given bundle endpoint id pattern <dest> using the
# specified link name or peer endpoint.
#
# e.g. route add dtn://host.domain/* tcp0

#route add ipn:1.* ${remote1_link_name}
#route add ipn:2.* ${remote1_link_name}

### !! routes defined here are not used for the external router



########################################
#
# Parameter Tuning
#
########################################

#
# Set the size threshold for the daemon so any bundles smaller than this
# size maintain a shadow copy in memory to minimize disk accesses. 
#
# param set payload_mem_threshold 16384

#
# Test option to keep all bundle files in the filesystem, even after the
# bundle is no longer present at the daemon.
#
# param set payload_test_no_remove true

#
# Set the size for which the tcp convergence layer sends partial reception
# acknowledgements. Used with reactive fragmentation
#
# param set tcpcl_partial_ack_len 4096

#  param set data_timeout 60
#
# Set if bundles are automatically deleted after transmission
#
param set early_deletion true

# (others exist but are not fully represented here)

#
# Minimum time in seconds before retrying to establish a link
param set link_min_retry_interval 5

#
# Maximum time in seconds before retrying to establish a link
param set link_max_retry_interval 5
 

log /dtnme info "dtnme configuration parsing complete"


